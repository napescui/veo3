{"file_contents":{"README.md":{"content":"# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n# WhatsAppAiHelper\n","size_bytes":190},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# JrennGenerator - Professional Video Editor Platform\n\n## Overview\n\nJrennGenerator is a comprehensive web-based video editing platform that combines AI-powered video generation with a full-featured video editor similar to Adobe Premiere Pro. The platform provides both automated video creation and professional editing capabilities. Key features include:\n\n**AI Video Generation:**\n- **Text-to-Video Generation**: Convert text prompts into 8-second AI videos using anabot.my.id API\n- **Prompt Enhancement**: AI-powered prompt improvement using Gemini 2.5 Flash for better video quality\n- **Auto-Translation**: Automatic translation from Indonesian to English for optimal video generation\n- **Background Processing**: Queue up to 10 concurrent video generations with real-time status tracking\n\n**Professional Video Editor:**\n- **Multi-Track Timeline**: Unlimited video and audio tracks with drag & drop functionality\n- **Advanced Editing**: Cut, trim, split, transitions, speed control, and keyframe animation\n- **Color Correction**: Exposure, contrast, saturation, temperature, and LUT support\n- **Audio Editing**: Multi-track audio, EQ, volume keyframes, and fade effects\n- **Text & Graphics**: Dynamic text layers, lower-thirds, captions, and image overlays\n- **Real-Time Preview**: WebGL/WebGPU compositing with smooth playback\n- **Export Options**: Server-side FFmpeg rendering with multiple format presets\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React with TypeScript using Vite as the build tool\n- **UI Components**: shadcn/ui component library built on Radix UI primitives\n- **Styling**: Tailwind CSS with custom design system featuring dark theme and gradient color schemes\n- **State Management**: TanStack React Query for server state management and caching\n- **Routing**: Wouter for lightweight client-side routing\n- **Form Handling**: React Hook Form with Zod validation for type-safe form management\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js REST API\n- **Language**: TypeScript with ES modules\n- **Database ORM**: Drizzle ORM configured for PostgreSQL with Neon database support\n- **Session Management**: In-memory storage for development with plans for PostgreSQL sessions\n- **Error Handling**: Centralized error handling middleware with structured error responses\n- **Logging**: Custom request/response logging with performance metrics\n\n### Data Storage Solutions\n- **Primary Database**: PostgreSQL (configured for Neon serverless)\n- **ORM**: Drizzle ORM with migrations support\n- **Schema**: Type-safe database schema with Zod validation\n- **Development Storage**: In-memory storage implementation for rapid development\n- **Session Store**: PostgreSQL-backed sessions using connect-pg-simple\n\n### Authentication and Authorization\n- **Session-based Authentication**: Uses Express sessions with PostgreSQL backing\n- **CORS**: Configured for cross-origin requests in development\n- **Request Validation**: Zod schemas for type-safe API request/response validation\n\n### External Service Integrations\n- **Video Generation**: anabot.my.id API integration for AI video generation\n- **AI Enhancement**: Google Gemini 2.5 Flash API for prompt enhancement and translation services\n- **Video Processing Pipeline**: \n  - Submit generation requests with text prompts\n  - Poll for completion status with automatic retries\n  - Handle success/failure states with appropriate user feedback\n  - Support for concurrent processing of up to 10 videos\n- **Asset Management**: Static file serving for generated video content\n- **Language Processing**: Auto-detection and translation of Indonesian prompts to English\n\n### Key Architectural Decisions\n\n**Monorepo Structure**: The application uses a shared type system between client and server with a `/shared` directory containing common schemas and types, reducing code duplication and ensuring type consistency.\n\n**Progressive Enhancement**: The application starts with in-memory storage for rapid development and can be easily upgraded to persistent PostgreSQL storage without changing the interface contracts.\n\n**Component-Driven UI**: Built on shadcn/ui for consistent, accessible, and customizable components with proper TypeScript support throughout the component tree.\n\n**Real-time Status Updates**: Uses React Query with polling intervals to provide real-time updates on video generation progress without requiring WebSocket infrastructure.\n\n**Multi-Video Queue Management**: Implements background processing for up to 10 concurrent video generations with real-time status tracking and queue visualization.\n\n**Fully Responsive Design Implementation**: Created comprehensive responsive design that adapts perfectly to laptop/PC, tablet, and mobile devices with optimized layouts, typography scaling, and touch-friendly interfaces.\n\n**Real HD Robot Video Integration**: Replaced SVG robot with real HD video that loops continuously, includes scroll-reactive effects and fallback system for optimal loading across all devices.\n\n**Customer Service Chatbot Implementation**: Added AI-powered customer service chat using Gemini 2.5 Flash API with real-time responses, professional interface, and comprehensive knowledge about Veo3 Lite features.\n\n**AI-Enhanced User Experience**: Integrates Gemini 2.5 Flash for intelligent prompt enhancement and automatic language translation to improve video generation quality.\n\n**Concurrent Video Processing**: Allows users to generate multiple videos simultaneously without blocking, supporting high-throughput video creation with real-time status updates.\n\n**Enhanced User Interface**: Moved video generation interface to the top of the homepage with improved design, compact layout, and Enter key support for quick video generation.\n\n**Migration to Standard Replit**: Successfully migrated from Replit Agent to standard Replit environment with proper PostgreSQL database integration and all dependencies configured.\n\n**Duplicate Prompt Detection**: Added intelligent duplicate prompt detection that shows confirmation dialog when users try to generate videos with identical prompts from their history.\n\n**Top-Priority Video Generator**: Moved the video generation interface to the very top of the homepage (above logo and marketing content) so authenticated users can immediately start creating videos without scrolling. This improves user experience by eliminating the need to scroll down to access the main functionality.\n\n**Enhanced Concurrent Video Processing**: Removed blocking restrictions - users can now generate multiple videos simultaneously without waiting for previous videos to complete processing. Only duplicate requests during the actual submission process are prevented to avoid server overload.\n\n**Comprehensive Legal Framework**: Added complete legal pages system including privacy policy, terms of service, cookie policy, acceptable use policy, DMCA policy, refund policy, security policy, AI disclosure, age verification, and data request management. All pages feature Indonesian primary content with English summaries, responsive design, and proper navigation integration.\n\n**Cookie Consent Management**: Implemented GDPR-compliant cookie banner with granular preferences (essential, functional, analytics, marketing), local storage persistence, and preference management dialog with detailed explanations.\n\n**Professional Footer Integration**: Added comprehensive footer with organized legal links, support information, company details, and system status indicators, replacing the basic layout.\n\n**Help System & Content Policy**: Created extensive help documentation including getting started guide, comprehensive FAQ with collapsible sections, and detailed content policy guidelines with examples and best practices.\n\n**Contact & Support Pages**: Implemented professional contact form with categorized inquiries, response time indicators, and dedicated support channels for different user types and concerns.\n\n**Pricing & Business Pages**: Added complete pricing page with plan comparison, feature breakdowns, FAQ section, and enterprise contact options with responsive design.\n\n**SEO & Technical Compliance**: Created sitemap.xml, robots.txt, and implemented proper meta tags, structured navigation, and search engine optimization for all legal and help pages.\n\n## External Dependencies\n\n- **Database**: Neon PostgreSQL serverless database with connection pooling\n- **Video Generation API**: anabot.my.id service for AI-powered video creation\n- **UI Framework**: Radix UI primitives for accessible, unstyled components\n- **Styling**: Tailwind CSS with custom design tokens and dark mode support\n- **Build Tools**: Vite for fast development and optimized production builds\n- **Development Tools**: TypeScript compiler, ESLint, and Replit-specific development plugins\n- **Session Storage**: PostgreSQL with connect-pg-simple for production session management\n- **Fonts**: Google Fonts (Inter) for consistent typography across the platform","size_bytes":9076},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"#6366f1\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"#8b5cf6\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"#f1f5f9\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // VideoAI Design Colors\n        dark: \"#0f172a\",\n        surface: \"#1e293b\",\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"pulse-slow\": \"pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite\",\n        \"spin-slow\": \"spin 3s linear infinite\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2959},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/gemini.ts":{"content":"import { GoogleGenAI } from \"@google/genai\";\n\n// Initialize Gemini AI with hardcoded API key\nconst ai = new GoogleGenAI({ apiKey: \"AIzaSyBreoZhTVNwNNDqviHS__RDJPRpCP-pvlc\" });\n\nexport async function enhancePrompt(text: string): Promise<string> {\n  try {\n    const systemPrompt = `You are an expert at enhancing video generation prompts. \nTransform the given text into a detailed, vivid, and visually compelling prompt for AI video generation.\nFocus on:\n- Visual details and cinematography\n- Lighting and atmosphere\n- Movement and dynamics\n- Color palette and mood\n- Camera angles and shots\n\nKeep the enhanced prompt under 200 words and make it engaging for 8-second video generation.\nRespond only with the enhanced prompt, no additional text.`;\n\n    const response = await ai.models.generateContent({\n      model: \"gemini-2.5-flash\",\n      config: {\n        systemInstruction: systemPrompt,\n      },\n      contents: text,\n    });\n\n    return response.text || text;\n  } catch (error) {\n    console.error(\"Failed to enhance prompt:\", error);\n    throw new Error(\"Gagal meningkatkan prompt\");\n  }\n}\n\nexport async function translateToEnglish(text: string): Promise<string> {\n  try {\n    const systemPrompt = `You are a professional translator. \nTranslate the given Indonesian text to natural, fluent English.\nIf the text is already in English, return it as is.\nFocus on maintaining the meaning and intent of the original text.\nRespond only with the translated text, no additional explanation.`;\n\n    const response = await ai.models.generateContent({\n      model: \"gemini-2.5-flash\",\n      config: {\n        systemInstruction: systemPrompt,\n      },\n      contents: text,\n    });\n\n    return response.text || text;\n  } catch (error) {\n    console.error(\"Failed to translate text:\", error);\n    throw new Error(\"Gagal menerjemahkan teks\");\n  }\n}\n\nexport async function detectLanguage(text: string): Promise<'id' | 'en'> {\n  try {\n    const systemPrompt = `Detect if the given text is in Indonesian (id) or English (en).\nRespond only with 'id' for Indonesian or 'en' for English, nothing else.`;\n\n    const response = await ai.models.generateContent({\n      model: \"gemini-2.5-flash\",\n      config: {\n        systemInstruction: systemPrompt,\n      },\n      contents: text,\n    });\n\n    const result = response.text?.trim().toLowerCase();\n    return result === 'id' ? 'id' : 'en';\n  } catch (error) {\n    console.error(\"Failed to detect language:\", error);\n    return 'en'; // Default to English\n  }\n}\n\n// Customer service chatbot function\nexport async function handleChatbotQuery(query: string): Promise<string> {\n  try {\n    const systemPrompt = `You are a helpful customer service assistant for VideoAI, an AI-powered video generation platform.\n    \nKey information about VideoAI:\n- We transform text prompts into professional 8-second videos using advanced AI\n- We support both Indonesian and English prompts (auto-translated)\n- Users can generate unlimited videos simultaneously (no limit)\n- Videos are automatically enhanced for better quality\n- All videos are saved to the downloads folder\n- Features include prompt enhancement, auto-translation, and real-time status tracking\n\nAnswer user questions professionally and helpfully. If asked about technical issues, guide them appropriately.\nKeep responses concise but informative. Always be polite and helpful.`;\n\n    const response = await ai.models.generateContent({\n      model: \"gemini-2.5-flash\",\n      config: {\n        systemInstruction: systemPrompt,\n      },\n      contents: query,\n    });\n\n    return response.text || \"Maaf, saya tidak dapat memproses pertanyaan Anda saat ini. Silakan coba lagi.\";\n  } catch (error) {\n    console.error(\"Failed to process chatbot query:\", error);\n    return \"Maaf, terjadi kesalahan pada sistem. Silakan coba lagi nanti.\";\n  }\n}\n\nexport async function generateRecommendations(userPrompts: string): Promise<string[]> {\n    try {\n        const systemPrompt = `You are a creative AI assistant that generates video prompt recommendations based on user patterns. \n        \nBased on the user's previous prompts: \"${userPrompts}\"\n\nGenerate 4 new creative video prompt recommendations that match the user's interests and themes. Consider:\n- Similar themes, characters, or settings the user enjoys\n- Creative variations or new ideas in the same style\n- Keep prompts concise but descriptive (max 50 words each)\n- Make them suitable for 8-second AI video generation\n\nReturn ONLY a JSON array of 4 strings, nothing else.`;\n\n        const response = await ai.models.generateContent({\n            model: \"gemini-2.5-flash\",\n            config: {\n                systemInstruction: systemPrompt,\n                responseMimeType: \"application/json\",\n            },\n            contents: userPrompts,\n        });\n\n        const rawJson = response.text;\n        if (rawJson) {\n            const recommendations = JSON.parse(rawJson);\n            if (Array.isArray(recommendations) && recommendations.length >= 4) {\n                return recommendations.slice(0, 4);\n            }\n        }\n\n        // Fallback if parsing fails\n        return [\n            \"A cat playing piano in a cozy room\",\n            \"Spiderman dancing on a rooftop\",  \n            \"Ocean waves crashing against cliffs\",\n            \"A majestic eagle soaring through mountain peaks at sunset\"\n        ];\n\n    } catch (error) {\n        console.error(`Failed to generate recommendations: ${error}`);\n        return [\n            \"A cat playing piano in a cozy room\",\n            \"Spiderman dancing on a rooftop\",  \n            \"Ocean waves crashing against cliffs\",\n            \"A majestic eagle soaring through mountain peaks at sunset\"\n        ];\n    }\n}","size_bytes":5703},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertVideoSchema, updateVideoSchema, loginSchema, signupSchema } from \"@shared/schema\";\nimport uploadRoutes from \"./upload\";\nimport axios from \"axios\";\nimport { enhancePrompt, translateToEnglish, detectLanguage, handleChatbotQuery, generateRecommendations } from \"./gemini\";\nimport express from \"express\";\nimport session from \"express-session\";\n\n// Extend session interface\ndeclare module \"express-session\" {\n  interface Session {\n    userId?: string;\n  }\n}\nimport connectPg from \"connect-pg-simple\";\nimport fs from \"fs\";\nimport path from \"path\";\n\n// Function to save user data to JSON file\nfunction saveUserToFile(user: any) {\n  try {\n    const databaseDir = path.join(process.cwd(), 'database');\n    if (!fs.existsSync(databaseDir)) {\n      fs.mkdirSync(databaseDir, { recursive: true });\n    }\n    \n    const fileName = `${user.firstName || 'User'}_${user.lastName || user.email.split('@')[0]}.json`;\n    const filePath = path.join(databaseDir, fileName);\n    \n    const userData = {\n      id: user.id,\n      email: user.email,\n      username: user.username,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      profileImageUrl: user.profileImageUrl,\n      provider: user.provider,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt,\n      // Don't save password hash to file for security\n      hasPassword: !!user.password\n    };\n    \n    fs.writeFileSync(filePath, JSON.stringify(userData, null, 2));\n    console.log(`User data saved to: ${fileName}`);\n  } catch (error) {\n    console.error('Error saving user to file:', error);\n  }\n}\n\nconst ANABOT_API_BASE = \"https://anabot.my.id/api/ai\";\nconst ANABOT_API_KEY = \"freeApikey\";\n\n// Session configuration\nfunction setupSession(app: Express) {\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: 7 * 24 * 60 * 60, // 1 week in seconds\n    tableName: \"sessions\",\n  });\n\n  app.use(session({\n    secret: process.env.SESSION_SECRET || 'dev-secret-key',\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      secure: false, // Set to true in production with HTTPS\n      httpOnly: true,\n      maxAge: 7 * 24 * 60 * 60 * 1000, // 1 week\n    },\n  }));\n}\n\n// Authentication middleware\nconst requireAuth = (req: any, res: any, next: any) => {\n  if (!req.session.userId) {\n    return res.status(401).json({ message: \"Authentication required\" });\n  }\n  next();\n};\n\n// Download video function\nasync function downloadVideo(videoUrl: string, videoId: string): Promise<string> {\n  const downloadsDir = path.join(process.cwd(), 'downloads');\n  \n  // Create downloads directory if it doesn't exist\n  if (!fs.existsSync(downloadsDir)) {\n    fs.mkdirSync(downloadsDir, { recursive: true });\n  }\n  \n  const filePath = path.join(downloadsDir, `${videoId}.mp4`);\n  \n  // Download the video\n  const response = await axios({\n    url: videoUrl,\n    method: 'GET',\n    responseType: 'stream',\n    timeout: 60000, // 1 minute timeout\n  });\n  \n  const writer = fs.createWriteStream(filePath);\n  response.data.pipe(writer);\n  \n  return new Promise((resolve, reject) => {\n    writer.on('finish', () => resolve(filePath));\n    writer.on('error', reject);\n  });\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Setup session\n  setupSession(app);\n  \n  // Serve static files from downloads with proper headers\n  app.use('/downloads', (req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET');\n    res.header('Access-Control-Allow-Headers', 'Content-Type');\n    next();\n  }, express.static(path.join(process.cwd(), 'downloads'), {\n    setHeaders: (res, path) => {\n      res.setHeader('Content-Type', 'video/mp4');\n      res.setHeader('Accept-Ranges', 'bytes');\n    }\n  }));\n\n  // Authentication routes\n  app.post(\"/api/auth/signup\", async (req, res) => {\n    try {\n      const userData = signupSchema.parse(req.body);\n      \n      // Check if user already exists\n      const existingUser = await storage.getUserByEmail(userData.email);\n      if (existingUser) {\n        return res.status(400).json({ message: \"Email sudah terdaftar\" });\n      }\n      \n      const user = await storage.createUser(userData);\n      req.session.userId = user.id;\n      \n      // Save user data to JSON file\n      saveUserToFile(user);\n      \n      // Don't send password back\n      const { password, ...userWithoutPassword } = user;\n      res.json({ user: userWithoutPassword });\n    } catch (error) {\n      console.error(\"Signup error:\", error);\n      res.status(400).json({ message: \"Data registrasi tidak valid\" });\n    }\n  });\n  \n  app.post(\"/api/auth/login\", async (req, res) => {\n    try {\n      const loginData = loginSchema.parse(req.body);\n      \n      const user = await storage.validateUser(loginData.email, loginData.password);\n      if (!user) {\n        return res.status(401).json({ message: \"Email atau password salah\" });\n      }\n      \n      req.session.userId = user.id;\n      \n      // Don't send password back\n      const { password, ...userWithoutPassword } = user;\n      res.json({ user: userWithoutPassword });\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      res.status(400).json({ message: \"Data login tidak valid\" });\n    }\n  });\n  \n  app.post(\"/api/auth/logout\", (req, res) => {\n    req.session.destroy(() => {\n      res.json({ message: \"Logout berhasil\" });\n    });\n  });\n  \n  app.get(\"/api/auth/me\", async (req: any, res) => {\n    if (!req.session.userId) {\n      return res.status(401).json({ message: \"Not authenticated\" });\n    }\n    \n    try {\n      const user = await storage.getUser(req.session.userId);\n      if (!user) {\n        return res.status(401).json({ message: \"User not found\" });\n      }\n      \n      // Don't send password back\n      const { password, ...userWithoutPassword } = user;\n      res.json({ user: userWithoutPassword });\n    } catch (error) {\n      console.error(\"Get user error:\", error);\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  // Chatbot route\n  app.post(\"/api/chatbot\", async (req, res) => {\n    try {\n      const { query } = req.body;\n      \n      if (!query || typeof query !== 'string') {\n        return res.status(400).json({ \n          message: \"Query is required\" \n        });\n      }\n\n      const response = await handleChatbotQuery(query);\n      res.json({ response });\n    } catch (error) {\n      console.error(\"Chatbot error:\", error);\n      res.status(500).json({ \n        message: \"Terjadi kesalahan pada chatbot\" \n      });\n    }\n  });\n  \n  // Enhance prompt endpoint\n  app.post(\"/api/enhance-prompt\", async (req, res) => {\n    try {\n      const { prompt } = req.body;\n      \n      if (!prompt || typeof prompt !== 'string') {\n        return res.status(400).json({ \n          message: \"Prompt is required\" \n        });\n      }\n\n      const enhanced = await enhancePrompt(prompt);\n      res.json({ enhanced });\n    } catch (error) {\n      console.error(\"Enhance prompt error:\", error);\n      res.status(500).json({ \n        message: \"Terjadi masalah dengan AI enhancement. Silakan coba dengan prompt asli atau coba lagi nanti.\" \n      });\n    }\n  });\n\n  // Translate to English endpoint\n  app.post(\"/api/translate\", async (req, res) => {\n    try {\n      const { text } = req.body;\n      \n      if (!text || typeof text !== 'string') {\n        return res.status(400).json({ \n          message: \"Text is required\" \n        });\n      }\n\n      const language = await detectLanguage(text);\n      \n      if (language === 'id') {\n        const translated = await translateToEnglish(text);\n        res.json({ translated, wasTranslated: true });\n      } else {\n        res.json({ translated: text, wasTranslated: false });\n      }\n    } catch (error) {\n      console.error(\"Translation error:\", error);\n      res.status(500).json({ \n        message: \"Gagal menerjemahkan teks\" \n      });\n    }\n  });\n\n  // Generate recommendations endpoint  \n  app.post(\"/api/generate-recommendations\", async (req, res) => {\n    try {\n      const { userPrompts } = req.body;\n      \n      if (!userPrompts || typeof userPrompts !== 'string') {\n        return res.status(400).json({ \n          message: \"User prompts required\" \n        });\n      }\n\n      const recommendations = await generateRecommendations(userPrompts);\n      res.json({ recommendations });\n    } catch (error) {\n      console.error(\"Generate recommendations error:\", error);\n      res.status(500).json({ \n        message: \"Failed to generate recommendations\",\n        recommendations: [\n          \"A cat playing piano in a cozy room\",\n          \"Spiderman dancing on a rooftop\",  \n          \"Ocean waves crashing against cliffs\",\n          \"A majestic eagle soaring through mountain peaks at sunset\"\n        ]\n      });\n    }\n  });\n  \n  // Create a new video generation request\n  app.post(\"/api/videos\", async (req: any, res) => {\n    try {\n      const { prompt, autoTranslate = true } = req.body;\n      const userId = req.session.userId; // Can be undefined for guest users\n      \n      if (!prompt || prompt.trim().length < 10) {\n        return res.status(400).json({ \n          message: \"Prompt must be at least 10 characters long\" \n        });\n      }\n\n      let finalPrompt = prompt;\n      let wasTranslated = false;\n\n      // Auto-translate if enabled\n      if (autoTranslate) {\n        try {\n          const language = await detectLanguage(prompt);\n          if (language === 'id') {\n            finalPrompt = await translateToEnglish(prompt);\n            wasTranslated = true;\n          }\n        } catch (translateError) {\n          console.error(\"Translation error:\", translateError);\n          // Continue with original prompt if translation fails\n        }\n      }\n\n      // Request video generation from anabot.my.id\n      try {\n        const response = await axios.get(\n          `${ANABOT_API_BASE}/veo3_v2?prompt=${encodeURIComponent(finalPrompt)}&apikey=${ANABOT_API_KEY}`,\n          { timeout: 30000 }\n        );\n\n        const generationId = response.data?.data?.result?.id;\n        \n        if (!generationId) {\n          return res.status(500).json({\n            message: \"Failed to start video generation\"\n          });\n        }\n\n        // Store the video request in our database\n        const video = await storage.createVideo({\n          prompt: finalPrompt,\n          originalPrompt: wasTranslated ? prompt : undefined,\n          userId,\n          generationId,\n          status: \"processing\"\n        });\n\n        res.json({ ...video, wasTranslated });\n\n      } catch (apiError) {\n        console.error(\"Anabot API error:\", apiError);\n        \n        // Store failed request\n        const video = await storage.createVideo({\n          prompt: finalPrompt,\n          originalPrompt: wasTranslated ? prompt : undefined,\n          userId,\n          status: \"failed\",\n          errorMessage: \"Gagal terhubung ke layanan video generation\"\n        });\n\n        res.status(500).json({\n          message: \"Gagal memulai video generation\",\n          video\n        });\n      }\n\n    } catch (error) {\n      console.error(\"Video creation error:\", error);\n      res.status(400).json({ \n        message: error instanceof Error ? error.message : \"Data request tidak valid\" \n      });\n    }\n  });\n\n  // Check video generation status\n  app.get(\"/api/videos/:id/status\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const video = await storage.getVideo(id);\n\n      if (!video) {\n        return res.status(404).json({ message: \"Video not found\" });\n      }\n\n      // If already completed or failed, return current status\n      if (video.status === \"success\" || video.status === \"failed\") {\n        return res.json(video);\n      }\n\n      // Check status with anabot.my.id if we have a generation ID\n      if (video.generationId) {\n        try {\n          const response = await axios.get(\n            `${ANABOT_API_BASE}/checkStatusVeo3_v2?id=${video.generationId}&apikey=${ANABOT_API_KEY}`,\n            { timeout: 10000 }\n          );\n\n          const result = response.data?.data?.result;\n          \n          if (result) {\n            let updateData: any = {};\n\n            if (result.state === \"success\" && result.completeData?.data?.video_url) {\n              try {\n                // Auto-download video to server\n                const videoPath = await downloadVideo(result.completeData.data.video_url, id);\n                updateData = {\n                  status: \"success\",\n                  videoUrl: result.completeData.data.video_url,\n                  videoPath: `/downloads/${id}.mp4`\n                };\n              } catch (downloadError) {\n                console.error(\"Video download error:\", downloadError);\n                // Still mark as success but without local path\n                updateData = {\n                  status: \"success\",\n                  videoUrl: result.completeData.data.video_url\n                };\n              }\n            } else if (result.state === \"fail\" || result.state === \"failed\") {\n              updateData = {\n                status: \"failed\",\n                errorMessage: result.failMsg || \"Video generation failed\"\n              };\n            }\n\n            // Update video status if changed\n            if (Object.keys(updateData).length > 0) {\n              const updatedVideo = await storage.updateVideo(id, updateData);\n              return res.json(updatedVideo);\n            }\n          }\n\n        } catch (apiError) {\n          console.error(\"Status check error:\", apiError);\n          // Don't fail the request, just return current status\n        }\n      }\n\n      res.json(video);\n\n    } catch (error) {\n      console.error(\"Status check error:\", error);\n      res.status(500).json({ \n        message: \"Failed to check video status\" \n      });\n    }\n  });\n\n  // Get video by ID\n  app.get(\"/api/videos/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const video = await storage.getVideo(id);\n\n      if (!video) {\n        return res.status(404).json({ message: \"Video not found\" });\n      }\n\n      res.json(video);\n\n    } catch (error) {\n      console.error(\"Get video error:\", error);\n      res.status(500).json({ \n        message: \"Failed to get video\" \n      });\n    }\n  });\n\n  // Get all videos (for authenticated users, show their videos)\n  app.get(\"/api/videos\", async (req: any, res) => {\n    try {\n      const userId = req.session.userId;\n      const videos = await storage.getAllVideos(userId);\n      res.json(videos);\n    } catch (error) {\n      console.error(\"Get videos error:\", error);\n      res.status(500).json({ \n        message: \"Failed to get videos\" \n      });\n    }\n  });\n\n  // Download video endpoint\n  app.get(\"/api/videos/:id/download\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const video = await storage.getVideo(id);\n\n      if (!video) {\n        return res.status(404).json({ message: \"Video not found\" });\n      }\n\n      const filePath = path.join(process.cwd(), 'downloads', `${id}.mp4`);\n      \n      // Check if file exists locally\n      if (fs.existsSync(filePath)) {\n        res.download(filePath, `video-${id}.mp4`);\n      } else if (video.videoUrl) {\n        // If not downloaded yet, try to download and serve\n        try {\n          const downloadedPath = await downloadVideo(video.videoUrl, id);\n          await storage.updateVideo(id, { videoPath: `/downloads/${id}.mp4` });\n          res.download(downloadedPath, `video-${id}.mp4`);\n        } catch (downloadError) {\n          console.error(\"Download error:\", downloadError);\n          res.status(500).json({ message: \"Failed to download video\" });\n        }\n      } else {\n        res.status(404).json({ message: \"Video file not available\" });\n      }\n    } catch (error) {\n      console.error(\"Download video error:\", error);\n      res.status(500).json({ \n        message: \"Failed to download video\" \n      });\n    }\n  });\n\n  // Proxy endpoint for video streaming\n  app.get(\"/api/videos/:id/stream\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const video = await storage.getVideo(id);\n\n      if (!video || !video.videoUrl) {\n        return res.status(404).json({ message: \"Video not found\" });\n      }\n\n      // Proxy the video stream\n      try {\n        const response = await axios.get(video.videoUrl, {\n          responseType: 'stream',\n          timeout: 30000,\n          headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n          }\n        });\n\n        // Set appropriate headers\n        res.set({\n          'Content-Type': 'video/mp4',\n          'Content-Disposition': `attachment; filename=\"video-${id}.mp4\"`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET',\n          'Accept-Ranges': 'bytes',\n          'Cache-Control': 'no-cache'\n        });\n\n        // Forward content-length if available\n        if (response.headers['content-length']) {\n          res.set('Content-Length', response.headers['content-length']);\n        }\n\n        // Handle errors during streaming\n        response.data.on('error', (streamError: any) => {\n          console.error('Stream error:', streamError);\n          if (!res.headersSent) {\n            res.status(500).json({ message: \"Stream error\" });\n          }\n        });\n\n        // Pipe the video stream\n        response.data.pipe(res);\n\n      } catch (proxyError) {\n        console.error(\"Video proxy error:\", proxyError);\n        if (!res.headersSent) {\n          res.status(500).json({ message: \"Failed to stream video\" });\n        }\n      }\n\n    } catch (error) {\n      console.error(\"Stream video error:\", error);\n      res.status(500).json({ message: \"Failed to stream video\" });\n    }\n  });\n\n  // Chat endpoint for customer service\n  app.post(\"/api/chat\", async (req, res) => {\n    try {\n      const { message } = req.body;\n      \n      if (!message || typeof message !== 'string') {\n        return res.status(400).json({ \n          message: \"Message is required\" \n        });\n      }\n\n      // Use the chatbot function instead of direct GoogleGenAI call\n      const botResponse = await handleChatbotQuery(message);\n\n      res.json({ response: botResponse });\n    } catch (error) {\n      console.error(\"Chat error:\", error);\n      res.status(500).json({ \n        response: \"I apologize, but I'm having trouble responding right now. Please try again in a moment or contact our support team directly.\" \n      });\n    }\n  });\n\n  // Upload routes\n  app.use('/api/upload', uploadRoutes);\n  \n  // Serve static files  \n  app.use('/uploads', express.static('uploads'));\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":18938},"server/storage.ts":{"content":"import { type Video, type InsertVideo, type UpdateVideo, type User, type InsertUser, type UpdateUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\nimport { db } from \"./db\";\nimport { users, videos } from \"@shared/schema\";\nimport { eq } from \"drizzle-orm\";\nimport bcrypt from \"bcrypt\";\n\nexport interface IStorage {\n  // Video operations\n  getVideo(id: string): Promise<Video | undefined>;\n  createVideo(video: InsertVideo & { generationId?: string; status?: string; errorMessage?: string }): Promise<Video>;\n  updateVideo(id: string, updates: UpdateVideo): Promise<Video | undefined>;\n  getAllVideos(userId?: string): Promise<Video[]>;\n  \n  // User operations\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUser(id: string, updates: UpdateUser): Promise<User | undefined>;\n  validateUser(email: string, password: string): Promise<User | undefined>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // Video operations\n  async getVideo(id: string): Promise<Video | undefined> {\n    const [video] = await db.select().from(videos).where(eq(videos.id, id));\n    return video || undefined;\n  }\n\n  async createVideo(data: InsertVideo & { generationId?: string; status?: string; errorMessage?: string }): Promise<Video> {\n    const [video] = await db\n      .insert(videos)\n      .values({\n        prompt: data.prompt,\n        originalPrompt: data.originalPrompt,\n        userId: data.userId,\n        generationId: data.generationId || null,\n        status: data.status || \"pending\",\n        errorMessage: data.errorMessage || null,\n      })\n      .returning();\n    return video;\n  }\n\n  async updateVideo(id: string, updates: UpdateVideo): Promise<Video | undefined> {\n    const [video] = await db\n      .update(videos)\n      .set({ ...updates, updatedAt: new Date() })\n      .where(eq(videos.id, id))\n      .returning();\n    return video || undefined;\n  }\n\n  async getAllVideos(userId?: string): Promise<Video[]> {\n    if (userId) {\n      return await db.select().from(videos).where(eq(videos.userId, userId));\n    }\n    return await db.select().from(videos);\n  }\n\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user || undefined;\n  }\n\n  async createUser(userData: InsertUser): Promise<User> {\n    // Hash password if provided\n    const hashedPassword = userData.password ? await bcrypt.hash(userData.password, 10) : null;\n    \n    const [user] = await db\n      .insert(users)\n      .values({\n        ...userData,\n        password: hashedPassword,\n      })\n      .returning();\n    return user;\n  }\n\n  async updateUser(id: string, updates: UpdateUser): Promise<User | undefined> {\n    const [user] = await db\n      .update(users)\n      .set({ ...updates, updatedAt: new Date() })\n      .where(eq(users.id, id))\n      .returning();\n    return user || undefined;\n  }\n\n  async validateUser(email: string, password: string): Promise<User | undefined> {\n    const user = await this.getUserByEmail(email);\n    if (!user || !user.password) return undefined;\n    \n    const isValid = await bcrypt.compare(password, user.password);\n    return isValid ? user : undefined;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":3545},"server/upload.ts":{"content":"import { Router } from 'express';\nimport multer from 'multer';\nimport path from 'path';\nimport fs from 'fs/promises';\n\nconst router = Router();\n\n// Configure multer for file uploads\nconst storage = multer.diskStorage({\n  destination: async (req, file, cb) => {\n    const uploadPath = path.join(process.cwd(), 'uploads');\n    try {\n      await fs.mkdir(uploadPath, { recursive: true });\n      cb(null, uploadPath);\n    } catch (error) {\n      cb(error, uploadPath);\n    }\n  },\n  filename: (req, file, cb) => {\n    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n    cb(null, file.fieldname + '-' + uniqueSuffix + path.extname(file.originalname));\n  }\n});\n\nconst upload = multer({ \n  storage,\n  limits: {\n    fileSize: 2 * 1024 * 1024 * 1024 // 2GB limit\n  },\n  fileFilter: (req, file, cb) => {\n    const allowedTypes = /\\.(mp4|mov|avi|webm|mp3|wav|aac|png|jpg|jpeg|gif)$/i;\n    if (allowedTypes.test(file.originalname)) {\n      cb(null, true);\n    } else {\n      cb(new Error('Unsupported file type'));\n    }\n  }\n});\n\n// File upload endpoint\nrouter.post('/file', upload.single('media'), async (req, res) => {\n  try {\n    if (!req.file) {\n      return res.status(400).json({ error: 'No file uploaded' });\n    }\n\n    const fileInfo = {\n      id: req.file.filename,\n      originalName: req.file.originalname,\n      filename: req.file.filename,\n      path: req.file.path,\n      size: req.file.size,\n      mimetype: req.file.mimetype,\n      url: `/uploads/${req.file.filename}`,\n      uploadedAt: new Date()\n    };\n\n    res.json(fileInfo);\n  } catch (error) {\n    console.error('Upload error:', error);\n    res.status(500).json({ error: 'Upload failed' });\n  }\n});\n\n// Multiple files upload\nrouter.post('/files', upload.array('media', 10), async (req, res) => {\n  try {\n    if (!req.files || !Array.isArray(req.files)) {\n      return res.status(400).json({ error: 'No files uploaded' });\n    }\n\n    const filesInfo = req.files.map(file => ({\n      id: file.filename,\n      originalName: file.originalname,\n      filename: file.filename,\n      path: file.path,\n      size: file.size,\n      mimetype: file.mimetype,\n      url: `/uploads/${file.filename}`,\n      uploadedAt: new Date()\n    }));\n\n    res.json(filesInfo);\n  } catch (error) {\n    console.error('Upload error:', error);\n    res.status(500).json({ error: 'Upload failed' });\n  }\n});\n\n// Serve uploaded files\nrouter.get('/:filename', async (req, res) => {\n  try {\n    const filename = req.params.filename;\n    const filePath = path.join(process.cwd(), 'uploads', filename);\n    \n    // Check if file exists\n    await fs.access(filePath);\n    \n    res.sendFile(filePath);\n  } catch (error) {\n    res.status(404).json({ error: 'File not found' });\n  }\n});\n\nexport default router;","size_bytes":2755},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, json, index } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table for authentication\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: json(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User authentication table\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique().notNull(),\n  username: varchar(\"username\").unique(),\n  password: varchar(\"password\"),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  provider: varchar(\"provider\").default(\"local\"), // 'local' or 'google'\n  googleId: varchar(\"google_id\").unique(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const videos = pgTable(\"videos\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  prompt: text(\"prompt\").notNull(),\n  originalPrompt: text(\"original_prompt\"), // Store original prompt before translation\n  generationId: text(\"generation_id\"),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, processing, success, failed\n  videoUrl: text(\"video_url\"),\n  videoPath: text(\"video_path\"), // Path to downloaded video file\n  errorMessage: text(\"error_message\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// User schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const updateUserSchema = createInsertSchema(users).pick({\n  email: true,\n  username: true,\n  firstName: true,\n  lastName: true,\n  profileImageUrl: true,\n}).partial();\n\nexport const loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(6),\n});\n\nexport const signupSchema = z.object({\n  email: z.string().email(),\n  username: z.string().min(3).optional(),\n  password: z.string().min(6),\n  firstName: z.string().optional(),\n  lastName: z.string().optional(),\n});\n\n// Video schemas\nexport const insertVideoSchema = createInsertSchema(videos).pick({\n  prompt: true,\n  originalPrompt: true,\n  userId: true,\n}).partial({ originalPrompt: true, userId: true });\n\nexport const updateVideoSchema = createInsertSchema(videos).pick({\n  status: true,\n  videoUrl: true,\n  videoPath: true,\n  errorMessage: true,\n  generationId: true,\n  originalPrompt: true,\n}).partial();\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type UpdateUser = z.infer<typeof updateUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type LoginData = z.infer<typeof loginSchema>;\nexport type SignupData = z.infer<typeof signupSchema>;\n\nexport type InsertVideo = z.infer<typeof insertVideoSchema>;\nexport type UpdateVideo = z.infer<typeof updateVideoSchema>;\nexport type Video = typeof videos.$inferSelect;\n\n// API response types for anabot.my.id\nexport const anabotRequestResponseSchema = z.object({\n  data: z.object({\n    result: z.object({\n      id: z.string(),\n    }),\n  }),\n});\n\nexport const anabotStatusResponseSchema = z.object({\n  data: z.object({\n    result: z.object({\n      state: z.enum([\"pending\", \"processing\", \"success\", \"fail\", \"failed\"]),\n      completeData: z.object({\n        data: z.object({\n          video_url: z.string(),\n        }).optional(),\n      }).optional(),\n      failMsg: z.string().optional(),\n    }),\n  }),\n});\n\nexport type AnabotRequestResponse = z.infer<typeof anabotRequestResponseSchema>;\nexport type AnabotStatusResponse = z.infer<typeof anabotStatusResponseSchema>;\n","size_bytes":3909},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport VideoEditor from \"@/pages/video-editor\";\nimport ProEditor from \"@/pages/pro-editor\";\nimport CustomerService from \"@/components/customer-service\";\nimport CookieBanner from \"@/components/cookie-banner\";\nimport Footer from \"@/components/footer\";\n\n// Legal Pages\nimport PrivacyPolicy from \"@/pages/legal/privacy\";\nimport TermsOfService from \"@/pages/legal/terms\";\nimport CookiePolicy from \"@/pages/legal/cookies\";\nimport AcceptableUsePolicy from \"@/pages/legal/aup\";\nimport DMCAPolicy from \"@/pages/legal/dmca\";\nimport RefundPolicy from \"@/pages/legal/refund\";\nimport SecurityPolicy from \"@/pages/legal/security\";\nimport AIDisclosure from \"@/pages/legal/ai-disclosure\";\nimport AgePolicy from \"@/pages/legal/age\";\nimport DataRequests from \"@/pages/legal/data-requests\";\n\n// Help Pages\nimport GettingStarted from \"@/pages/help/getting-started\";\nimport FAQ from \"@/pages/help/faq\";\nimport ContentPolicy from \"@/pages/help/content-policy\";\n\n// Other Pages\nimport Contact from \"@/pages/contact\";\nimport Pricing from \"@/pages/pricing\";\n\nfunction Router() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <div className=\"flex-1\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/editor\" component={VideoEditor} />\n          <Route path=\"/pro-editor\" component={ProEditor} />\n          \n          {/* Legal Routes */}\n          <Route path=\"/legal/privacy\" component={PrivacyPolicy} />\n          <Route path=\"/legal/terms\" component={TermsOfService} />\n          <Route path=\"/legal/cookies\" component={CookiePolicy} />\n          <Route path=\"/legal/aup\" component={AcceptableUsePolicy} />\n          <Route path=\"/legal/dmca\" component={DMCAPolicy} />\n          <Route path=\"/legal/refund\" component={RefundPolicy} />\n          <Route path=\"/legal/security\" component={SecurityPolicy} />\n          <Route path=\"/legal/ai-disclosure\" component={AIDisclosure} />\n          <Route path=\"/legal/age\" component={AgePolicy} />\n          <Route path=\"/legal/data-requests\" component={DataRequests} />\n          \n          {/* Help Routes */}\n          <Route path=\"/help/getting-started\" component={GettingStarted} />\n          <Route path=\"/help/faq\" component={FAQ} />\n          <Route path=\"/help/content-policy\" component={ContentPolicy} />\n          \n          {/* Other Routes */}\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/pricing\" component={Pricing} />\n          \n          <Route component={NotFound} />\n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n        <CustomerService />\n        <CookieBanner />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3169},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(210 25% 7.8431%);\n  --card: hsl(180 6.6667% 97.0588%);\n  --card-foreground: hsl(210 25% 7.8431%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(210 25% 7.8431%);\n  --primary: hsl(238.7 83.5% 66.7%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(245.1 58.3% 69.4%);\n  --secondary-foreground: hsl(0 0% 100%);\n  --muted: hsl(240 1.9608% 90%);\n  --muted-foreground: hsl(210 25% 7.8431%);\n  --accent: hsl(203.4 20% 94.9%);\n  --accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(201.4286 30.4348% 90.9804%);\n  --input: hsl(200 23.0769% 97.4510%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(211.5789 51.3514% 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-border: hsl(205.0000 25.0000% 90.5882%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  \n  /* VideoAI Design Colors */\n  --dark: hsl(218.2 27.8% 11.8%);\n  --surface: hsl(217.2 32.6% 17.5%);\n  \n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n/* Custom utility classes */\n.line-clamp-2 {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n/* Font families */\n.font-space-grotesk {\n  font-family: 'Space Grotesk', sans-serif;\n}\n\n/* Animation classes */\n@keyframes blob {\n  0% {\n    transform: translate(0px, 0px) scale(1);\n  }\n  33% {\n    transform: translate(30px, -50px) scale(1.1);\n  }\n  66% {\n    transform: translate(-20px, 20px) scale(0.9);\n  }\n  100% {\n    transform: translate(0px, 0px) scale(1);\n  }\n}\n\n.animate-blob {\n  animation: blob 7s infinite;\n}\n\n.animation-delay-2000 {\n  animation-delay: 2s;\n}\n\n.animation-delay-4000 {\n  animation-delay: 4s;\n}\n\n/* Responsive breakpoints */\n@media (max-width: 640px) {\n  .text-responsive-hero {\n    font-size: 2rem;\n    line-height: 1.1;\n  }\n}\n\n@media (min-width: 641px) and (max-width: 768px) {\n  .text-responsive-hero {\n    font-size: 3rem;\n    line-height: 1.1;\n  }\n}\n\n@media (min-width: 769px) {\n  .text-responsive-hero {\n    font-size: 4rem;\n    line-height: 1.1;\n  }\n}\n\n/* Enhanced mobile responsiveness */\n@media (max-width: 640px) {\n  .container-mobile {\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n  \n  .hero-spacing-mobile {\n    margin-bottom: 2rem;\n  }\n  \n  .button-mobile {\n    padding: 0.75rem 1.5rem;\n    font-size: 0.875rem;\n  }\n}\n\n/* Tablet optimizations */\n@media (min-width: 641px) and (max-width: 1024px) {\n  .tablet-padding {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n  \n  .tablet-text {\n    font-size: 1.125rem;\n  }\n}\n\n/* Scroll animations */\n.scroll-reveal {\n  opacity: 0;\n  transform: translateY(50px);\n  transition: opacity 0.6s ease-out, transform 0.6s ease-out;\n}\n\n.scroll-reveal.visible {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.dark {\n  --background: hsl(0 0% 0%);\n  --foreground: hsl(200 6.6667% 91.1765%);\n  --card: hsl(228 9.8039% 10%);\n  --card-foreground: hsl(0 0% 85.0980%);\n  --popover: hsl(0 0% 0%);\n  --popover-foreground: hsl(200 6.6667% 91.1765%);\n  --primary: hsl(238.7 83.5% 66.7%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(245.1 58.3% 69.4%);\n  --secondary-foreground: hsl(0 0% 100%);\n  --muted: hsl(0 0% 9.4118%);\n  --muted-foreground: hsl(210 3.3898% 46.2745%);\n  --accent: hsl(205.7143 70% 7.8431%);\n  --accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207.6923 27.6596% 18.4314%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(228 9.8039% 10%);\n  --sidebar-foreground: hsl(0 0% 85.0980%);\n  --sidebar-primary: hsl(202.8169 89.1213% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(205.7143 70% 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --sidebar-border: hsl(205.7143 15.7895% 26.0784%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/* VideoAI specific utility classes */\n.bg-dark {\n  background-color: var(--dark);\n}\n\n.bg-surface {\n  background-color: var(--surface);\n}\n\n.text-accent {\n  color: hsl(203.4 20% 94.9%);\n}\n\n/* Animation classes for pulse effect */\n@keyframes pulse-slow {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.animate-pulse-slow {\n  animation: pulse-slow 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n/* Gradient text utilities */\n.bg-gradient-to-r {\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\n}\n\n.from-primary {\n  --tw-gradient-from: var(--primary);\n  --tw-gradient-to: transparent;\n  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);\n}\n\n.to-secondary {\n  --tw-gradient-to: var(--secondary);\n}\n","size_bytes":7730},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/cookie-banner.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { X, Cookie, Settings } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\n\ninterface CookiePreferences {\n  essential: boolean;\n  functional: boolean;\n  analytics: boolean;\n  marketing: boolean;\n}\n\nexport default function CookieBanner() {\n  const [showBanner, setShowBanner] = useState(false);\n  const [showPreferences, setShowPreferences] = useState(false);\n  const [preferences, setPreferences] = useState<CookiePreferences>({\n    essential: true, // Always true, cannot be disabled\n    functional: false,\n    analytics: false,\n    marketing: false,\n  });\n\n  useEffect(() => {\n    // Check if user has already made a choice\n    const cookieConsent = localStorage.getItem('cookie-consent');\n    if (!cookieConsent) {\n      // Show banner after a short delay\n      const timer = setTimeout(() => setShowBanner(true), 2000);\n      return () => clearTimeout(timer);\n    } else {\n      // Load saved preferences\n      try {\n        const savedPreferences = JSON.parse(cookieConsent);\n        setPreferences(savedPreferences);\n      } catch (e) {\n        console.error('Error parsing cookie preferences:', e);\n      }\n    }\n  }, []);\n\n  const savePreferences = (prefs: CookiePreferences) => {\n    localStorage.setItem('cookie-consent', JSON.stringify(prefs));\n    setPreferences(prefs);\n    setShowBanner(false);\n    setShowPreferences(false);\n    \n    // Apply preferences (in a real app, this would configure tracking scripts)\n    applyCookiePreferences(prefs);\n  };\n\n  const applyCookiePreferences = (prefs: CookiePreferences) => {\n    // In a real implementation, this would:\n    // - Enable/disable Google Analytics\n    // - Enable/disable marketing pixels\n    // - Configure other tracking scripts\n    \n    console.log('Cookie preferences applied:', prefs);\n    \n    // Example: Disable analytics if not consented\n    if (!prefs.analytics && typeof gtag !== 'undefined') {\n      // gtag('config', 'GA_MEASUREMENT_ID', { anonymize_ip: true });\n    }\n  };\n\n  const acceptAll = () => {\n    const allAccepted = {\n      essential: true,\n      functional: true,\n      analytics: true,\n      marketing: true,\n    };\n    savePreferences(allAccepted);\n  };\n\n  const rejectOptional = () => {\n    const essentialOnly = {\n      essential: true,\n      functional: false,\n      analytics: false,\n      marketing: false,\n    };\n    savePreferences(essentialOnly);\n  };\n\n  const updatePreference = (key: keyof CookiePreferences, value: boolean) => {\n    if (key === 'essential') return; // Essential cookies cannot be disabled\n    setPreferences(prev => ({ ...prev, [key]: value }));\n  };\n\n  if (!showBanner) return null;\n\n  return (\n    <>\n      {/* Cookie Banner */}\n      <div className=\"fixed bottom-4 left-4 right-4 z-50 md:max-w-md md:left-auto md:right-4\">\n        <div className=\"bg-slate-800/95 backdrop-blur-sm border border-slate-600 rounded-xl p-4 shadow-2xl\">\n          <div className=\"flex items-start gap-3\">\n            <Cookie className=\"w-6 h-6 text-purple-400 mt-1 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <h3 className=\"text-white font-semibold mb-2\">Cookie Preferences</h3>\n              <p className=\"text-slate-300 text-sm mb-4\">\n                Kami menggunakan cookie untuk meningkatkan pengalaman Anda. Cookie penting diperlukan untuk \n                fungsi website, sementara yang lain membantu kami memahami cara Anda menggunakan situs ini.\n              </p>\n              \n              <div className=\"flex flex-col gap-2\">\n                <div className=\"flex gap-2\">\n                  <Button\n                    onClick={acceptAll}\n                    size=\"sm\"\n                    className=\"bg-purple-600 hover:bg-purple-700 text-white flex-1\"\n                  >\n                    Terima Semua\n                  </Button>\n                  <Button\n                    onClick={rejectOptional}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"border-slate-600 text-slate-300 hover:bg-slate-700 flex-1\"\n                  >\n                    Tolak Opsional\n                  </Button>\n                </div>\n                \n                <div className=\"flex gap-2\">\n                  <Dialog open={showPreferences} onOpenChange={setShowPreferences}>\n                    <DialogTrigger asChild>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        className=\"text-slate-400 hover:text-white flex-1\"\n                      >\n                        <Settings className=\"w-4 h-4 mr-2\" />\n                        Kelola Preferensi\n                      </Button>\n                    </DialogTrigger>\n                    <DialogContent className=\"bg-slate-800 border-slate-600 text-white max-w-2xl max-h-[90vh] overflow-y-auto\">\n                      <DialogHeader>\n                        <DialogTitle className=\"text-xl\">Kelola Cookie Preferences</DialogTitle>\n                        <DialogDescription className=\"text-slate-300\">\n                          Pilih jenis cookie yang ingin Anda izinkan. Cookie penting tidak dapat dinonaktifkan \n                          karena diperlukan untuk fungsi dasar website.\n                        </DialogDescription>\n                      </DialogHeader>\n                      \n                      <div className=\"space-y-6 mt-4\">\n                        {/* Essential Cookies */}\n                        <div className=\"border border-slate-600 rounded-lg p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center gap-2\">\n                              <Label className=\"text-white font-semibold\">Cookie Penting</Label>\n                              <span className=\"bg-green-600 text-white text-xs px-2 py-1 rounded\">Wajib</span>\n                            </div>\n                            <Switch checked={true} disabled />\n                          </div>\n                          <p className=\"text-slate-300 text-sm\">\n                            Cookie yang diperlukan untuk fungsi dasar website seperti login, keamanan, \n                            dan navigasi. Tidak dapat dinonaktifkan.\n                          </p>\n                        </div>\n\n                        {/* Functional Cookies */}\n                        <div className=\"border border-slate-600 rounded-lg p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <Label className=\"text-white font-semibold\">Cookie Fungsional</Label>\n                            <Switch\n                              checked={preferences.functional}\n                              onCheckedChange={(value) => updatePreference('functional', value)}\n                            />\n                          </div>\n                          <p className=\"text-slate-300 text-sm\">\n                            Menyimpan preferensi Anda seperti tema, bahasa, dan pengaturan lainnya \n                            untuk pengalaman yang lebih personal.\n                          </p>\n                        </div>\n\n                        {/* Analytics Cookies */}\n                        <div className=\"border border-slate-600 rounded-lg p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <Label className=\"text-white font-semibold\">Cookie Analitik</Label>\n                            <Switch\n                              checked={preferences.analytics}\n                              onCheckedChange={(value) => updatePreference('analytics', value)}\n                            />\n                          </div>\n                          <p className=\"text-slate-300 text-sm\">\n                            Membantu kami memahami cara website digunakan dengan mengumpulkan data anonim \n                            tentang halaman yang dikunjungi dan fitur yang digunakan.\n                          </p>\n                        </div>\n\n                        {/* Marketing Cookies */}\n                        <div className=\"border border-slate-600 rounded-lg p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <Label className=\"text-white font-semibold\">Cookie Pemasaran</Label>\n                            <Switch\n                              checked={preferences.marketing}\n                              onCheckedChange={(value) => updatePreference('marketing', value)}\n                            />\n                          </div>\n                          <p className=\"text-slate-300 text-sm\">\n                            Digunakan untuk menampilkan iklan yang relevan dan mengukur efektivitas \n                            kampanye pemasaran di berbagai platform.\n                          </p>\n                        </div>\n\n                        <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-3\">\n                          <p className=\"text-blue-200 text-sm\">\n                            📋 Anda dapat mengubah preferensi ini kapan saja melalui{\" \"}\n                            <Link href=\"/legal/cookies\" className=\"text-blue-400 hover:text-blue-300 underline\">\n                              halaman kebijakan cookie\n                            </Link>.\n                          </p>\n                        </div>\n\n                        <div className=\"flex gap-3\">\n                          <Button\n                            onClick={() => savePreferences(preferences)}\n                            className=\"bg-purple-600 hover:bg-purple-700 flex-1\"\n                          >\n                            Simpan Preferensi\n                          </Button>\n                          <Button\n                            onClick={() => setShowPreferences(false)}\n                            variant=\"outline\"\n                            className=\"border-slate-600 text-slate-300 hover:bg-slate-700\"\n                          >\n                            Batal\n                          </Button>\n                        </div>\n                      </div>\n                    </DialogContent>\n                  </Dialog>\n                  \n                  <Link href=\"/legal/cookies\" className=\"flex-1\">\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"text-slate-400 hover:text-white w-full\"\n                    >\n                      Pelajari Lebih Lanjut\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            \n            <Button\n              onClick={() => setShowBanner(false)}\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-slate-400 hover:text-white p-1 flex-shrink-0\"\n            >\n              <X className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}","size_bytes":11365},"client/src/components/customer-service.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { MessageCircle, X, Send, Bot, User } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\ninterface Message {\n  id: string;\n  content: string;\n  sender: 'user' | 'bot';\n  timestamp: Date;\n}\n\nexport default function CustomerService() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      content: 'Hello! I\\'m your AI assistant for JrennGenerator. How can I help you today?',\n      sender: 'bot',\n      timestamp: new Date()\n    }\n  ]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || isLoading) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: inputMessage,\n      sender: 'user',\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: inputMessage }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      const botMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: data.response,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: 'Sorry, I\\'m having trouble responding right now. Please try again later.',\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <>\n      {/* Chat Button */}\n      <motion.div\n        className=\"fixed bottom-6 right-6 z-50\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ delay: 2, type: \"spring\", stiffness: 300 }}\n      >\n        <motion.button\n          onClick={() => setIsOpen(true)}\n          className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white p-4 rounded-full shadow-lg shadow-purple-500/25 transition-all duration-300\"\n          whileHover={{ scale: 1.1, boxShadow: \"0 20px 25px -5px rgba(168, 85, 247, 0.4)\" }}\n          whileTap={{ scale: 0.9 }}\n          data-testid=\"button-open-chat\"\n        >\n          <MessageCircle className=\"w-6 h-6\" />\n        </motion.button>\n      </motion.div>\n\n      {/* Chat Window */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            className=\"fixed bottom-6 right-6 w-80 md:w-96 h-96 bg-slate-900 border border-slate-700 rounded-2xl shadow-2xl z-50 flex flex-col overflow-hidden\"\n            initial={{ opacity: 0, scale: 0.8, y: 20 }}\n            animate={{ opacity: 1, scale: 1, y: 0 }}\n            exit={{ opacity: 0, scale: 0.8, y: 20 }}\n            transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n          >\n            {/* Header */}\n            <div className=\"bg-gradient-to-r from-purple-600 to-pink-600 p-4 flex items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-white/20 rounded-full flex items-center justify-center\">\n                  <Bot className=\"w-4 h-4 text-white\" />\n                </div>\n                <div>\n                  <h3 className=\"text-white font-semibold\">AI Assistant</h3>\n                  <p className=\"text-white/80 text-xs\">Powered by Gemini 2.5 Flash</p>\n                </div>\n              </div>\n              <button\n                onClick={() => setIsOpen(false)}\n                className=\"text-white/80 hover:text-white transition-colors\"\n                data-testid=\"button-close-chat\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            {/* Messages */}\n            <ScrollArea className=\"flex-1 p-4\">\n              <div className=\"space-y-4\">\n                {messages.map((message) => (\n                  <motion.div\n                    key={message.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3 }}\n                    className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    <div className={`flex items-start space-x-2 max-w-xs ${message.sender === 'user' ? 'flex-row-reverse space-x-reverse' : ''}`}>\n                      <div className={`w-6 h-6 rounded-full flex items-center justify-center ${message.sender === 'user' ? 'bg-purple-600' : 'bg-slate-700'}`}>\n                        {message.sender === 'user' ? (\n                          <User className=\"w-3 h-3 text-white\" />\n                        ) : (\n                          <Bot className=\"w-3 h-3 text-white\" />\n                        )}\n                      </div>\n                      <div className={`p-3 rounded-lg ${message.sender === 'user' ? 'bg-purple-600 text-white' : 'bg-slate-800 text-slate-100'}`}>\n                        <p className=\"text-sm\">{message.content}</p>\n                        <p className={`text-xs mt-1 ${message.sender === 'user' ? 'text-purple-200' : 'text-slate-400'}`}>\n                          {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                        </p>\n                      </div>\n                    </div>\n                  </motion.div>\n                ))}\n                {isLoading && (\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    className=\"flex justify-start\"\n                  >\n                    <div className=\"flex items-start space-x-2\">\n                      <div className=\"w-6 h-6 bg-slate-700 rounded-full flex items-center justify-center\">\n                        <Bot className=\"w-3 h-3 text-white\" />\n                      </div>\n                      <div className=\"bg-slate-800 p-3 rounded-lg\">\n                        <div className=\"flex space-x-1\">\n                          <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\"></div>\n                          <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                          <div className=\"w-2 h-2 bg-slate-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                )}\n                <div ref={messagesEndRef} />\n              </div>\n            </ScrollArea>\n\n            {/* Input */}\n            <div className=\"p-4 border-t border-slate-700\">\n              <div className=\"flex space-x-2\">\n                <Input\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Type your message...\"\n                  className=\"flex-1 bg-slate-800 border-slate-600 text-white placeholder-slate-400 focus:border-purple-500\"\n                  disabled={isLoading}\n                  data-testid=\"input-chat-message\"\n                />\n                <Button\n                  onClick={sendMessage}\n                  disabled={!inputMessage.trim() || isLoading}\n                  className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 disabled:opacity-50\"\n                  data-testid=\"button-send-message\"\n                >\n                  <Send className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n}","size_bytes":8747},"client/src/components/error-display.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { AlertTriangle, RotateCcw } from \"lucide-react\";\nimport type { Video } from \"@shared/schema\";\n\ninterface ErrorDisplayProps {\n  video: Video;\n  onRetry: () => void;\n}\n\nexport default function ErrorDisplay({ video, onRetry }: ErrorDisplayProps) {\n  return (\n    <div className=\"bg-red-900/20 border border-red-800 rounded-2xl p-6\">\n      <div className=\"flex items-center space-x-3 mb-4\">\n        <div className=\"w-8 h-8 bg-red-600 rounded-full flex items-center justify-center\">\n          <AlertTriangle className=\"w-4 h-4 text-white\" />\n        </div>\n        <div>\n          <h3 className=\"font-semibold text-red-400\">Generation Failed</h3>\n          <p className=\"text-sm text-red-300\">An error occurred while generating your video</p>\n        </div>\n      </div>\n      \n      <div className=\"bg-red-950/50 rounded-lg p-4 mb-4\">\n        <p className=\"text-sm text-red-200\">\n          {video.errorMessage || \"The video generation service is temporarily unavailable. Please try again in a few minutes.\"}\n        </p>\n      </div>\n\n      <Button \n        onClick={onRetry}\n        className=\"bg-red-600 hover:bg-red-700 transition-colors\"\n      >\n        <RotateCcw className=\"w-4 h-4 mr-2\" />\n        Try Again\n      </Button>\n    </div>\n  );\n}\n","size_bytes":1302},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Heart, Mail, MapPin } from \"lucide-react\";\n\nexport default function Footer() {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <footer className=\"bg-slate-900/50 backdrop-blur-sm border-t border-slate-700 mt-20\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          {/* Brand */}\n          <div className=\"md:col-span-1\">\n            <h3 className=\"text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent mb-4\">\n              VideoAI\n            </h3>\n            <p className=\"text-slate-300 text-sm leading-relaxed mb-4\">\n              Platform AI terdepan untuk mengubah teks menjadi video berkualitas HD. \n              Buat konten visual yang menakjubkan hanya dengan imajinasi Anda.\n            </p>\n            <div className=\"flex items-center gap-2 text-slate-400 text-sm\">\n              <MapPin className=\"w-4 h-4\" />\n              <span>Jakarta, Indonesia</span>\n            </div>\n            <div className=\"flex items-center gap-2 text-slate-400 text-sm mt-2\">\n              <Mail className=\"w-4 h-4\" />\n              <span>support@videoai.id</span>\n            </div>\n          </div>\n\n          {/* Legal */}\n          <div>\n            <h4 className=\"text-white font-semibold mb-4\">Legal & Kebijakan</h4>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <Link href=\"/legal/privacy\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Kebijakan Privasi\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/terms\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Syarat & Ketentuan\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/cookies\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Kebijakan Cookie\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/aup\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Acceptable Use Policy\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/dmca\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  DMCA & Hak Cipta\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/refund\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Kebijakan Refund\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Support & Help */}\n          <div>\n            <h4 className=\"text-white font-semibold mb-4\">Bantuan & Dukungan</h4>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <Link href=\"/help/getting-started\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Panduan Memulai\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/help/faq\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  FAQ\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/help/content-policy\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Panduan Konten\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/contact\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Hubungi Kami\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/security\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Keamanan\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/ai-disclosure\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  AI Disclosure\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          {/* Product & Pricing */}\n          <div>\n            <h4 className=\"text-white font-semibold mb-4\">Produk & Layanan</h4>\n            <ul className=\"space-y-2 text-sm\">\n              <li>\n                <Link href=\"/pricing\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Harga & Paket\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/age\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Batas Usia\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/legal/data-requests\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Permintaan Data\n                </Link>\n              </li>\n              <li>\n                <a href=\"/api/status\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Status Layanan\n                </a>\n              </li>\n              <li>\n                <a href=\"/sitemap.xml\" className=\"text-slate-300 hover:text-white transition-colors\">\n                  Sitemap\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-slate-700 mt-8 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-4\">\n            <div className=\"text-slate-400 text-sm\">\n              © {currentYear} VideoAI. Semua hak dilindungi undang-undang.\n            </div>\n            \n            <div className=\"flex items-center gap-4 text-sm\">\n              <div className=\"flex items-center gap-1 text-slate-400\">\n                <span>Dibuat dengan</span>\n                <Heart className=\"w-4 h-4 text-red-400\" />\n                <span>di Indonesia</span>\n              </div>\n              \n              <div className=\"flex items-center gap-1\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n                <span className=\"text-slate-400 text-xs\">Semua sistem normal</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-4 text-center\">\n            <p className=\"text-slate-500 text-xs\">\n              VideoAI menggunakan teknologi kecerdasan buatan. Hasil yang dihasilkan mungkin tidak selalu akurat. \n              Verifikasi konten sebelum digunakan untuk tujuan penting.{\" \"}\n              <Link href=\"/legal/ai-disclosure\" className=\"text-purple-400 hover:text-purple-300 underline\">\n                Pelajari lebih lanjut\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":6809},"client/src/components/status-display.tsx":{"content":"import { Cog } from \"lucide-react\";\nimport type { Video } from \"@shared/schema\";\n\ninterface StatusDisplayProps {\n  video: Video;\n}\n\nexport default function StatusDisplay({ video }: StatusDisplayProps) {\n  return (\n    <div className=\"bg-surface/80 backdrop-blur-sm rounded-2xl border border-slate-700 p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-gradient-to-r from-amber-400 to-orange-500 rounded-full flex items-center justify-center\">\n            <Cog className=\"w-4 h-4 text-white animate-spin\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-accent\">Generating Video</h3>\n            <p className=\"text-sm text-slate-400\">Processing your prompt...</p>\n          </div>\n        </div>\n        <div className=\"text-right\">\n          <div className=\"text-sm text-slate-400\">In Progress</div>\n          <div className=\"text-xs text-slate-500\">~2-3 minutes</div>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"w-full bg-slate-800 rounded-full h-2 mb-4\">\n        <div \n          className=\"bg-gradient-to-r from-primary to-secondary h-2 rounded-full transition-all duration-500 animate-pulse\"\n          style={{ width: \"60%\" }}\n        />\n      </div>\n\n      <div className=\"text-sm text-slate-400\">\n        <svg className=\"w-4 h-4 inline mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        Your video is being created using advanced AI. This may take a few minutes.\n      </div>\n    </div>\n  );\n}\n","size_bytes":1750},"client/src/components/video-generator.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Play, Loader2, Clock, Film, Sparkles, Languages } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport StatusDisplay from \"./status-display\";\nimport VideoResult from \"./video-result\";\nimport ErrorDisplay from \"./error-display\";\nimport VideoTotal from \"./video-total\";\nimport type { Video } from \"@shared/schema\";\n\n// Dynamic example prompts using Gemini AI based on user patterns\nconst getDynamicExamplePrompts = async (videos: Video[], apiRequestFn: any) => {\n  try {\n    // Get recent user prompts for analysis\n    const recentPrompts = videos.slice(0, 5).map(v => v.prompt).join('; ');\n    \n    if (recentPrompts.length > 0) {\n      // Request recommendations from Gemini\n      const response = await apiRequestFn(\"POST\", \"/api/generate-recommendations\", { \n        userPrompts: recentPrompts \n      });\n      const data = await response.json();\n      \n      if (data.recommendations && data.recommendations.length > 0) {\n        return data.recommendations;\n      }\n    }\n  } catch (error) {\n    console.log(\"Using default prompts:\", error);\n  }\n  \n  // Default prompts if no user history or error\n  return [\n    \"A cat playing piano in a cozy room\",\n    \"Spiderman dancing on a rooftop\",  \n    \"Ocean waves crashing against cliffs\",\n    \"A majestic eagle soaring through mountain peaks at sunset\"\n  ];\n};\n\nexport default function VideoGenerator() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [autoTranslate, setAutoTranslate] = useState(true);\n  const [videos, setVideos] = useState<Video[]>([]);\n  const [examplePrompts, setExamplePrompts] = useState([\n    \"A cat playing piano in a cozy room\",\n    \"Spiderman dancing on a rooftop\",  \n    \"Ocean waves crashing against cliffs\",\n    \"A majestic eagle soaring through mountain peaks at sunset\"\n  ]);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  // Update example prompts when videos change\n  useEffect(() => {\n    const updateExamplePrompts = async () => {\n      try {\n        const newPrompts = await getDynamicExamplePrompts(videos, apiRequest);\n        if (Array.isArray(newPrompts) && newPrompts.length > 0) {\n          setExamplePrompts(newPrompts);\n        }\n      } catch (error) {\n        console.log(\"Error updating prompts:\", error);\n      }\n    };\n    \n    if (videos.length > 2) { // Only update when user has some history\n      updateExamplePrompts();\n    }\n  }, [videos]);\n\n  // Enhance prompt mutation\n  const enhancePromptMutation = useMutation({\n    mutationFn: async (prompt: string) => {\n      const response = await apiRequest(\"POST\", \"/api/enhance-prompt\", { prompt });\n      const data = await response.json();\n      return data.enhanced;\n    },\n    onSuccess: (enhanced: string) => {\n      setPrompt(enhanced);\n      toast({\n        title: \"Prompt ditingkatkan\",\n        description: \"Prompt Anda telah diperbaiki dan diperkaya.\",\n      });\n    },\n    onError: (error) => {\n      console.error(\"Enhance error:\", error);\n      toast({\n        title: \"Gagal meningkatkan prompt\",\n        description: \"Terjadi masalah dengan AI enhancement. Silakan coba dengan prompt asli Anda atau coba lagi nanti.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Generate video mutation\n  const generateVideo = useMutation({\n    mutationFn: async (prompt: string) => {\n      const response = await apiRequest(\"POST\", \"/api/videos\", { \n        prompt, \n        autoTranslate \n      });\n      return response.json() as Promise<Video & { wasTranslated?: boolean }>;\n    },\n    onSuccess: (video) => {\n      setVideos(prev => [video, ...prev]); // Keep all videos - unlimited\n      if (video.wasTranslated) {\n        toast({\n          title: \"Video dimulai\",\n          description: \"Prompt diterjemahkan ke bahasa Inggris dan video sedang diproses.\",\n        });\n      } else {\n        toast({\n          title: \"Video dimulai\",\n          description: \"Video sedang diproses. Ini mungkin memakan waktu beberapa menit.\",\n        });\n      }\n    },\n    onError: (error) => {\n      console.error(\"Generation error:\", error);\n      toast({\n        title: \"Gagal generate video\",\n        description: error instanceof Error ? error.message : \"Gagal memulai video generation\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Poll video status for processing videos\n  useEffect(() => {\n    const processingVideos = videos.filter(v => v.status === \"processing\");\n    \n    if (processingVideos.length === 0) return;\n\n    const interval = setInterval(async () => {\n      for (const video of processingVideos) {\n        try {\n          const response = await fetch(`/api/videos/${video.id}/status`);\n          if (response.ok) {\n            const updatedVideo = await response.json() as Video;\n            if (updatedVideo.status !== video.status) {\n              setVideos(prev => \n                prev.map(v => v.id === video.id ? updatedVideo : v)\n              );\n            }\n          }\n        } catch (error) {\n          console.error(`Error polling video ${video.id}:`, error);\n        }\n      }\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [videos]);\n\n  const handleGenerate = () => {\n    if (!prompt.trim()) {\n      toast({\n        title: \"Prompt diperlukan\",\n        description: \"Silakan masukkan prompt untuk generate video.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (prompt.length < 10) {\n      toast({\n        title: \"Prompt terlalu pendek\",\n        description: \"Silakan berikan prompt yang lebih detail (minimal 10 karakter).\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Check for duplicate prompts\n    const duplicateVideo = videos.find(v => v.prompt.toLowerCase().trim() === prompt.toLowerCase().trim());\n    if (duplicateVideo) {\n      const confirmed = window.confirm(\n        `Anda sudah pernah membuat video dengan prompt yang sama:\\n\\n\"${prompt}\"\\n\\nApakah Anda yakin ingin membuat video baru dengan prompt yang sama?`\n      );\n      if (!confirmed) {\n        return;\n      }\n    }\n\n    // Allow multiple video generation - users can generate multiple videos simultaneously\n    // Only check if current request is still being sent to prevent duplicate requests\n    if (generateVideo.isPending) {\n      toast({\n        title: \"Tunggu sebentar\",\n        description: \"Request sedang dikirim, harap tunggu sebentar.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    generateVideo.mutate(prompt);\n  };\n\n  const handleEnhancePrompt = () => {\n    if (!prompt.trim()) {\n      toast({\n        title: \"Prompt diperlukan\",\n        description: \"Silakan masukkan prompt terlebih dahulu.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    enhancePromptMutation.mutate(prompt);\n  };\n\n  const handlePromptExample = (examplePrompt: string) => {\n    setPrompt(examplePrompt);\n  };\n\n  const handleRetry = () => {\n    if (prompt) {\n      generateVideo.mutate(prompt);\n    }\n  };\n\n  const processingCount = videos.filter(v => v.status === \"processing\").length;\n  const isGenerating = generateVideo.isPending;\n  const canGenerate = !isGenerating; // Allow multiple videos to be generated simultaneously\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Video Generation Interface */}\n      <div className=\"space-y-4\">\n        {/* Prompt Input */}\n        <div className=\"mb-4\">\n          <div className=\"relative\">\n            <Textarea\n              id=\"prompt\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  // Allow Enter key to generate - multiple videos can be processed simultaneously\n                  if (!isGenerating) {\n                    handleGenerate();\n                  } else {\n                    toast({\n                      title: \"Tunggu sebentar\",\n                      description: \"Request sedang dikirim, harap tunggu sebentar.\",\n                      variant: \"destructive\",\n                    });\n                  }\n                }\n              }}\n              placeholder=\"A majestic eagle soaring through mountain peaks at sunset... (Press Enter to generate)\"\n              className=\"w-full h-24 px-4 py-3 bg-slate-900/70 border border-slate-600/50 rounded-xl text-white placeholder-slate-400 focus:border-purple-500 focus:ring-2 focus:ring-purple-500/20 resize-none transition-all duration-200 backdrop-blur-sm\"\n              maxLength={500}\n            />\n            <div className=\"absolute bottom-3 right-3 text-sm text-slate-500\">\n              {prompt.length}/500\n            </div>\n          </div>\n        </div>\n\n        {/* Example Prompts */}\n        <div className=\"mb-4\">\n          <p className=\"text-sm text-slate-400 mb-3\">Try these examples:</p>\n          <div className=\"flex flex-wrap gap-2\">\n            {Array.isArray(examplePrompts) && examplePrompts.length > 0 ? examplePrompts.slice(0, 4).map((example, index) => (\n              <Button\n                key={index}\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => handlePromptExample(example)}\n                className=\"px-3 py-1.5 bg-slate-800/60 hover:bg-slate-700/80 border-slate-600/50 text-xs backdrop-blur-sm transition-all duration-200 hover:border-purple-500/50\"\n                disabled={!canGenerate}\n              >\n                {example.length > 30 ? `${example.substring(0, 30)}...` : example}\n              </Button>\n            )) : (\n              // Show default prompts while loading\n              [\"A cat playing piano in a cozy room\", \"Spiderman dancing on a rooftop\", \"Ocean waves crashing against cliffs\", \"A majestic eagle soaring through mountain peaks at sunset\"].slice(0, 4).map((example, index) => (\n                <Button\n                  key={index}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePromptExample(example)}\n                  className=\"px-3 py-1.5 bg-slate-800/60 hover:bg-slate-700/80 border-slate-600/50 text-xs backdrop-blur-sm transition-all duration-200 hover:border-purple-500/50\"\n                  disabled={!canGenerate}\n                >\n                  {example.length > 30 ? `${example.substring(0, 30)}...` : example}\n                </Button>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Settings & Controls Row */}\n        <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between\">\n          <div className=\"flex flex-wrap items-center gap-4 text-sm text-slate-400\">\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                id=\"auto-translate\"\n                checked={autoTranslate}\n                onCheckedChange={setAutoTranslate}\n                className=\"scale-75\"\n              />\n              <Label htmlFor=\"auto-translate\" className=\"text-xs text-slate-400 flex items-center gap-1\">\n                <Languages className=\"w-3 h-3\" />\n                Auto-translate\n              </Label>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <Clock className=\"w-3 h-3\" />\n              <span className=\"text-xs\">8s duration</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <Film className=\"w-3 h-3\" />\n              <span className=\"text-xs\">{videos.length} videos</span>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Button\n              onClick={handleEnhancePrompt}\n              disabled={enhancePromptMutation.isPending || !prompt.trim()}\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"px-3 py-2 bg-slate-800/60 hover:bg-slate-700/80 border-slate-600/50 text-xs backdrop-blur-sm transition-all duration-200 hover:border-cyan-500/50\"\n            >\n              {enhancePromptMutation.isPending ? (\n                <Loader2 className=\"w-3 h-3 mr-1 animate-spin\" />\n              ) : (\n                <Sparkles className=\"w-3 h-3 mr-1\" />\n              )}\n              Enhance\n            </Button>\n            \n            <Button\n              onClick={handleGenerate}\n              disabled={!canGenerate}\n              className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 px-6 py-2 rounded-lg font-semibold transition-all duration-200 text-sm shadow-lg shadow-purple-500/25 hover:shadow-purple-500/40\"\n            >\n              {isGenerating ? (\n                <Loader2 className=\"w-3 h-3 mr-2 animate-spin\" />\n              ) : (\n                <Play className=\"w-3 h-3 mr-2\" />\n              )}\n              {isGenerating ? \"Generating...\" : \"Generate Video\"}\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Video Queue */}\n      {videos.length > 0 && (\n        <VideoTotal videos={videos} />\n      )}\n    </div>\n  );\n}\n","size_bytes":13406},"client/src/components/video-result.tsx":{"content":"\nimport { Button } from \"@/components/ui/button\";\nimport { Check, Download, Share, Clock, Video } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { Video as VideoType } from \"@shared/schema\";\n\ninterface VideoResultProps {\n  video: VideoType;\n}\n\nexport default function VideoResult({ video }: VideoResultProps) {\n  const { toast } = useToast();\n\n  const handleDownload = () => {\n    if (!video.id) return;\n\n    try {\n      // Use server download endpoint which serves from downloads folder\n      const downloadUrl = `/api/videos/${video.id}/download`;\n      \n      // Create a temporary link to trigger download\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.download = `video-${video.id}.mp4`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      toast({\n        title: \"Download dimulai\",\n        description: \"Video sedang didownload dari server.\",\n      });\n    } catch (error) {\n      console.error(\"Download error:\", error);\n      toast({\n        title: \"Gagal download video\",\n        description: \"Silakan coba lagi nanti.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handlePreview = () => {\n    if (!video.videoPath && !video.videoUrl) return;\n\n    try {\n      // Preview from downloads folder if available, otherwise from original URL\n      const previewUrl = video.videoPath ? video.videoPath : video.videoUrl;\n      window.open(previewUrl, '_blank');\n      \n      toast({\n        title: \"Preview dibuka\",\n        description: \"Video preview dibuka di tab baru.\",\n      });\n    } catch (error) {\n      console.error(\"Preview error:\", error);\n      toast({\n        title: \"Gagal membuka preview\",\n        description: \"Silakan coba lagi nanti.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleShare = () => {\n    if (navigator.share && video.videoUrl) {\n      navigator.share({\n        title: 'Check out this AI-generated video!',\n        text: `Generated from prompt: \"${video.prompt}\"`,\n        url: video.videoUrl,\n      });\n    } else if (video.videoUrl) {\n      navigator.clipboard.writeText(video.videoUrl);\n      toast({\n        title: \"Link copied\",\n        description: \"Video URL copied to clipboard.\",\n      });\n    }\n  };\n\n  const formatTime = (date: Date | null) => {\n    if (!date) return \"Unknown\";\n    const now = new Date();\n    const diffInMinutes = Math.floor((now.getTime() - new Date(date).getTime()) / (1000 * 60));\n    \n    if (diffInMinutes < 1) return \"Just now\";\n    if (diffInMinutes < 60) return `${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''} ago`;\n    \n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) return `${diffInHours} hour${diffInHours > 1 ? 's' : ''} ago`;\n    \n    const diffInDays = Math.floor(diffInHours / 24);\n    return `${diffInDays} day${diffInDays > 1 ? 's' : ''} ago`;\n  };\n\n  return (\n    <div className=\"bg-surface/80 backdrop-blur-sm rounded-2xl border border-slate-700 p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-gradient-to-r from-emerald-400 to-green-500 rounded-full flex items-center justify-center\">\n            <Check className=\"w-4 h-4 text-white\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-accent\">Video Generated Successfully!</h3>\n            <p className=\"text-sm text-slate-400\">Your 8-second AI video is ready</p>\n          </div>\n        </div>\n        <div className=\"flex space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handlePreview}\n            className=\"px-3 py-2 bg-blue-600 hover:bg-blue-700 border-blue-500 text-white\"\n            data-testid=\"button-preview-video\"\n          >\n            <Video className=\"w-4 h-4 mr-1\" />\n            Preview\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleDownload}\n            className=\"px-3 py-2 bg-green-600 hover:bg-green-700 border-green-500 text-white\"\n            data-testid=\"button-download-video\"\n          >\n            <Download className=\"w-4 h-4 mr-1\" />\n            Download\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleShare}\n            className=\"px-3 py-2 bg-slate-800 hover:bg-slate-700 border-slate-600\"\n            data-testid=\"button-share-video\"\n          >\n            <Share className=\"w-4 h-4 mr-1\" />\n            Share\n          </Button>\n        </div>\n      </div>\n\n      {/* Video Player - Use downloads path if available for better loading */}\n      <div className=\"relative bg-black rounded-xl overflow-hidden mb-4\">\n        <video \n          className=\"w-full h-auto max-h-96\" \n          controls \n          preload=\"metadata\"\n          playsInline\n          crossOrigin=\"anonymous\"\n          src={video.videoPath ? video.videoPath : video.videoUrl || undefined}\n          onLoadedMetadata={(e) => {\n            const duration = e.currentTarget.duration;\n            console.log('Video loaded, duration:', duration);\n          }}\n          onError={(e) => {\n            console.error('Video error:', e);\n            // If downloads path fails, try original URL\n            const videoElement = e.currentTarget;\n            if (video.videoPath && video.videoUrl && videoElement.src.includes('/downloads/')) {\n              console.log('Fallback to original URL');\n              videoElement.src = video.videoUrl;\n            }\n          }}\n          onCanPlay={() => {\n            console.log('Video can play from:', video.videoPath ? 'downloads folder' : 'original URL');\n          }}\n        >\n          Your browser does not support the video tag.\n        </video>\n        \n        {/* Video Overlay Info */}\n        <div className=\"absolute top-4 left-4 bg-black/70 backdrop-blur-sm rounded-lg px-3 py-1 text-sm\">\n          <Clock className=\"w-3 h-3 inline mr-1\" />\n          8s\n        </div>\n      </div>\n\n      <div className=\"flex items-center justify-between text-sm text-slate-400\">\n        <div>\n          <strong>Prompt:</strong> <span className=\"text-slate-300\">{video.prompt}</span>\n        </div>\n        <div>\n          Generated: <span>{formatTime(video.createdAt)}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6455},"client/src/components/video-total.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Trash2, Eye, Clock, CheckCircle, XCircle, Download, Share } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport VideoResult from \"./video-result\";\nimport type { Video } from \"@shared/schema\";\n\ninterface VideoTotalProps {\n  videos: Video[];\n}\n\nexport default function VideoTotal({ videos }: VideoTotalProps) {\n  const [selectedVideo, setSelectedVideo] = useState<Video | null>(null);\n  const { toast } = useToast();\n\n  const handleDownload = (video: Video) => {\n    if (!video.videoUrl) return;\n\n    try {\n      window.open(video.videoUrl, '_blank');\n      toast({\n        title: \"Video dibuka\",\n        description: \"Video dibuka di tab baru. Klik kanan pada video untuk menyimpan.\",\n      });\n    } catch (error) {\n      console.error(\"Download error:\", error);\n      toast({\n        title: \"Gagal membuka video\",\n        description: \"Silakan coba lagi atau copy link video.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleShare = (video: Video) => {\n    if (navigator.share && video.videoUrl) {\n      navigator.share({\n        title: 'Check out this AI-generated video!',\n        text: `Generated from prompt: \"${video.prompt}\"`,\n        url: video.videoUrl,\n      });\n    } else if (video.videoUrl) {\n      navigator.clipboard.writeText(video.videoUrl);\n      toast({\n        title: \"Link copied\",\n        description: \"Video URL copied to clipboard.\",\n      });\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"processing\":\n        return <Clock className=\"w-4 h-4 text-yellow-500\" />;\n      case \"success\":\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case \"failed\":\n        return <XCircle className=\"w-4 h-4 text-red-500\" />;\n      default:\n        return <Clock className=\"w-4 h-4 text-gray-500\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"processing\":\n        return \"bg-yellow-500\";\n      case \"success\":\n        return \"bg-green-500\";\n      case \"failed\":\n        return \"bg-red-500\";\n      default:\n        return \"bg-gray-500\";\n    }\n  };\n\n  const formatTime = (timestamp: string | Date | null) => {\n    if (!timestamp) return \"\";\n    const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n    return date.toLocaleTimeString('id-ID', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const processingCount = videos.filter(v => v.status === \"processing\").length;\n  const successCount = videos.filter(v => v.status === \"success\").length;\n  const failedCount = videos.filter(v => v.status === \"failed\").length;\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Queue Stats */}\n      <Card className=\"bg-slate-900 border-slate-700\">\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"text-lg text-white flex items-center gap-2\">\n            Video Total ({videos.length})\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n              <span className=\"text-slate-300\">Processing: {processingCount}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 rounded-full bg-green-500\"></div>\n              <span className=\"text-slate-300\">Complete: {successCount}</span>\n            </div>\n            {failedCount > 0 && (\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 rounded-full bg-red-500\"></div>\n                <span className=\"text-slate-300\">Failed: {failedCount}</span>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Video List */}\n      {videos.length > 0 && (\n        <Card className=\"bg-slate-900 border-slate-700\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg text-white\">Recent Videos</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ScrollArea className=\"h-64 w-full\">\n              <div className=\"grid grid-cols-2 gap-3 pb-2\">\n                {videos.map((video) => (\n                  <div\n                    key={video.id}\n                    className=\"p-3 bg-slate-800 rounded-lg\"\n                  >\n                    {/* Action buttons at the top */}\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center gap-1\">\n                        {getStatusIcon(video.status)}\n                        <Badge\n                          variant=\"secondary\"\n                          className={`${getStatusColor(video.status)} text-white text-xs`}\n                        >\n                          {video.status}\n                        </Badge>\n                      </div>\n                      {video.status === \"success\" && (\n                        <div className=\"flex items-center gap-1\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => setSelectedVideo(video)}\n                            className=\"h-7 w-7 p-0 text-slate-400 hover:text-white\"\n                            data-testid={`button-view-video-${video.id}`}\n                            title=\"View video\"\n                          >\n                            <Eye className=\"w-3 h-3\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => handleDownload(video)}\n                            className=\"h-7 w-7 p-0 text-slate-400 hover:text-white\"\n                            data-testid={`button-download-video-${video.id}`}\n                            title=\"Download video\"\n                          >\n                            <Download className=\"w-3 h-3\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => handleShare(video)}\n                            className=\"h-7 w-7 p-0 text-slate-400 hover:text-white\"\n                            data-testid={`button-share-video-${video.id}`}\n                            title=\"Share video\"\n                          >\n                            <Share className=\"w-3 h-3\" />\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {/* Video info */}\n                    <div>\n                      <p className=\"text-sm text-white line-clamp-2 mb-1\">\n                        {video.originalPrompt || video.prompt}\n                      </p>\n                      <p className=\"text-xs text-slate-400\">\n                        {formatTime(video.createdAt)}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </ScrollArea>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Selected Video Modal */}\n      {selectedVideo && selectedVideo.status === \"success\" && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-slate-900 rounded-xl p-6 max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold text-white\">Generated Video</h3>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setSelectedVideo(null)}\n                className=\"text-slate-400 hover:text-white\"\n              >\n                ×\n              </Button>\n            </div>\n            <VideoResult video={selectedVideo} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":8421},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import React, { useState, useEffect } from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = useState<State>(memoryState)\n\n  useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3903},"client/src/hooks/useAuth.ts":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport function useAuth() {\n  const queryClient = useQueryClient();\n  \n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/auth/me\"],\n    retry: false,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n\n  const loginMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/auth/login\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/me\"] });\n    },\n  });\n\n  const signupMutation = useMutation({\n    mutationFn: async (data: any) => {\n      return apiRequest(\"POST\", \"/api/auth/signup\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/me\"] });\n    },\n  });\n\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      return apiRequest(\"POST\", \"/api/auth/logout\");\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/me\"] });\n      // Force clear user data\n      queryClient.setQueryData([\"/api/auth/me\"], null);\n    },\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n    login: loginMutation.mutateAsync,\n    signup: signupMutation.mutateAsync,\n    logout: logoutMutation.mutateAsync,\n    isLoginLoading: loginMutation.isPending,\n    isSignupLoading: signupMutation.isPending,\n    isLogoutLoading: logoutMutation.isPending,\n  };\n}","size_bytes":1494},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/contact.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, Mail, MapPin, Phone, Clock, Send } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Contact() {\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    category: \"\",\n    message: \"\"\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      // In a real app, this would send to your backend\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n      \n      toast({\n        title: \"Pesan Terkirim\",\n        description: \"Terima kasih! Tim kami akan merespons dalam 1-2 hari kerja.\",\n      });\n      \n      setFormData({\n        name: \"\",\n        email: \"\",\n        subject: \"\",\n        category: \"\",\n        message: \"\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Maaf, terjadi kesalahan. Silakan coba lagi atau hubungi kami melalui email.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Hubungi Kami\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Tim support kami siap membantu Anda 24/7</p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Contact Form */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8\">\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Kirim Pesan</h2>\n              \n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"name\" className=\"text-slate-300\">Nama Lengkap *</Label>\n                    <Input\n                      id=\"name\"\n                      value={formData.name}\n                      onChange={(e) => handleInputChange(\"name\", e.target.value)}\n                      required\n                      className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400\"\n                      placeholder=\"Masukkan nama lengkap Anda\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"email\" className=\"text-slate-300\">Email *</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      required\n                      className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400\"\n                      placeholder=\"email@example.com\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"category\" className=\"text-slate-300\">Kategori *</Label>\n                    <Select value={formData.category} onValueChange={(value) => handleInputChange(\"category\", value)}>\n                      <SelectTrigger className=\"mt-2 bg-slate-700/50 border-slate-600 text-white\">\n                        <SelectValue placeholder=\"Pilih kategori pertanyaan\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"technical\">Masalah Teknis</SelectItem>\n                        <SelectItem value=\"billing\">Billing & Pembayaran</SelectItem>\n                        <SelectItem value=\"account\">Akun & Login</SelectItem>\n                        <SelectItem value=\"feature\">Fitur & Penggunaan</SelectItem>\n                        <SelectItem value=\"legal\">Legal & Kebijakan</SelectItem>\n                        <SelectItem value=\"partnership\">Kemitraan & Bisnis</SelectItem>\n                        <SelectItem value=\"other\">Lainnya</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"subject\" className=\"text-slate-300\">Subjek *</Label>\n                    <Input\n                      id=\"subject\"\n                      value={formData.subject}\n                      onChange={(e) => handleInputChange(\"subject\", e.target.value)}\n                      required\n                      className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400\"\n                      placeholder=\"Ringkasan singkat masalah/pertanyaan\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"message\" className=\"text-slate-300\">Pesan *</Label>\n                  <Textarea\n                    id=\"message\"\n                    value={formData.message}\n                    onChange={(e) => handleInputChange(\"message\", e.target.value)}\n                    required\n                    rows={6}\n                    className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400 resize-none\"\n                    placeholder=\"Jelaskan pertanyaan atau masalah Anda secara detail. Sertakan informasi yang relevan seperti pesan error, langkah yang sudah dicoba, dll.\"\n                  />\n                </div>\n\n                <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                  <p className=\"text-blue-200 text-sm\">\n                    📋 <strong>Tips untuk respons yang lebih cepat:</strong> Sertakan screenshot jika ada error, \n                    jelaskan langkah yang sudah dicoba, dan berikan informasi akun (tanpa password) jika diperlukan.\n                  </p>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 py-3\"\n                >\n                  {isSubmitting ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Mengirim...\n                    </>\n                  ) : (\n                    <>\n                      <Send className=\"w-4 h-4 mr-2\" />\n                      Kirim Pesan\n                    </>\n                  )}\n                </Button>\n              </form>\n            </div>\n          </div>\n\n          {/* Contact Info */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6\">\n              <h2 className=\"text-xl font-bold text-white mb-4\">Informasi Kontak</h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-start gap-3\">\n                  <Mail className=\"w-5 h-5 text-purple-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Email Support</h3>\n                    <p className=\"text-slate-300 text-sm\">support@videoai.id</p>\n                    <p className=\"text-slate-400 text-xs\">Untuk pertanyaan umum & teknis</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-3\">\n                  <Mail className=\"w-5 h-5 text-pink-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Email Legal</h3>\n                    <p className=\"text-slate-300 text-sm\">legal@videoai.id</p>\n                    <p className=\"text-slate-400 text-xs\">Untuk pertanyaan hukum & compliance</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-3\">\n                  <Phone className=\"w-5 h-5 text-cyan-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Telepon</h3>\n                    <p className=\"text-slate-300 text-sm\">+62 21 XXXX XXXX</p>\n                    <p className=\"text-slate-400 text-xs\">Senin - Jumat, 09:00 - 18:00 WIB</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-3\">\n                  <MapPin className=\"w-5 h-5 text-green-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Alamat</h3>\n                    <p className=\"text-slate-300 text-sm\">\n                      [Alamat lengkap kantor]<br />\n                      Jakarta, Indonesia\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-3\">\n                  <Clock className=\"w-5 h-5 text-yellow-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Jam Operasional</h3>\n                    <p className=\"text-slate-300 text-sm\">\n                      Senin - Jumat: 09:00 - 18:00 WIB<br />\n                      Sabtu: 10:00 - 15:00 WIB<br />\n                      Minggu: Tutup\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6\">\n              <h2 className=\"text-xl font-bold text-white mb-4\">Respons Time</h2>\n              \n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Email Support</span>\n                  <span className=\"text-green-400 font-semibold\">&lt; 24 jam</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Live Chat</span>\n                  <span className=\"text-green-400 font-semibold\">&lt; 5 menit</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Masalah Teknis</span>\n                  <span className=\"text-yellow-400 font-semibold\">&lt; 48 jam</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Legal Inquiry</span>\n                  <span className=\"text-yellow-400 font-semibold\">&lt; 72 jam</span>\n                </div>\n              </div>\n\n              <div className=\"mt-4 p-3 bg-green-900/20 border border-green-500/30 rounded-lg\">\n                <p className=\"text-green-200 text-sm\">\n                  🟢 <strong>Status:</strong> Semua sistem normal. Customer service tersedia 24/7 melalui live chat.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6\">\n              <h2 className=\"text-xl font-bold text-white mb-4\">Bantuan Cepat</h2>\n              \n              <div className=\"space-y-3\">\n                <Link href=\"/help/faq\">\n                  <div className=\"bg-slate-700/50 hover:bg-slate-700/70 rounded-lg p-3 transition-colors cursor-pointer\">\n                    <h3 className=\"font-semibold text-white text-sm\">📋 FAQ</h3>\n                    <p className=\"text-slate-400 text-xs\">Pertanyaan yang sering diajukan</p>\n                  </div>\n                </Link>\n                \n                <Link href=\"/help/getting-started\">\n                  <div className=\"bg-slate-700/50 hover:bg-slate-700/70 rounded-lg p-3 transition-colors cursor-pointer\">\n                    <h3 className=\"font-semibold text-white text-sm\">🚀 Getting Started</h3>\n                    <p className=\"text-slate-400 text-xs\">Panduan lengkap untuk pemula</p>\n                  </div>\n                </Link>\n                \n                <Link href=\"/legal/terms\">\n                  <div className=\"bg-slate-700/50 hover:bg-slate-700/70 rounded-lg p-3 transition-colors cursor-pointer\">\n                    <h3 className=\"font-semibold text-white text-sm\">⚖️ Terms & Conditions</h3>\n                    <p className=\"text-slate-400 text-xs\">Syarat dan ketentuan penggunaan</p>\n                  </div>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* English Summary */}\n        <div className=\"mt-12 bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8\">\n          <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n          <div className=\"space-y-4 text-slate-300\">\n            <p>\n              <strong>Contact Options:</strong> Reach our support team via email (support@videoai.id), \n              live chat widget, phone (+62 21 XXXX XXXX), or the contact form above.\n            </p>\n            <p>\n              <strong>Response Times:</strong> Email support &lt;24 hours, live chat &lt;5 minutes, \n              technical issues &lt;48 hours, legal inquiries &lt;72 hours.\n            </p>\n            <p>\n              <strong>Business Hours:</strong> Monday-Friday 09:00-18:00 WIB, Saturday 10:00-15:00 WIB, \n              Sunday closed. Live chat available 24/7.\n            </p>\n            <p>\n              <strong>Contact Categories:</strong> Technical issues, billing & payments, account & login, \n              features & usage, legal & policies, partnerships & business, and general inquiries.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":14523},"client/src/pages/home.tsx":{"content":"import { useState, useEffect, useRef } from \"react\";\nimport { motion, useScroll, useTransform, AnimatePresence } from \"framer-motion\";\nimport { Video, Play, Sparkles, ArrowRight, Users, Clock, Download, Zap, Star, Cpu, Layers, LogOut, User } from \"lucide-react\";\nimport VideoGenerator from \"@/components/video-generator\";\nimport { AuthForms } from \"@/components/auth/auth-forms\";\nimport { Button } from \"@/components/ui/button\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Home() {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [showGenerator, setShowGenerator] = useState(false);\n  const [showAuth, setShowAuth] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const { user, isAuthenticated, logout, isLoading } = useAuth();\n  const { toast } = useToast();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start start\", \"end start\"]\n  });\n\n  const y = useTransform(scrollYProgress, [0, 1], [\"0%\", \"50%\"]);\n  const opacity = useTransform(scrollYProgress, [0, 0.5], [1, 0]);\n\n  useEffect(() => {\n    setIsLoaded(true);\n    \n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      toast({\n        title: \"Logout berhasil\",\n        description: \"Sampai jumpa lagi!\",\n      });\n      setShowGenerator(false);\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Logout gagal\",\n        description: \"Terjadi kesalahan saat logout\",\n      });\n    }\n  };\n\n  const handleStartFree = () => {\n    if (!isAuthenticated) {\n      setShowAuth(true);\n    }\n    // If authenticated, video generator is already shown at top\n  };\n\n  return (\n    <div ref={containerRef} className=\"relative bg-gradient-to-br from-slate-950 via-purple-950 to-slate-900 text-white min-h-screen overflow-x-hidden\">\n      {/* Enhanced Animated Background Elements */}\n      <div className=\"fixed inset-0 overflow-hidden pointer-events-none\">\n        <motion.div \n          className=\"absolute -top-20 -right-20 md:-top-40 md:-right-40 w-40 h-40 md:w-80 md:h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n          animate={{\n            scale: [1, 1.2, 1],\n            x: [0, 30, 0],\n            y: [0, -50, 0]\n          }}\n          transition={{ duration: 8, repeat: Infinity, ease: \"easeInOut\" }}\n        />\n        <motion.div \n          className=\"absolute -bottom-20 -left-20 md:-bottom-40 md:-left-40 w-40 h-40 md:w-80 md:h-80 bg-cyan-500 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n          animate={{\n            scale: [1, 0.8, 1],\n            x: [0, -20, 0],\n            y: [0, 20, 0]\n          }}\n          transition={{ duration: 10, repeat: Infinity, ease: \"easeInOut\", delay: 2 }}\n        />\n        <motion.div \n          className=\"absolute top-20 left-20 md:top-40 md:left-40 w-40 h-40 md:w-80 md:h-80 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n          animate={{\n            scale: [1, 1.1, 1],\n            x: [0, 40, 0],\n            y: [0, -30, 0]\n          }}\n          transition={{ duration: 12, repeat: Infinity, ease: \"easeInOut\", delay: 4 }}\n        />\n      </div>\n\n      {/* Header - Responsive */}\n      <motion.header \n        initial={{ y: -100, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ duration: 0.8, ease: \"easeOut\" }}\n        className=\"border-b border-white/10 bg-black/20 backdrop-blur-xl sticky top-0 z-50\"\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-3 md:py-4\">\n          <div className=\"flex items-center justify-between\">\n            <motion.div \n              className=\"flex items-center space-x-2 md:space-x-3\"\n              whileHover={{ scale: 1.05 }}\n              transition={{ type: \"spring\", stiffness: 300 }}\n            >\n              <div className=\"w-8 h-8 md:w-12 md:h-12 bg-gradient-to-r from-purple-500 via-pink-500 to-cyan-500 rounded-xl md:rounded-2xl flex items-center justify-center shadow-lg shadow-purple-500/25\">\n                <Video className=\"text-white text-base md:text-xl\" />\n              </div>\n              <h1 className=\"text-xl md:text-3xl font-bold bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent font-space-grotesk\">\n                JrennGenerator\n              </h1>\n            </motion.div>\n            \n            <nav className=\"hidden md:flex items-center space-x-6 lg:space-x-8\">\n              <motion.a \n                href=\"#features\" \n                className=\"text-slate-300 hover:text-white transition-colors font-medium text-sm lg:text-base\"\n                whileHover={{ y: -2 }}\n              >\n                Features\n              </motion.a>\n              <motion.a \n                href=\"#demo\" \n                className=\"text-slate-300 hover:text-white transition-colors font-medium text-sm lg:text-base\"\n                whileHover={{ y: -2 }}\n              >\n                Demo\n              </motion.a>\n              <motion.a \n                href=\"#gallery\" \n                className=\"text-slate-300 hover:text-white transition-colors font-medium text-sm lg:text-base\"\n                whileHover={{ y: -2 }}\n              >\n                Gallery\n              </motion.a>\n              <motion.a \n                href=\"/pro-editor\" \n                className=\"text-slate-300 hover:text-white transition-colors font-medium text-sm lg:text-base\"\n                whileHover={{ y: -2 }}\n              >\n                Pro Editor\n              </motion.a>\n              \n              {isAuthenticated ? (\n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"text-slate-300 text-sm\">\n                    Hi, {user?.firstName && user?.lastName ? \n                      `${user.firstName} ${user.lastName}` : \n                      user?.firstName || user?.email?.split('@')[0] || 'User'\n                    }\n                  </span>\n                  <motion.button \n                    onClick={handleLogout}\n                    className=\"flex items-center space-x-2 bg-slate-700 hover:bg-slate-600 px-4 py-2 rounded-xl transition-colors text-sm\"\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                    data-testid=\"button-logout\"\n                  >\n                    <LogOut className=\"w-4 h-4\" />\n                    <span>Logout</span>\n                  </motion.button>\n                </div>\n              ) : (\n                <motion.button \n                  onClick={() => setShowAuth(true)}\n                  className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 px-4 lg:px-6 py-2 lg:py-2.5 rounded-xl transition-all duration-200 font-semibold shadow-lg shadow-purple-500/25 text-sm lg:text-base\"\n                  whileHover={{ scale: 1.05, boxShadow: \"0 20px 25px -5px rgba(168, 85, 247, 0.4)\" }}\n                  whileTap={{ scale: 0.95 }}\n                  data-testid=\"button-auth-modal\"\n                >\n                  Login / Daftar\n                </motion.button>\n              )}\n            </nav>\n\n            {/* Mobile Menu Button */}\n            <motion.button \n              className=\"md:hidden text-white p-2\"\n              whileTap={{ scale: 0.95 }}\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </motion.button>\n          </div>\n        </div>\n      </motion.header>\n\n      {/* Video Generator Section At Top - Only Show When Authenticated */}\n      {isAuthenticated && (\n        <motion.section \n          className=\"py-8 md:py-12 px-4 sm:px-6 lg:px-8 bg-black/20 backdrop-blur-sm border-b border-white/10\"\n          initial={{ opacity: 0, y: -50 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <div className=\"max-w-4xl mx-auto\">\n            <motion.div \n              className=\"text-center mb-6 md:mb-8\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n            >\n              <h2 className=\"text-2xl md:text-3xl font-bold text-white mb-2\">\n                Buat Video Pertama Anda\n              </h2>\n              <p className=\"text-slate-300 text-base md:text-lg\">\n                Masukkan prompt Anda di bawah ini dan saksikan keajaiban teknologi AI mengubah ide menjadi video profesional\n              </p>\n            </motion.div>\n            \n            <div className=\"bg-gradient-to-r from-slate-800/50 to-slate-700/50 backdrop-blur-sm rounded-3xl border border-slate-600/50 p-4 md:p-6 shadow-2xl\">\n              <VideoGenerator />\n            </div>\n          </div>\n        </motion.section>\n      )}\n\n      {/* Hero Section - Fully Responsive */}\n      <section className=\"relative min-h-screen flex items-center justify-center px-4 sm:px-6 lg:px-8 py-8 md:py-0\">\n        <motion.div style={{ y, opacity }} className=\"w-full\">\n          <div className=\"max-w-7xl mx-auto\">\n            <div className=\"grid lg:grid-cols-2 gap-8 lg:gap-12 items-center\">\n              \n              {/* Left Content */}\n              <div className=\"text-center lg:text-left order-2 lg:order-1\">\n                <motion.div\n                  initial={{ opacity: 0, y: 30 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 1, delay: 0.3 }}\n                  className=\"mb-6 md:mb-8\"\n                >\n                  <motion.div \n                    className=\"inline-flex items-center px-3 py-1.5 md:px-4 md:py-2 bg-white/10 backdrop-blur-sm rounded-full border border-white/20 mb-6 md:mb-8\"\n                    animate={{ \n                      boxShadow: [\n                        \"0 0 20px rgba(168, 85, 247, 0.3)\",\n                        \"0 0 40px rgba(219, 39, 119, 0.3)\",\n                        \"0 0 20px rgba(6, 182, 212, 0.3)\",\n                        \"0 0 20px rgba(168, 85, 247, 0.3)\"\n                      ]\n                    }}\n                    transition={{ duration: 4, repeat: Infinity }}\n                  >\n                    <Sparkles className=\"w-3 h-3 md:w-4 md:h-4 text-yellow-400 mr-2\" />\n                    <span className=\"text-xs md:text-sm font-medium\">Didukung Teknologi AI Canggih</span>\n                  </motion.div>\n                </motion.div>\n\n                <motion.h1 \n                  className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-black mb-4 md:mb-8 leading-tight font-space-grotesk\"\n                  initial={{ opacity: 0, y: 50 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 1.2, delay: 0.5 }}\n                >\n                  <span className=\"block\">Transform</span>\n                  <span className=\"block bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent\">\n                    Ideas Into\n                  </span>\n                  <span className=\"block\">Stunning Videos</span>\n                </motion.h1>\n\n                <motion.p \n                  className=\"text-base sm:text-lg md:text-xl lg:text-2xl text-slate-300 mb-8 md:mb-12 max-w-2xl mx-auto lg:mx-0 leading-relaxed\"\n                  initial={{ opacity: 0, y: 30 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 1, delay: 0.8 }}\n                >\n                  Buat video profesional <span className=\"text-cyan-400 font-semibold\">8 detik</span> dari prompt teks sederhana menggunakan AI terdepan. \n                  Tidak perlu skill editing - cukup imajinasi Anda. Dukung bahasa Indonesia dan otomatis diterjemahkan untuk hasil optimal.\n                </motion.p>\n\n                {/* SHOW LOGIN BUTTON ONLY WHEN NOT AUTHENTICATED */}\n                {!isAuthenticated && (\n                  <motion.div \n                    className=\"flex flex-col sm:flex-row gap-3 md:gap-4 justify-center lg:justify-start items-center mb-12 md:mb-16\"\n                    initial={{ opacity: 0, y: 30 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 1, delay: 1 }}\n                  >\n                    <Button\n                      onClick={handleStartFree}\n                      className=\"w-full sm:w-auto bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-8 md:px-12 py-4 md:py-6 text-lg md:text-xl font-bold rounded-2xl shadow-lg shadow-purple-500/25 transition-all duration-300 hover:shadow-purple-500/40 hover:scale-105 transform\"\n                      size=\"lg\"\n                      data-testid=\"button-start-free\"\n                    >\n                      <Play className=\"w-5 h-5 md:w-6 md:h-6 mr-3\" />\n                      Start Free\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full sm:w-auto border-2 border-white/20 text-white hover:bg-white/10 px-6 md:px-8 py-3 md:py-4 text-base md:text-lg font-semibold rounded-xl backdrop-blur-sm transition-all duration-300\"\n                      size=\"lg\"\n                      data-testid=\"button-watch-demo\"\n                    >\n                      <Video className=\"w-4 h-4 md:w-5 md:h-5 mr-2\" />\n                      Watch Demo\n                    </Button>\n                  </motion.div>\n                )}\n              </div>\n\n              {/* Right Content - Real Robot Video with Scroll Effects */}\n              <div className=\"order-1 lg:order-2 flex justify-center lg:justify-end\">\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 1.5, delay: 0.5 }}\n                  className=\"relative w-full max-w-md lg:max-w-lg xl:max-w-xl\"\n                  style={{\n                    y: useTransform(scrollYProgress, [0, 1], [0, -100]),\n                    rotateY: useTransform(scrollYProgress, [0, 1], [0, 25])\n                  }}\n                >\n                  {/* Animated Robot Video Container */}\n                  <motion.div\n                    className=\"relative bg-gradient-to-br from-purple-600/20 via-pink-600/20 to-cyan-600/20 rounded-3xl md:rounded-[2rem] p-4 md:p-8 backdrop-blur-sm border border-white/10 shadow-2xl\"\n                    animate={{\n                      boxShadow: [\n                        \"0 0 40px rgba(168, 85, 247, 0.2)\",\n                        \"0 0 80px rgba(219, 39, 119, 0.2)\",\n                        \"0 0 40px rgba(6, 182, 212, 0.2)\",\n                        \"0 0 40px rgba(168, 85, 247, 0.2)\"\n                      ]\n                    }}\n                    transition={{ duration: 6, repeat: Infinity }}\n                  >\n                    {/* Real Robot Video */}\n                    <motion.div\n                      className=\"relative w-full aspect-square bg-gradient-to-br from-slate-800 to-slate-900 rounded-2xl md:rounded-3xl overflow-hidden border border-slate-700\"\n                      whileHover={{ scale: 1.02, rotateY: 5 }}\n                      transition={{ type: \"spring\", stiffness: 300 }}\n                    >\n                      {/* Advanced Animated Robot with Video-like Effects */}\n                      <motion.div\n                        className=\"w-full h-full bg-gradient-to-br from-slate-800 to-slate-900 rounded-2xl md:rounded-3xl flex items-center justify-center relative overflow-hidden\"\n                        animate={{\n                          background: [\n                            \"linear-gradient(135deg, #1e293b 0%, #0f172a 100%)\",\n                            \"linear-gradient(135deg, #374151 0%, #1f2937 100%)\",\n                            \"linear-gradient(135deg, #1e293b 0%, #0f172a 100%)\"\n                          ]\n                        }}\n                        transition={{ duration: 4, repeat: Infinity }}\n                      >\n                        {/* Animated Video-like Background Effects */}\n                        <motion.div\n                          className=\"absolute inset-0 opacity-30\"\n                          animate={{\n                            background: [\n                              \"radial-gradient(circle at 20% 20%, rgba(168, 85, 247, 0.3) 0%, transparent 50%)\",\n                              \"radial-gradient(circle at 80% 80%, rgba(219, 39, 119, 0.3) 0%, transparent 50%)\",\n                              \"radial-gradient(circle at 50% 50%, rgba(6, 182, 212, 0.3) 0%, transparent 50%)\",\n                              \"radial-gradient(circle at 20% 20%, rgba(168, 85, 247, 0.3) 0%, transparent 50%)\"\n                            ]\n                          }}\n                          transition={{ duration: 6, repeat: Infinity }}\n                        />\n                        \n                        {/* Moving Particles for Video Effect */}\n                        {[...Array(8)].map((_, i) => (\n                          <motion.div\n                            key={i}\n                            className=\"absolute w-1 h-1 bg-cyan-400 rounded-full\"\n                            animate={{\n                              x: [Math.random() * 400 - 200, Math.random() * 400 - 200],\n                              y: [Math.random() * 400 - 200, Math.random() * 400 - 200],\n                              opacity: [0, 1, 0]\n                            }}\n                            transition={{\n                              duration: 3 + Math.random() * 2,\n                              repeat: Infinity,\n                              delay: i * 0.5\n                            }}\n                          />\n                        ))}\n                        \n                        {/* Enhanced SVG Robot with Video-like Animation */}\n                        <svg \n                          className=\"w-3/4 h-3/4 relative z-10\" \n                          viewBox=\"0 0 200 200\" \n                          fill=\"none\"\n                        >\n                          {/* Robot Body with Breathing Effect */}\n                          <motion.rect\n                            x=\"60\" y=\"80\" width=\"80\" height=\"100\" rx=\"12\"\n                            fill=\"url(#robotGradient)\"\n                            animate={{ \n                              opacity: [0.8, 1, 0.8],\n                              scale: [1, 1.02, 1],\n                              y: [80, 78, 80]\n                            }}\n                            transition={{ duration: 3, repeat: Infinity }}\n                          />\n                          \n                          {/* Robot Head with Nodding */}\n                          <motion.rect\n                            x=\"70\" y=\"40\" width=\"60\" height=\"50\" rx=\"8\"\n                            fill=\"url(#headGradient)\"\n                            animate={{ \n                              rotateZ: [-1, 1, -1],\n                              y: [40, 38, 40]\n                            }}\n                            transition={{ duration: 4, repeat: Infinity }}\n                          />\n                          \n                          {/* Eyes with Blinking and Scanning */}\n                          <motion.circle\n                            cx=\"85\" cy=\"60\" r=\"6\"\n                            fill=\"#00ffff\"\n                            animate={{ \n                              opacity: [1, 0.2, 1, 1, 0.2, 1],\n                              scale: [1, 1.3, 1],\n                              fill: [\"#00ffff\", \"#ff0080\", \"#00ffff\"]\n                            }}\n                            transition={{ duration: 3, repeat: Infinity }}\n                          />\n                          <motion.circle\n                            cx=\"115\" cy=\"60\" r=\"6\"\n                            fill=\"#00ffff\"\n                            animate={{ \n                              opacity: [1, 0.2, 1, 1, 0.2, 1],\n                              scale: [1, 1.3, 1],\n                              fill: [\"#00ffff\", \"#ff0080\", \"#00ffff\"]\n                            }}\n                            transition={{ duration: 3, repeat: Infinity, delay: 0.1 }}\n                          />\n                          \n                          {/* Arms with Working Motion */}\n                          <motion.rect\n                            x=\"35\" y=\"90\" width=\"20\" height=\"60\" rx=\"10\"\n                            fill=\"url(#armGradient)\"\n                            animate={{ \n                              rotateZ: [-10, 10, -10],\n                              x: [35, 32, 35]\n                            }}\n                            transition={{ duration: 2.5, repeat: Infinity }}\n                          />\n                          <motion.rect\n                            x=\"145\" y=\"90\" width=\"20\" height=\"60\" rx=\"10\"\n                            fill=\"url(#armGradient)\"\n                            animate={{ \n                              rotateZ: [10, -10, 10],\n                              x: [145, 148, 145]\n                            }}\n                            transition={{ duration: 2.5, repeat: Infinity }}\n                          />\n                          \n                          {/* Legs with Walking Motion */}\n                          <motion.rect\n                            x=\"75\" y=\"180\" width=\"15\" height=\"15\" rx=\"7\"\n                            fill=\"url(#legGradient)\"\n                            animate={{ \n                              y: [180, 185, 180],\n                              scaleY: [1, 0.8, 1]\n                            }}\n                            transition={{ duration: 1.5, repeat: Infinity }}\n                          />\n                          <motion.rect\n                            x=\"110\" y=\"180\" width=\"15\" height=\"15\" rx=\"7\"\n                            fill=\"url(#legGradient)\"\n                            animate={{ \n                              y: [180, 185, 180],\n                              scaleY: [1, 0.8, 1]\n                            }}\n                            transition={{ duration: 1.5, repeat: Infinity, delay: 0.75 }}\n                          />\n                          \n                          {/* Energy Core in Chest */}\n                          <motion.circle\n                            cx=\"100\" cy=\"120\" r=\"8\"\n                            fill=\"url(#energyGradient)\"\n                            animate={{\n                              scale: [1, 1.2, 1],\n                              opacity: [0.8, 1, 0.8]\n                            }}\n                            transition={{ duration: 2, repeat: Infinity }}\n                          />\n                          \n                          {/* Antenna with Signal */}\n                          <motion.line\n                            x1=\"100\" y1=\"40\" x2=\"100\" y2=\"25\"\n                            stroke=\"#00ffff\"\n                            strokeWidth=\"2\"\n                            animate={{\n                              opacity: [0.5, 1, 0.5]\n                            }}\n                            transition={{ duration: 1, repeat: Infinity }}\n                          />\n                          <motion.circle\n                            cx=\"100\" cy=\"25\" r=\"3\"\n                            fill=\"#00ffff\"\n                            animate={{\n                              scale: [1, 1.5, 1],\n                              opacity: [1, 0.5, 1]\n                            }}\n                            transition={{ duration: 1, repeat: Infinity }}\n                          />\n                          \n                          <defs>\n                            <linearGradient id=\"robotGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                              <stop offset=\"0%\" stopColor=\"#a855f7\" />\n                              <stop offset=\"50%\" stopColor=\"#ec4899\" />\n                              <stop offset=\"100%\" stopColor=\"#06b6d4\" />\n                            </linearGradient>\n                            <linearGradient id=\"headGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                              <stop offset=\"0%\" stopColor=\"#8b5cf6\" />\n                              <stop offset=\"100%\" stopColor=\"#a855f7\" />\n                            </linearGradient>\n                            <linearGradient id=\"armGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                              <stop offset=\"0%\" stopColor=\"#ec4899\" />\n                              <stop offset=\"100%\" stopColor=\"#f97316\" />\n                            </linearGradient>\n                            <linearGradient id=\"legGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                              <stop offset=\"0%\" stopColor=\"#06b6d4\" />\n                              <stop offset=\"100%\" stopColor=\"#3b82f6\" />\n                            </linearGradient>\n                            <radialGradient id=\"energyGradient\" cx=\"50%\" cy=\"50%\" r=\"50%\">\n                              <stop offset=\"0%\" stopColor=\"#00ffff\" />\n                              <stop offset=\"100%\" stopColor=\"#0080ff\" />\n                            </radialGradient>\n                          </defs>\n                        </svg>\n                        \n                        {/* Holographic Overlay Effect */}\n                        <motion.div\n                          className=\"absolute inset-0 bg-gradient-to-t from-transparent via-cyan-500/10 to-transparent\"\n                          animate={{\n                            y: [\"-100%\", \"100%\"]\n                          }}\n                          transition={{\n                            duration: 2,\n                            repeat: Infinity,\n                            repeatType: \"loop\"\n                          }}\n                        />\n                      </motion.div>\n                      \n                      {/* Video Overlay Effects */}\n                      <motion.div\n                        className=\"absolute inset-0 bg-gradient-to-r from-purple-500/10 via-pink-500/10 to-cyan-500/10 rounded-2xl md:rounded-3xl mix-blend-overlay\"\n                        animate={{ \n                          opacity: [0.3, 0.7, 0.3],\n                        }}\n                        transition={{ duration: 4, repeat: Infinity }}\n                      />\n\n                      {/* Scroll-Reactive Glowing Border */}\n                      <motion.div\n                        className=\"absolute inset-0 rounded-2xl md:rounded-3xl border-2\"\n                        style={{\n                          borderColor: useTransform(scrollYProgress, [0, 0.5, 1], \n                            [\"rgba(168, 85, 247, 0.3)\", \"rgba(219, 39, 119, 0.6)\", \"rgba(6, 182, 212, 0.4)\"]\n                          ),\n                          boxShadow: useTransform(scrollYProgress, [0, 0.5, 1], \n                            [\n                              \"0 0 20px rgba(168, 85, 247, 0.2)\",\n                              \"0 0 40px rgba(219, 39, 119, 0.4)\",\n                              \"0 0 30px rgba(6, 182, 212, 0.3)\"\n                            ]\n                          )\n                        }}\n                      />\n                    </motion.div>\n                    \n                    {/* Floating Particles with Scroll Effects */}\n                    <motion.div\n                      className=\"absolute -top-2 -left-2 w-6 h-6 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full\"\n                      animate={{ \n                        scale: [1, 1.2, 1],\n                        rotate: [0, 180, 360]\n                      }}\n                      style={{\n                        y: useTransform(scrollYProgress, [0, 1], [0, -50]),\n                        opacity: useTransform(scrollYProgress, [0, 0.5, 1], [1, 0.5, 0.8])\n                      }}\n                      transition={{ duration: 8, repeat: Infinity }}\n                    />\n                    <motion.div\n                      className=\"absolute -top-2 -right-2 w-4 h-4 bg-gradient-to-br from-cyan-500 to-blue-500 rounded-full\"\n                      animate={{ \n                        scale: [1, 1.3, 1],\n                        rotate: [360, 180, 0]\n                      }}\n                      style={{\n                        x: useTransform(scrollYProgress, [0, 1], [0, 30]),\n                        opacity: useTransform(scrollYProgress, [0, 0.5, 1], [1, 0.7, 0.9])\n                      }}\n                      transition={{ duration: 6, repeat: Infinity }}\n                    />\n                    <motion.div\n                      className=\"absolute -bottom-2 -left-2 w-5 h-5 bg-gradient-to-br from-pink-500 to-red-500 rounded-full\"\n                      animate={{ \n                        scale: [1, 1.1, 1],\n                        rotate: [0, -180, -360]\n                      }}\n                      style={{\n                        y: useTransform(scrollYProgress, [0, 1], [0, 40]),\n                        x: useTransform(scrollYProgress, [0, 1], [0, -20])\n                      }}\n                      transition={{ duration: 10, repeat: Infinity }}\n                    />\n                  </motion.div>\n                </motion.div>\n              </div>\n            </div>\n\n            {/* Stats Section - Responsive Grid */}\n            <motion.div \n              className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-8 max-w-5xl mx-auto mt-12 md:mt-16\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 1, delay: 1.2 }}\n            >\n              {[\n                { icon: Users, number: \"50K+\", label: \"Happy Creators\" },\n                { icon: Video, number: \"1M+\", label: \"Videos Generated\" },\n                { icon: Clock, number: \"< 3min\", label: \"Average Generation Time\" }\n              ].map((stat, index) => (\n                <motion.div \n                  key={index}\n                  className=\"text-center p-4 md:p-6 bg-white/5 backdrop-blur-sm rounded-xl md:rounded-2xl border border-white/10\"\n                  whileHover={{ scale: 1.05, backgroundColor: \"rgba(255,255,255,0.1)\" }}\n                  transition={{ type: \"spring\", stiffness: 300 }}\n                  data-testid={`stat-${stat.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  <stat.icon className=\"w-6 h-6 md:w-8 md:h-8 text-cyan-400 mx-auto mb-2 md:mb-3\" />\n                  <div className=\"text-xl md:text-3xl font-bold text-white mb-1\">{stat.number}</div>\n                  <div className=\"text-sm md:text-base text-slate-300\">{stat.label}</div>\n                </motion.div>\n              ))}\n            </motion.div>\n          </div>\n        </motion.div>\n      </section>\n\n      {/* Features Section - Only show when not authenticated or as additional info */}\n      {!isAuthenticated && (\n        <motion.div \n          className=\"text-center py-6 md:py-8\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 1.5 }}\n        >\n          <Button\n            onClick={handleStartFree}\n            variant=\"ghost\"\n            className=\"text-cyan-400 hover:text-cyan-300 animate-bounce text-sm md:text-base\"\n            data-testid=\"button-try-now\"\n          >\n            <ArrowRight className=\"w-4 h-4 md:w-5 md:h-5 mr-2\" />\n            Try it now\n          </Button>\n        </motion.div>\n      )}\n\n      {/* Authentication Modal */}\n      <AnimatePresence>\n        {showAuth && !isAuthenticated && (\n          <motion.div \n            className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center p-4 z-50\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={(e) => e.target === e.currentTarget && setShowAuth(false)}\n            data-testid=\"auth-modal-overlay\"\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              transition={{ type: \"spring\", stiffness: 300 }}\n              className=\"relative max-w-md w-full\"\n              data-testid=\"auth-modal\"\n            >\n              <button\n                onClick={() => setShowAuth(false)}\n                className=\"absolute -top-2 -right-2 w-8 h-8 bg-white/20 hover:bg-white/30 rounded-full flex items-center justify-center text-white z-10 transition-colors\"\n                data-testid=\"button-close-auth-modal\"\n              >\n                ×\n              </button>\n              <AuthForms />\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"mt-6 text-center text-sm text-slate-300\"\n              >\n                <p>Setelah login, Anda dapat langsung mulai membuat video!</p>\n              </motion.div>\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n      \n      {/* Auto-redirect to generator after successful auth */}\n      {isAuthenticated && showAuth && (\n        <>\n          {setShowAuth(false)}\n          {setShowGenerator(true)}\n        </>\n      )}\n    </div>\n  );\n}","size_bytes":33854},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/pricing.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, Check, Star, Zap, Crown } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\n\nexport default function Pricing() {\n  const plans = [\n    {\n      name: \"Free\",\n      price: \"Gratis\",\n      period: \"selamanya\",\n      description: \"Sempurna untuk mencoba dan eksplorasi\",\n      icon: Star,\n      color: \"text-green-400\",\n      bgColor: \"bg-green-900/20\",\n      borderColor: \"border-green-500/30\",\n      features: [\n        \"3 video per bulan\",\n        \"Durasi 8 detik per video\",\n        \"Resolusi HD (1080p)\",\n        \"Format MP4 download\",\n        \"Fitur enhance prompt\",\n        \"Auto-translate\",\n        \"Community support\"\n      ],\n      limitations: [\n        \"Watermark kecil\",\n        \"Queue priority rendah\",\n        \"Penyimpanan 30 hari\"\n      ],\n      cta: \"Mulai Gratis\",\n      popular: false\n    },\n    {\n      name: \"Pro\",\n      price: \"Rp 99.000\",\n      period: \"per bulan\",\n      description: \"Untuk kreator konten dan bisnis kecil\",\n      icon: Zap,\n      color: \"text-purple-400\",\n      bgColor: \"bg-purple-900/20\",\n      borderColor: \"border-purple-500/30\",\n      features: [\n        \"50 video per bulan\",\n        \"Durasi 8 detik per video\",\n        \"Resolusi HD & 4K\",\n        \"Tanpa watermark\",\n        \"Priority queue\",\n        \"Bulk generation (hingga 10)\",\n        \"Advanced prompt enhance\",\n        \"Analytics dasar\",\n        \"Email support\"\n      ],\n      limitations: [\n        \"Penyimpanan 90 hari\"\n      ],\n      cta: \"Upgrade ke Pro\",\n      popular: true\n    },\n    {\n      name: \"Business\",\n      price: \"Rp 299.000\",\n      period: \"per bulan\",\n      description: \"Untuk tim dan bisnis yang berkembang\",\n      icon: Crown,\n      color: \"text-yellow-400\",\n      bgColor: \"bg-yellow-900/20\",\n      borderColor: \"border-yellow-500/30\",\n      features: [\n        \"200 video per bulan\",\n        \"Durasi 8 detik per video\",\n        \"Resolusi hingga 4K\",\n        \"Tanpa watermark\",\n        \"Highest priority queue\",\n        \"Bulk generation (hingga 25)\",\n        \"Custom style presets\",\n        \"Advanced analytics\",\n        \"Team collaboration\",\n        \"Priority support\",\n        \"Custom branding\"\n      ],\n      limitations: [],\n      cta: \"Upgrade ke Business\",\n      popular: false\n    },\n    {\n      name: \"Enterprise\",\n      price: \"Custom\",\n      period: \"hubungi kami\",\n      description: \"Solusi khusus untuk enterprise\",\n      icon: Crown,\n      color: \"text-cyan-400\",\n      bgColor: \"bg-cyan-900/20\",\n      borderColor: \"border-cyan-500/30\",\n      features: [\n        \"Video unlimited\",\n        \"Custom video duration\",\n        \"White-label solution\",\n        \"API access\",\n        \"Custom model training\",\n        \"Dedicated infrastructure\",\n        \"24/7 phone support\",\n        \"Custom SLA\",\n        \"On-premise deployment\",\n        \"Advanced security features\"\n      ],\n      limitations: [],\n      cta: \"Hubungi Sales\",\n      popular: false\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\n        <div className=\"mb-12 text-center\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-6 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl md:text-5xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent mb-4\">\n            Pilih Paket yang Tepat\n          </h1>\n          <p className=\"text-slate-300 text-lg max-w-2xl mx-auto\">\n            Mulai gratis, upgrade kapan saja. Semua paket mencakup teknologi AI terdepan \n            dan video berkualitas HD tanpa komitmen jangka panjang.\n          </p>\n        </div>\n\n        {/* Pricing Cards */}\n        <div className=\"grid lg:grid-cols-4 md:grid-cols-2 gap-6 mb-12\">\n          {plans.map((plan, index) => {\n            const IconComponent = plan.icon;\n            return (\n              <div\n                key={index}\n                className={`relative bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6 border ${plan.borderColor} ${\n                  plan.popular ? 'ring-2 ring-purple-500/50 scale-105' : ''\n                } transition-transform hover:scale-105`}\n              >\n                {plan.popular && (\n                  <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                    <Badge className=\"bg-purple-600 text-white px-3 py-1\">\n                      Paling Populer\n                    </Badge>\n                  </div>\n                )}\n\n                <div className=\"text-center mb-6\">\n                  <div className={`w-12 h-12 ${plan.bgColor} rounded-full flex items-center justify-center mx-auto mb-4`}>\n                    <IconComponent className={`w-6 h-6 ${plan.color}`} />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-white mb-2\">{plan.name}</h3>\n                  <div className=\"mb-2\">\n                    <span className=\"text-3xl font-bold text-white\">{plan.price}</span>\n                    {plan.price !== \"Custom\" && (\n                      <span className=\"text-slate-400 text-sm ml-2\">/ {plan.period}</span>\n                    )}\n                  </div>\n                  <p className=\"text-slate-300 text-sm\">{plan.description}</p>\n                </div>\n\n                <div className=\"space-y-3 mb-6\">\n                  {plan.features.map((feature, featureIndex) => (\n                    <div key={featureIndex} className=\"flex items-center gap-3\">\n                      <Check className=\"w-4 h-4 text-green-400 flex-shrink-0\" />\n                      <span className=\"text-slate-300 text-sm\">{feature}</span>\n                    </div>\n                  ))}\n                </div>\n\n                {plan.limitations.length > 0 && (\n                  <div className=\"space-y-2 mb-6 p-3 bg-slate-700/30 rounded-lg\">\n                    <p className=\"text-slate-400 text-xs font-semibold\">Keterbatasan:</p>\n                    {plan.limitations.map((limitation, limitIndex) => (\n                      <div key={limitIndex} className=\"flex items-center gap-3\">\n                        <span className=\"text-slate-500 text-xs\">• {limitation}</span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                <Button\n                  className={`w-full ${\n                    plan.popular\n                      ? 'bg-purple-600 hover:bg-purple-700'\n                      : 'bg-slate-700 hover:bg-slate-600'\n                  } text-white`}\n                >\n                  {plan.cta}\n                </Button>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* FAQ Section */}\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 mb-12\">\n          <h2 className=\"text-2xl font-bold text-white mb-6 text-center\">Pertanyaan yang Sering Diajukan</h2>\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-semibold text-white mb-2\">Apakah saya bisa upgrade atau downgrade kapan saja?</h3>\n                <p className=\"text-slate-300 text-sm\">\n                  Ya, Anda dapat mengubah paket kapan saja. Upgrade berlaku langsung, \n                  sementara downgrade berlaku di periode billing berikutnya.\n                </p>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-white mb-2\">Bagaimana cara pembayaran?</h3>\n                <p className=\"text-slate-300 text-sm\">\n                  Kami menerima kartu kredit/debit, e-wallet (GoPay, OVO, DANA), \n                  dan transfer bank. Pembayaran diproses secara aman melalui gateway berlisensi.\n                </p>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-white mb-2\">Apakah ada kontrak jangka panjang?</h3>\n                <p className=\"text-slate-300 text-sm\">\n                  Tidak, semua paket berbasis langganan bulanan tanpa komitmen jangka panjang. \n                  Anda dapat membatalkan kapan saja.\n                </p>\n              </div>\n            </div>\n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"font-semibold text-white mb-2\">Apa yang terjadi jika melebihi kuota?</h3>\n                <p className=\"text-slate-300 text-sm\">\n                  Anda akan mendapat notifikasi saat mendekati limit. Setelah habis, \n                  Anda bisa upgrade paket atau menunggu reset di bulan berikutnya.\n                </p>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-white mb-2\">Apakah ada diskon untuk pembayaran tahunan?</h3>\n                <p className=\"text-slate-300 text-sm\">\n                  Ya, dapatkan diskon 20% untuk pembayaran tahunan di depan. \n                  Hubungi sales team untuk informasi lebih lanjut.\n                </p>\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-white mb-2\">Bisakah saya mendapat invoice untuk perusahaan?</h3>\n                <p className=\"text-slate-300 text-sm\">\n                  Tentu, semua paket Business dan Enterprise dilengkapi dengan invoice resmi \n                  dan dukungan untuk proses procurement perusahaan.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Enterprise CTA */}\n        <div className=\"bg-gradient-to-r from-purple-900/30 to-pink-900/30 rounded-2xl p-8 text-center border border-purple-500/30\">\n          <h2 className=\"text-2xl font-bold text-white mb-4\">Butuh Solusi Custom?</h2>\n          <p className=\"text-slate-300 mb-6 max-w-2xl mx-auto\">\n            Untuk kebutuhan enterprise dengan volume tinggi, custom features, \n            atau on-premise deployment, tim kami siap membantu merancang solusi yang tepat.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/contact\">\n              <Button size=\"lg\" className=\"bg-purple-600 hover:bg-purple-700\">\n                Hubungi Sales Team\n              </Button>\n            </Link>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-slate-600 text-slate-300 hover:bg-slate-700\">\n              Request Demo\n            </Button>\n          </div>\n        </div>\n\n        {/* English Summary */}\n        <div className=\"mt-12 bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8\">\n          <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n          <div className=\"space-y-4 text-slate-300\">\n            <p>\n              <strong>Pricing Plans:</strong> Free (3 videos/month with watermark), Pro (Rp 99K, 50 videos/month), \n              Business (Rp 299K, 200 videos/month), and Enterprise (custom pricing with unlimited features).\n            </p>\n            <p>\n              <strong>Features:</strong> All plans include HD video generation, prompt enhancement, auto-translate, \n              and commercial usage rights. Higher tiers offer no watermarks, priority processing, and advanced analytics.\n            </p>\n            <p>\n              <strong>Payment:</strong> Monthly subscriptions with no long-term contracts. Accepts credit cards, \n              e-wallets, and bank transfers. 20% discount available for annual payments.\n            </p>\n            <p>\n              <strong>Enterprise:</strong> Custom solutions available for high-volume users, API access, \n              white-label deployment, and on-premise installations with dedicated support.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":11917},"client/src/pages/pro-editor.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useEditorStore } from \"@/stores/editorStore\";\nimport Timeline from \"@/components/editor/Timeline\";\nimport MediaBin from \"@/components/editor/MediaBin\";\nimport Viewer from \"@/components/editor/Viewer\";\nimport { \n  Play, \n  Pause, \n  Square, \n  SkipBack,\n  SkipForward,\n  Volume2,\n  VolumeX,\n  Settings,\n  Save,\n  Download,\n  Undo,\n  Redo,\n  Layers,\n  Scissors,\n  Type,\n  Image,\n  Palette,\n  Music\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function ProEditor() {\n  const { toast } = useToast();\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [volume, setVolume] = useState([80]);\n  const [isMuted, setIsMuted] = useState(false);\n  \n  const {\n    project,\n    timeline,\n    setPlaying,\n    setCurrentTime,\n    selectedClips\n  } = useEditorStore();\n\n  const handlePlayPause = () => {\n    setPlaying(!timeline.isPlaying);\n    toast({\n      title: timeline.isPlaying ? \"Paused\" : \"Playing\",\n      description: `Video ${timeline.isPlaying ? \"paused\" : \"started playing\"}`\n    });\n  };\n\n  const handleStop = () => {\n    setPlaying(false);\n    setCurrentTime(0);\n    toast({\n      title: \"Stopped\",\n      description: \"Video playback stopped\"\n    });\n  };\n\n  const handleSaveProject = () => {\n    if (project) {\n      localStorage.setItem('jrenn-project', JSON.stringify(project));\n      toast({\n        title: \"Project Saved\",\n        description: `${project.name} has been saved`\n      });\n    }\n  };\n\n  const handleExportProject = () => {\n    toast({\n      title: \"Export Started\",\n      description: \"Your video is being exported. This may take a few minutes.\",\n    });\n    \n    // Simulate export process\n    setTimeout(() => {\n      toast({\n        title: \"Export Complete\",\n        description: \"Your video has been exported successfully\"\n      });\n    }, 3000);\n  };\n\n  const handleUndo = () => {\n    toast({\n      title: \"Undo\",\n      description: \"Last action has been undone\"\n    });\n  };\n\n  const handleRedo = () => {\n    toast({\n      title: \"Redo\", \n      description: \"Action has been redone\"\n    });\n  };\n\n  // Auto-save functionality\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (project) {\n        localStorage.setItem('jrenn-autosave', JSON.stringify(project));\n      }\n    }, 30000); // Auto-save every 30 seconds\n\n    return () => clearInterval(interval);\n  }, [project]);\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-slate-950 via-purple-950 to-slate-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Layers className=\"w-16 h-16 text-purple-400 mx-auto mb-4\" />\n          <h2 className=\"text-2xl font-bold text-white mb-2\">Loading Editor...</h2>\n          <p className=\"text-slate-400\">Initializing professional video editor</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-950 via-purple-950 to-slate-900 text-white flex flex-col\">\n      {/* Header */}\n      <motion.header \n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        className=\"border-b border-white/10 bg-black/20 backdrop-blur-xl\"\n      >\n        <div className=\"px-4 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <motion.a \n                href=\"/\"\n                className=\"flex items-center space-x-3\"\n                whileHover={{ scale: 1.05 }}\n              >\n                <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 via-pink-500 to-cyan-500 rounded-xl flex items-center justify-center\">\n                  <Layers className=\"text-white text-lg\" />\n                </div>\n                <div>\n                  <h1 className=\"text-xl font-bold bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent\">\n                    JrennGenerator Pro\n                  </h1>\n                  <p className=\"text-xs text-slate-400\">{project.name}</p>\n                </div>\n              </motion.a>\n            </div>\n            \n            {/* Playback Controls */}\n            <div className=\"flex items-center space-x-2\">\n              <Button size=\"sm\" variant=\"ghost\" onClick={() => setCurrentTime(0)}>\n                <SkipBack className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" onClick={handlePlayPause} className=\"bg-purple-600 hover:bg-purple-700\">\n                {timeline.isPlaying ? <Pause className=\"w-4 h-4\" /> : <Play className=\"w-4 h-4\" />}\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleStop}>\n                <Square className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={() => setCurrentTime(project.duration)}>\n                <SkipForward className=\"w-4 h-4\" />\n              </Button>\n              \n              <div className=\"flex items-center space-x-2 ml-4\">\n                <Button size=\"sm\" variant=\"ghost\" onClick={() => setIsMuted(!isMuted)}>\n                  {isMuted ? <VolumeX className=\"w-4 h-4\" /> : <Volume2 className=\"w-4 h-4\" />}\n                </Button>\n                <div className=\"w-20\">\n                  <Slider\n                    value={volume}\n                    onValueChange={setVolume}\n                    max={100}\n                    step={1}\n                  />\n                </div>\n              </div>\n            </div>\n            \n            {/* Action Buttons */}\n            <div className=\"flex items-center space-x-2\">\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleUndo}>\n                <Undo className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleRedo}>\n                <Redo className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" variant=\"outline\" onClick={handleSaveProject} className=\"border-white/20\">\n                <Save className=\"w-4 h-4 mr-2\" />\n                Save\n              </Button>\n              <Button size=\"sm\" onClick={handleExportProject} className=\"bg-gradient-to-r from-purple-600 to-pink-600\">\n                <Download className=\"w-4 h-4 mr-2\" />\n                Export\n              </Button>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"flex-1 flex overflow-hidden\">\n        {/* Left Sidebar - Tools & Media */}\n        <motion.div \n          initial={{ x: -100, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          className=\"w-80 bg-black/30 backdrop-blur-sm border-r border-white/10 flex flex-col\"\n        >\n          <Tabs defaultValue=\"media\" className=\"flex-1 flex flex-col\">\n            <TabsList className=\"grid w-full grid-cols-3 bg-white/10 m-2\">\n              <TabsTrigger value=\"media\" className=\"text-white data-[state=active]:text-black\">Media</TabsTrigger>\n              <TabsTrigger value=\"tools\" className=\"text-white data-[state=active]:text-black\">Tools</TabsTrigger>\n              <TabsTrigger value=\"effects\" className=\"text-white data-[state=active]:text-black\">Effects</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"media\" className=\"flex-1 p-2\">\n              <MediaBin />\n            </TabsContent>\n            \n            <TabsContent value=\"tools\" className=\"flex-1 p-2 space-y-4\">\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white\">Tools</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                  {[\n                    { id: \"select\", icon: Layers, name: \"Select\" },\n                    { id: \"cut\", icon: Scissors, name: \"Razor\" },\n                    { id: \"text\", icon: Type, name: \"Text\" },\n                    { id: \"image\", icon: Image, name: \"Image\" },\n                  ].map((tool) => (\n                    <Button\n                      key={tool.id}\n                      variant=\"ghost\"\n                      className=\"w-full justify-start text-white hover:text-white hover:bg-white/20\"\n                      onClick={() => toast({ title: \"Tool Selected\", description: `${tool.name} tool activated` })}\n                    >\n                      <tool.icon className=\"w-4 h-4 mr-2\" />\n                      {tool.name}\n                    </Button>\n                  ))}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"effects\" className=\"flex-1 p-2 space-y-4\">\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white flex items-center gap-2\">\n                    <Palette className=\"w-5 h-5\" />\n                    Video Effects\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                  {[\"Color Correction\", \"Blur\", \"Sharpen\", \"Brightness\", \"Contrast\", \"Saturation\"].map((effect) => (\n                    <Button \n                      key={effect} \n                      variant=\"ghost\" \n                      className=\"w-full justify-start text-white hover:text-white hover:bg-white/20\"\n                      onClick={() => toast({ title: \"Effect Applied\", description: `${effect} effect applied` })}\n                    >\n                      {effect}\n                    </Button>\n                  ))}\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white flex items-center gap-2\">\n                    <Music className=\"w-5 h-5\" />\n                    Audio Effects\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                  {[\"Equalizer\", \"Reverb\", \"Echo\", \"Noise Reduction\", \"Normalize\"].map((effect) => (\n                    <Button \n                      key={effect} \n                      variant=\"ghost\" \n                      className=\"w-full justify-start text-white hover:text-white hover:bg-white/20\"\n                      onClick={() => toast({ title: \"Audio Effect Applied\", description: `${effect} applied` })}\n                    >\n                      {effect}\n                    </Button>\n                  ))}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </motion.div>\n\n        {/* Main Content Area */}\n        <div className=\"flex-1 flex flex-col\">\n          {/* Video Preview */}\n          <motion.div \n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            className=\"flex-1\"\n          >\n            <Viewer />\n            \n            {/* Playback Indicator */}\n            {!timeline.isPlaying && (\n              <motion.div\n                initial={{ scale: 0 }}\n                animate={{ scale: 1 }}\n                className=\"absolute inset-0 flex items-center justify-center pointer-events-none\"\n              >\n                <div className=\"w-16 h-16 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center\">\n                  <Play className=\"w-8 h-8 text-white ml-1\" />\n                </div>\n              </motion.div>\n            )}\n          </motion.div>\n\n          {/* Timeline */}\n          <motion.div \n            initial={{ y: 100, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            className=\"h-80\"\n          >\n            <Timeline />\n          </motion.div>\n        </div>\n\n        {/* Right Sidebar - Inspector */}\n        <motion.div \n          initial={{ x: 100, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          className=\"w-80 bg-black/30 backdrop-blur-sm border-l border-white/10 p-4\"\n        >\n          <Card className=\"bg-white/5 border-white/10\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-lg text-white flex items-center gap-2\">\n                <Settings className=\"w-5 h-5\" />\n                Inspector\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {selectedClips.length > 0 ? (\n                <>\n                  <div>\n                    <label className=\"text-sm text-white block mb-2\">Opacity</label>\n                    <Slider defaultValue={[100]} max={100} step={1} />\n                  </div>\n                  <div>\n                    <label className=\"text-sm text-white block mb-2\">Scale</label>\n                    <Slider defaultValue={[100]} max={200} step={1} />\n                  </div>\n                  <div>\n                    <label className=\"text-sm text-white block mb-2\">Rotation</label>\n                    <Slider defaultValue={[0]} max={360} step={1} />\n                  </div>\n                  <div>\n                    <label className=\"text-sm text-white block mb-2\">Volume</label>\n                    <Slider defaultValue={[100]} max={100} step={1} />\n                  </div>\n                </>\n              ) : (\n                <div className=\"text-center py-8 text-slate-400\">\n                  <Settings className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\n                  <p>Select a clip to edit properties</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":14003},"client/src/pages/video-editor.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { \n  Play, \n  Pause, \n  Square, \n  Scissors, \n  Volume2, \n  VolumeX,\n  RotateCcw,\n  RotateCw,\n  ZoomIn,\n  ZoomOut,\n  Download,\n  Upload,\n  Type,\n  Image,\n  Layers,\n  Settings,\n  Save,\n  Undo,\n  Redo,\n  FastForward,\n  Rewind,\n  SkipBack,\n  SkipForward,\n  MousePointer\n} from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Button } from \"@/components/ui/button\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\n\nexport default function VideoEditor() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(100);\n  const [volume, setVolume] = useState([80]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [zoom, setZoom] = useState([100]);\n  const [selectedTool, setSelectedTool] = useState(\"select\");\n  const [opacity, setOpacity] = useState([100]);\n  const [scale, setScale] = useState([100]);\n  const [rotation, setRotation] = useState([0]);\n  const [bass, setBass] = useState([0]);\n  const [treble, setTreble] = useState([0]);\n  const [hasChanges, setHasChanges] = useState(false);\n  const [projectName, setProjectName] = useState(\"Untitled Project\");\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const { toast } = useToast();\n\n  const tools = [\n    { id: \"select\", icon: MousePointer, name: \"Select\" },\n    { id: \"cut\", icon: Scissors, name: \"Cut\" },\n    { id: \"text\", icon: Type, name: \"Text\" },\n    { id: \"image\", icon: Image, name: \"Image\" },\n  ];\n\n  const handlePlayPause = () => {\n    if (videoRef.current) {\n      if (isPlaying) {\n        videoRef.current.pause();\n        setIsPlaying(false);\n      } else {\n        videoRef.current.play().catch(error => {\n          console.log('Video play error:', error);\n          // Video might not be loaded yet, just update state\n          setIsPlaying(true);\n        });\n        setIsPlaying(true);\n      }\n    } else {\n      // No video loaded, just toggle state for demo\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handleStop = () => {\n    setIsPlaying(false);\n    setCurrentTime(0);\n    if (videoRef.current) {\n      videoRef.current.pause();\n      videoRef.current.currentTime = 0;\n    }\n  };\n\n  const handleRewind = () => {\n    const newTime = Math.max(0, currentTime - 10);\n    setCurrentTime(newTime);\n    if (videoRef.current) {\n      videoRef.current.currentTime = newTime;\n    }\n  };\n\n  const handleFastForward = () => {\n    const newTime = Math.min(duration, currentTime + 10);\n    setCurrentTime(newTime);\n    if (videoRef.current) {\n      videoRef.current.currentTime = newTime;\n    }\n  };\n\n  const handleSkipBack = () => {\n    setCurrentTime(0);\n    if (videoRef.current) {\n      videoRef.current.currentTime = 0;\n    }\n  };\n\n  const handleSkipForward = () => {\n    setCurrentTime(duration);\n    if (videoRef.current) {\n      videoRef.current.currentTime = duration;\n    }\n  };\n\n  const handleTimelineClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const percentage = x / rect.width;\n    const newTime = percentage * duration;\n    setCurrentTime(newTime);\n    if (videoRef.current) {\n      videoRef.current.currentTime = newTime;\n    }\n  };\n\n  const handleVolumeChange = (value: number[]) => {\n    setVolume(value);\n    if (videoRef.current) {\n      videoRef.current.volume = value[0] / 100;\n    }\n  };\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    if (videoRef.current) {\n      videoRef.current.muted = !isMuted;\n    }\n  };\n\n  const handleZoomChange = (value: number[]) => {\n    setZoom(value);\n  };\n\n  const handleUndo = () => {\n    toast({\n      title: \"Undo\",\n      description: \"Last action has been undone\",\n    });\n  };\n\n  const handleRedo = () => {\n    toast({\n      title: \"Redo\",\n      description: \"Action has been redone\",\n    });\n  };\n\n  const handleSaveProject = () => {\n    setHasChanges(false);\n    toast({\n      title: \"Project Saved\",\n      description: `${projectName} has been saved successfully`,\n    });\n  };\n\n  const handleExportVideo = () => {\n    toast({\n      title: \"Export Started\",\n      description: \"Your video is being exported. This may take a few minutes.\",\n    });\n    // Simulate export process\n    setTimeout(() => {\n      toast({\n        title: \"Export Complete\",\n        description: \"Your video has been exported successfully\",\n      });\n    }, 3000);\n  };\n\n  const handleImportMedia = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      toast({\n        title: \"Media Imported\",\n        description: `${file.name} has been added to your project`,\n      });\n      setHasChanges(true);\n    }\n  };\n\n  const handleToolSelect = (toolId: string) => {\n    setSelectedTool(toolId);\n    toast({\n      title: \"Tool Selected\",\n      description: `${tools.find(t => t.id === toolId)?.name} tool is now active`,\n    });\n  };\n\n  const handlePropertyChange = (property: string, value: number[]) => {\n    setHasChanges(true);\n    switch (property) {\n      case 'opacity':\n        setOpacity(value);\n        break;\n      case 'scale':\n        setScale(value);\n        break;\n      case 'rotation':\n        setRotation(value);\n        break;\n      case 'bass':\n        setBass(value);\n        break;\n      case 'treble':\n        setTreble(value);\n        break;\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-950 via-purple-950 to-slate-900 text-white\">\n      {/* Header */}\n      <motion.header \n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        className=\"border-b border-white/10 bg-black/20 backdrop-blur-xl\"\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <motion.a \n                href=\"/\"\n                className=\"flex items-center space-x-3\"\n                whileHover={{ scale: 1.05 }}\n              >\n                <div className=\"w-10 h-10 bg-gradient-to-r from-purple-500 via-pink-500 to-cyan-500 rounded-xl flex items-center justify-center\">\n                  <Layers className=\"text-white text-lg\" />\n                </div>\n                <h1 className=\"text-2xl font-bold bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent\">\n                  JrennGenerator Editor\n                </h1>\n              </motion.a>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <Button variant=\"outline\" size=\"sm\" className=\"border-white/20 text-white hover:bg-white/10\" onClick={handleSaveProject}>\n                <Save className=\"w-4 h-4 mr-2\" />\n                Save Project\n              </Button>\n              <Button size=\"sm\" className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700\" onClick={handleExportVideo}>\n                <Download className=\"w-4 h-4 mr-2\" />\n                Export\n              </Button>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"flex h-[calc(100vh-80px)]\">\n        {/* Left Sidebar - Tools & Properties */}\n        <motion.div \n          initial={{ x: -100, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          className=\"w-80 bg-black/30 backdrop-blur-sm border-r border-white/10 p-4\"\n        >\n          <Tabs defaultValue=\"tools\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-3 bg-white/10\">\n              <TabsTrigger value=\"tools\" className=\"text-white data-[state=active]:text-black\">Tools</TabsTrigger>\n              <TabsTrigger value=\"effects\" className=\"text-white data-[state=active]:text-black\">Effects</TabsTrigger>\n              <TabsTrigger value=\"audio\" className=\"text-white data-[state=active]:text-black\">Audio</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"tools\" className=\"mt-4 space-y-4\">\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white\">Tools</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                  {tools.map((tool) => (\n                    <Button\n                      key={tool.id}\n                      variant={selectedTool === tool.id ? \"default\" : \"ghost\"}\n                      className={`w-full justify-start ${selectedTool === tool.id ? 'text-black' : 'text-white hover:text-white hover:bg-white/20'}`}\n                      onClick={() => handleToolSelect(tool.id)}\n                    >\n                      <tool.icon className=\"w-4 h-4 mr-2\" />\n                      {tool.name}\n                    </Button>\n                  ))}\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white\">Properties</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <Label className=\"text-sm text-white\">Opacity ({opacity[0]}%)</Label>\n                    <Slider\n                      value={opacity}\n                      onValueChange={(value) => handlePropertyChange('opacity', value)}\n                      max={100}\n                      step={1}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-white\">Scale ({scale[0]}%)</Label>\n                    <Slider\n                      value={scale}\n                      onValueChange={(value) => handlePropertyChange('scale', value)}\n                      max={200}\n                      step={1}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-white\">Rotation ({rotation[0]}°)</Label>\n                    <Slider\n                      value={rotation}\n                      onValueChange={(value) => handlePropertyChange('rotation', value)}\n                      max={360}\n                      step={1}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"effects\" className=\"mt-4 space-y-4\">\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white\">Video Effects</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-2\">\n                  {[\"Blur\", \"Sharpen\", \"Brightness\", \"Contrast\", \"Saturation\", \"Vintage\", \"Sepia\", \"Black & White\"].map((effect) => (\n                    <Button \n                      key={effect} \n                      variant=\"ghost\" \n                      className=\"w-full justify-start text-sm text-white hover:text-white hover:bg-white/20\"\n                      onClick={() => toast({ title: \"Effect Applied\", description: `${effect} effect has been applied` })}\n                    >\n                      {effect}\n                    </Button>\n                  ))}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"audio\" className=\"mt-4 space-y-4\">\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white\">Audio Effects</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <Label className=\"text-sm text-white\">Volume ({volume[0]}%)</Label>\n                    <Slider\n                      value={volume}\n                      onValueChange={handleVolumeChange}\n                      max={100}\n                      step={1}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-white\">Bass ({bass[0]})</Label>\n                    <Slider\n                      value={bass}\n                      onValueChange={(value) => handlePropertyChange('bass', value)}\n                      max={100}\n                      min={-100}\n                      step={1}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-white\">Treble ({treble[0]})</Label>\n                    <Slider\n                      value={treble}\n                      onValueChange={(value) => handlePropertyChange('treble', value)}\n                      max={100}\n                      min={-100}\n                      step={1}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </motion.div>\n\n        {/* Main Editor Area */}\n        <div className=\"flex-1 flex flex-col\">\n          {/* Top Toolbar */}\n          <motion.div \n            initial={{ y: -20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            className=\"bg-black/20 backdrop-blur-sm border-b border-white/10 p-4\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Button size=\"sm\" variant=\"ghost\" onClick={handleUndo}>\n                  <Undo className=\"w-4 h-4\" />\n                </Button>\n                <Button size=\"sm\" variant=\"ghost\" onClick={handleRedo}>\n                  <Redo className=\"w-4 h-4\" />\n                </Button>\n                <div className=\"w-px h-6 bg-white/20 mx-2\" />\n                <Button size=\"sm\" variant=\"ghost\" onClick={handleImportMedia}>\n                  <Upload className=\"w-4 h-4 mr-2\" />\n                  Import Media\n                </Button>\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  accept=\"video/*,audio/*,image/*\"\n                  className=\"hidden\"\n                  onChange={handleFileSelect}\n                />\n              </div>\n              \n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <Label className=\"text-sm text-white\">Zoom:</Label>\n                  <Button size=\"sm\" variant=\"ghost\" onClick={() => handleZoomChange([Math.max(25, zoom[0] - 25)])}>\n                    <ZoomOut className=\"w-4 h-4\" />\n                  </Button>\n                  <span className=\"text-sm w-12 text-center text-white\">{zoom[0]}%</span>\n                  <Button size=\"sm\" variant=\"ghost\" onClick={() => handleZoomChange([Math.min(400, zoom[0] + 25)])}>\n                    <ZoomIn className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Video Preview Area */}\n          <motion.div \n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            className=\"flex-1 bg-black/40 backdrop-blur-sm flex items-center justify-center p-8\"\n          >\n            <div className=\"relative bg-black rounded-xl shadow-2xl\" style={{ transform: `scale(${zoom[0] / 100})` }}>\n              <video\n                ref={videoRef}\n                className=\"w-[640px] h-[360px] rounded-xl\"\n                poster=\"/api/placeholder/640/360\"\n              >\n                <source src=\"\" type=\"video/mp4\" />\n              </video>\n              <div className=\"absolute inset-0 border-2 border-purple-500/50 rounded-xl pointer-events-none\" />\n              \n              {/* Center Play Button when paused */}\n              {!isPlaying && (\n                <motion.button\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  className=\"absolute inset-0 flex items-center justify-center\"\n                  onClick={handlePlayPause}\n                >\n                  <div className=\"w-20 h-20 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center hover:bg-white/30 transition-colors\">\n                    <Play className=\"w-8 h-8 text-white ml-1\" />\n                  </div>\n                </motion.button>\n              )}\n            </div>\n          </motion.div>\n\n          {/* Timeline & Controls */}\n          <motion.div \n            initial={{ y: 100, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            className=\"bg-black/30 backdrop-blur-sm border-t border-white/10 p-4\"\n          >\n            {/* Playback Controls */}\n            <div className=\"flex items-center justify-center space-x-4 mb-4\">\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleSkipBack}>\n                <SkipBack className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleRewind}>\n                <Rewind className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" onClick={handlePlayPause} className=\"bg-purple-600 hover:bg-purple-700\">\n                {isPlaying ? <Pause className=\"w-4 h-4\" /> : <Play className=\"w-4 h-4\" />}\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleFastForward}>\n                <FastForward className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleSkipForward}>\n                <SkipForward className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={handleStop}>\n                <Square className=\"w-4 h-4\" />\n              </Button>\n              \n              <div className=\"flex items-center space-x-2 ml-8\">\n                <Button size=\"sm\" variant=\"ghost\" onClick={handleMute}>\n                  {isMuted ? <VolumeX className=\"w-4 h-4\" /> : <Volume2 className=\"w-4 h-4\" />}\n                </Button>\n                <div className=\"w-24\">\n                  <Slider\n                    value={volume}\n                    onValueChange={handleVolumeChange}\n                    max={100}\n                    step={1}\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Timeline */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-4\">\n                <span className=\"text-sm font-mono w-16\">{formatTime(currentTime)}</span>\n                <div \n                  className=\"flex-1 h-8 bg-slate-800 rounded-lg relative cursor-pointer overflow-hidden\"\n                  onClick={handleTimelineClick}\n                >\n                  <div \n                    className=\"h-full bg-gradient-to-r from-purple-600 to-pink-600 transition-all duration-100\"\n                    style={{ width: `${(currentTime / duration) * 100}%` }}\n                  />\n                  <div \n                    className=\"absolute top-0 w-1 h-full bg-white shadow-lg transition-all duration-100\"\n                    style={{ left: `${(currentTime / duration) * 100}%` }}\n                  />\n                </div>\n                <span className=\"text-sm font-mono w-16\">{formatTime(duration)}</span>\n              </div>\n\n              {/* Track Layers */}\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"text-sm w-16 text-white\">Video</span>\n                  <div className=\"flex-1 h-12 bg-slate-700 rounded-lg border border-slate-600 relative\">\n                    <div className=\"h-full bg-gradient-to-r from-blue-600/50 to-blue-400/50 rounded-lg m-1 flex items-center px-3\">\n                      <span className=\"text-xs\">Main Video Track</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"text-sm w-16 text-white\">Audio</span>\n                  <div className=\"flex-1 h-12 bg-slate-700 rounded-lg border border-slate-600 relative\">\n                    <div className=\"h-full bg-gradient-to-r from-green-600/50 to-green-400/50 rounded-lg m-1 flex items-center px-3\">\n                      <span className=\"text-xs\">Audio Track 1</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"text-sm w-16 text-white\">Text</span>\n                  <div className=\"flex-1 h-12 bg-slate-700 rounded-lg border border-slate-600 relative\">\n                    <div className=\"h-full bg-gradient-to-r from-yellow-600/50 to-yellow-400/50 rounded-lg m-1 flex items-center px-3 w-32\">\n                      <span className=\"text-xs\">Title Text</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Right Sidebar - Media Library */}\n        <motion.div \n          initial={{ x: 100, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          className=\"w-80 bg-black/30 backdrop-blur-sm border-l border-white/10 p-4\"\n        >\n          <Tabs defaultValue=\"media\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2 bg-white/10\">\n              <TabsTrigger value=\"media\" className=\"text-white data-[state=active]:text-black\">Media</TabsTrigger>\n              <TabsTrigger value=\"export\" className=\"text-white data-[state=active]:text-black\">Export</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"media\" className=\"mt-4 space-y-4\">\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white\">Media Library</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {[1, 2, 3, 4, 5, 6].map((i) => (\n                      <div key={i} className=\"aspect-video bg-slate-700 rounded-lg border border-slate-600 flex items-center justify-center cursor-pointer hover:bg-slate-600 transition-colors\">\n                        <Image className=\"w-6 h-6 text-slate-400\" />\n                      </div>\n                    ))}\n                  </div>\n                  <Button className=\"w-full mt-4 bg-purple-600 hover:bg-purple-700\" onClick={handleImportMedia}>\n                    <Upload className=\"w-4 h-4 mr-2\" />\n                    Upload Media\n                  </Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"export\" className=\"mt-4 space-y-4\">\n              <Card className=\"bg-white/5 border-white/10\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg text-white\">Export Settings</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <Label className=\"text-sm text-white\">Quality</Label>\n                    <select className=\"w-full mt-2 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-sm text-white\">\n                      <option className=\"text-black\">1080p (Full HD)</option>\n                      <option className=\"text-black\">720p (HD)</option>\n                      <option className=\"text-black\">480p (SD)</option>\n                      <option className=\"text-black\">4K (Ultra HD)</option>\n                    </select>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-white\">Format</Label>\n                    <select className=\"w-full mt-2 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-sm text-white\">\n                      <option className=\"text-black\">MP4</option>\n                      <option className=\"text-black\">MOV</option>\n                      <option className=\"text-black\">AVI</option>\n                      <option className=\"text-black\">WebM</option>\n                    </select>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-white\">Frame Rate</Label>\n                    <select className=\"w-full mt-2 bg-slate-700 border border-slate-600 rounded-lg px-3 py-2 text-sm text-white\">\n                      <option className=\"text-black\">30 fps</option>\n                      <option className=\"text-black\">24 fps</option>\n                      <option className=\"text-black\">60 fps</option>\n                      <option className=\"text-black\">120 fps</option>\n                    </select>\n                  </div>\n                  <Button className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700\" onClick={handleExportVideo}>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export Video\n                  </Button>\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":26252},"client/src/stores/editorStore.ts":{"content":"import { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { Project, TimelineState, ViewerState, Track, Clip, MediaFile } from '@/types/editor';\n\ninterface EditorState {\n  // Project\n  project: Project | null;\n  hasUnsavedChanges: boolean;\n  \n  // Timeline\n  timeline: TimelineState;\n  \n  // Viewer\n  viewer: ViewerState;\n  \n  // Selection\n  selectedClips: string[];\n  selectedTracks: string[];\n  \n  // Actions\n  setProject: (project: Project) => void;\n  updateProject: (updates: Partial<Project>) => void;\n  addTrack: (track: Track) => void;\n  removeTrack: (trackId: string) => void;\n  updateTrack: (trackId: string, updates: Partial<Track>) => void;\n  addClip: (clip: Clip) => void;\n  removeClip: (clipId: string) => void;\n  updateClip: (clipId: string, updates: Partial<Clip>) => void;\n  addMedia: (media: MediaFile) => void;\n  removeMedia: (mediaId: string) => void;\n  setCurrentTime: (time: number) => void;\n  setZoom: (zoom: number) => void;\n  setPlaying: (playing: boolean) => void;\n  selectClip: (clipId: string, addToSelection?: boolean) => void;\n  selectTrack: (trackId: string, addToSelection?: boolean) => void;\n  clearSelection: () => void;\n  splitClip: (clipId: string, time: number) => void;\n  duplicateClip: (clipId: string) => void;\n  setInPoint: (time?: number) => void;\n  setOutPoint: (time?: number) => void;\n}\n\nconst defaultProject: Project = {\n  id: 'new-project',\n  name: 'Untitled Project',\n  version: 1,\n  fps: 30,\n  width: 1920,\n  height: 1080,\n  duration: 0,\n  tracks: [\n    {\n      id: 'v1',\n      type: 'video',\n      name: 'Video 1',\n      locked: false,\n      muted: false,\n      solo: false,\n      height: 80,\n      clips: []\n    },\n    {\n      id: 'a1',\n      type: 'audio',\n      name: 'Audio 1',\n      locked: false,\n      muted: false,\n      solo: false,\n      height: 60,\n      clips: []\n    }\n  ],\n  media: [],\n  effects: [],\n  transitions: [],\n  markers: [],\n  settings: {\n    previewQuality: 'half',\n    snapEnabled: true,\n    rippleDelete: false,\n    magneticTimeline: true\n  },\n  createdAt: new Date(),\n  updatedAt: new Date()\n};\n\nconst defaultTimeline: TimelineState = {\n  currentTime: 0,\n  zoom: 1,\n  scrollX: 0,\n  selectedClips: [],\n  selectedTracks: [],\n  isPlaying: false,\n  isLooping: false\n};\n\nconst defaultViewer: ViewerState = {\n  safeMargins: false,\n  rulers: false,\n  guides: false,\n  backgroundColor: '#000000'\n};\n\nexport const useEditorStore = create<EditorState>()(\n  subscribeWithSelector((set, get) => ({\n    project: defaultProject,\n    hasUnsavedChanges: false,\n    timeline: defaultTimeline,\n    viewer: defaultViewer,\n    selectedClips: [],\n    selectedTracks: [],\n\n    setProject: (project) => {\n      set({ project, hasUnsavedChanges: false });\n    },\n\n    updateProject: (updates) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: { ...project, ...updates, updatedAt: new Date() },\n        hasUnsavedChanges: true\n      });\n    },\n\n    addTrack: (track) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          tracks: [...project.tracks, track],\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    removeTrack: (trackId) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          tracks: project.tracks.filter(t => t.id !== trackId),\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    updateTrack: (trackId, updates) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          tracks: project.tracks.map(t => \n            t.id === trackId ? { ...t, ...updates } : t\n          ),\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    addClip: (clip) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          tracks: project.tracks.map(t => \n            t.id === clip.trackId \n              ? { ...t, clips: [...t.clips, clip] }\n              : t\n          ),\n          duration: Math.max(project.duration, clip.endTime),\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    removeClip: (clipId) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          tracks: project.tracks.map(t => ({\n            ...t,\n            clips: t.clips.filter(c => c.id !== clipId)\n          })),\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true,\n        selectedClips: get().selectedClips.filter(id => id !== clipId)\n      });\n    },\n\n    updateClip: (clipId, updates) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          tracks: project.tracks.map(t => ({\n            ...t,\n            clips: t.clips.map(c => \n              c.id === clipId ? { ...c, ...updates } : c\n            )\n          })),\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    addMedia: (media) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          media: [...project.media, media],\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    removeMedia: (mediaId) => {\n      const { project } = get();\n      if (!project) return;\n      \n      set({\n        project: {\n          ...project,\n          media: project.media.filter(m => m.id !== mediaId),\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    setCurrentTime: (time) => {\n      set(state => ({\n        timeline: { ...state.timeline, currentTime: time }\n      }));\n    },\n\n    setZoom: (zoom) => {\n      set(state => ({\n        timeline: { ...state.timeline, zoom }\n      }));\n    },\n\n    setPlaying: (playing) => {\n      set(state => ({\n        timeline: { ...state.timeline, isPlaying: playing }\n      }));\n    },\n\n    selectClip: (clipId, addToSelection = false) => {\n      set(state => ({\n        selectedClips: addToSelection \n          ? [...state.selectedClips, clipId]\n          : [clipId],\n        selectedTracks: []\n      }));\n    },\n\n    selectTrack: (trackId, addToSelection = false) => {\n      set(state => ({\n        selectedTracks: addToSelection \n          ? [...state.selectedTracks, trackId]\n          : [trackId],\n        selectedClips: []\n      }));\n    },\n\n    clearSelection: () => {\n      set({ selectedClips: [], selectedTracks: [] });\n    },\n\n    splitClip: (clipId, time) => {\n      const { project } = get();\n      if (!project) return;\n      \n      const clip = project.tracks.flatMap(t => t.clips).find(c => c.id === clipId);\n      if (!clip || time <= clip.startTime || time >= clip.endTime) return;\n      \n      const firstClip = {\n        ...clip,\n        id: `${clip.id}-1`,\n        endTime: time,\n        sourceEndTime: clip.sourceStartTime + (time - clip.startTime)\n      };\n      \n      const secondClip = {\n        ...clip,\n        id: `${clip.id}-2`,\n        startTime: time,\n        sourceStartTime: clip.sourceStartTime + (time - clip.startTime)\n      };\n      \n      set({\n        project: {\n          ...project,\n          tracks: project.tracks.map(t => ({\n            ...t,\n            clips: t.clips.flatMap(c => \n              c.id === clipId ? [firstClip, secondClip] : [c]\n            )\n          })),\n          updatedAt: new Date()\n        },\n        hasUnsavedChanges: true\n      });\n    },\n\n    duplicateClip: (clipId) => {\n      const { project } = get();\n      if (!project) return;\n      \n      const clip = project.tracks.flatMap(t => t.clips).find(c => c.id === clipId);\n      if (!clip) return;\n      \n      const duplicatedClip = {\n        ...clip,\n        id: `${clip.id}-copy`,\n        startTime: clip.endTime,\n        endTime: clip.endTime + (clip.endTime - clip.startTime)\n      };\n      \n      get().addClip(duplicatedClip);\n    },\n\n    setInPoint: (time) => {\n      const currentTime = time ?? get().timeline.currentTime;\n      set(state => ({\n        timeline: { ...state.timeline, inPoint: currentTime }\n      }));\n    },\n\n    setOutPoint: (time) => {\n      const currentTime = time ?? get().timeline.currentTime;\n      set(state => ({\n        timeline: { ...state.timeline, outPoint: currentTime }\n      }));\n    }\n  }))\n);\n\n// Auto-save functionality\nlet autoSaveTimer: NodeJS.Timeout;\n\nuseEditorStore.subscribe(\n  (state) => state.hasUnsavedChanges,\n  (hasUnsavedChanges) => {\n    if (hasUnsavedChanges) {\n      clearTimeout(autoSaveTimer);\n      autoSaveTimer = setTimeout(() => {\n        const project = useEditorStore.getState().project;\n        if (project) {\n          localStorage.setItem('jrenn-autosave', JSON.stringify(project));\n          console.log('Project auto-saved');\n        }\n      }, 3000);\n    }\n  }\n);","size_bytes":9151},"client/src/types/editor.ts":{"content":"// Move file to correct location\nexport interface MediaFile {\n  id: string;\n  type: 'video' | 'audio' | 'image';\n  name: string;\n  src: string;\n  proxy?: string;\n  duration?: number;\n  width?: number;\n  height?: number;\n  fps?: number;\n  thumbnails?: string[];\n  waveform?: number[];\n  size: number;\n  createdAt: Date;\n}\n\nexport interface Clip {\n  id: string;\n  mediaId: string;\n  trackId: string;\n  startTime: number;\n  endTime: number;\n  sourceStartTime: number;\n  sourceEndTime: number;\n  speed: number;\n  opacity: number;\n  volume: number;\n  muted: boolean;\n  locked: boolean;\n  transform: {\n    x: number;\n    y: number;\n    scaleX: number;\n    scaleY: number;\n    rotation: number;\n    anchorX: number;\n    anchorY: number;\n  };\n  effects: Effect[];\n  keyframes: Keyframe[];\n}\n\nexport interface Track {\n  id: string;\n  type: 'video' | 'audio';\n  name: string;\n  locked: boolean;\n  muted: boolean;\n  solo: boolean;\n  height: number;\n  clips: Clip[];\n}\n\nexport interface Effect {\n  id: string;\n  type: string;\n  name: string;\n  enabled: boolean;\n  parameters: Record<string, any>;\n}\n\nexport interface Keyframe {\n  id: string;\n  property: string;\n  time: number;\n  value: any;\n  easing: 'linear' | 'ease-in' | 'ease-out' | 'ease-in-out';\n}\n\nexport interface Transition {\n  id: string;\n  type: 'crossfade' | 'dip-to-black' | 'slide' | 'wipe';\n  duration: number;\n  startClipId: string;\n  endClipId: string;\n  parameters: Record<string, any>;\n}\n\nexport interface Marker {\n  id: string;\n  time: number;\n  name: string;\n  color: string;\n}\n\nexport interface Project {\n  id: string;\n  name: string;\n  version: number;\n  fps: number;\n  width: number;\n  height: number;\n  duration: number;\n  tracks: Track[];\n  media: MediaFile[];\n  effects: Effect[];\n  transitions: Transition[];\n  markers: Marker[];\n  settings: {\n    previewQuality: 'full' | 'half' | 'quarter';\n    snapEnabled: boolean;\n    rippleDelete: boolean;\n    magneticTimeline: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface ExportPreset {\n  id: string;\n  name: string;\n  width: number;\n  height: number;\n  fps: number;\n  format: string;\n  codec: string;\n  bitrate: string;\n  audioBitrate: string;\n}\n\nexport interface RenderJob {\n  id: string;\n  projectId: string;\n  preset: ExportPreset;\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  progress: number;\n  downloadUrl?: string;\n  error?: string;\n  createdAt: Date;\n  completedAt?: Date;\n}\n\nexport interface TimelineState {\n  currentTime: number;\n  zoom: number;\n  scrollX: number;\n  selectedClips: string[];\n  selectedTracks: string[];\n  inPoint?: number;\n  outPoint?: number;\n  isPlaying: boolean;\n  isLooping: boolean;\n}\n\nexport interface ViewerState {\n  safeMargins: boolean;\n  rulers: boolean;\n  guides: boolean;\n  backgroundColor: string;\n}","size_bytes":2793},"client/src/utils/timecode.ts":{"content":"export function formatTimecode(seconds: number, fps: number = 30): string {\n  const totalFrames = Math.floor(seconds * fps);\n  const hours = Math.floor(totalFrames / (fps * 3600));\n  const minutes = Math.floor((totalFrames % (fps * 3600)) / (fps * 60));\n  const secs = Math.floor((totalFrames % (fps * 60)) / fps);\n  const frames = totalFrames % fps;\n\n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}:${frames.toString().padStart(2, '0')}`;\n}\n\nexport function parseTimecode(timecode: string, fps: number = 30): number {\n  const parts = timecode.split(':').map(Number);\n  if (parts.length !== 4) return 0;\n  \n  const [hours, minutes, seconds, frames] = parts;\n  return hours * 3600 + minutes * 60 + seconds + frames / fps;\n}\n\nexport function formatTime(seconds: number): string {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = Math.floor(seconds % 60);\n  \n  if (hours > 0) {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }\n  return `${minutes}:${secs.toString().padStart(2, '0')}`;\n}\n\nexport function secondsToFrames(seconds: number, fps: number): number {\n  return Math.floor(seconds * fps);\n}\n\nexport function framesToSeconds(frames: number, fps: number): number {\n  return frames / fps;\n}","size_bytes":1382},"client/src/components/auth/auth-forms.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { loginSchema, signupSchema, type LoginData, type SignupData } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2 } from \"lucide-react\";\n\nexport function AuthForms() {\n  const { login, signup, isLoginLoading, isSignupLoading } = useAuth();\n  const { toast } = useToast();\n  \n  const loginForm = useForm<LoginData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const signupForm = useForm<SignupData>({\n    resolver: zodResolver(signupSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      firstName: \"\",\n      lastName: \"\",\n    },\n  });\n\n  const onLogin = async (data: LoginData) => {\n    try {\n      await login(data);\n      toast({\n        title: \"Login berhasil\",\n        description: \"Selamat datang kembali!\",\n      });\n    } catch (error: any) {\n      toast({\n        variant: \"destructive\",\n        title: \"Login gagal\",\n        description: error.message || \"Email atau password salah\",\n      });\n    }\n  };\n\n  const onSignup = async (data: SignupData) => {\n    try {\n      await signup(data);\n      toast({\n        title: \"Registrasi berhasil\",\n        description: \"Akun Anda telah dibuat!\",\n      });\n    } catch (error: any) {\n      toast({\n        variant: \"destructive\",\n        title: \"Registrasi gagal\",\n        description: error.message || \"Terjadi kesalahan saat membuat akun\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto\">\n      <Tabs defaultValue=\"login\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\" data-testid=\"auth-tabs\">\n          <TabsTrigger value=\"login\" data-testid=\"tab-login\">Login</TabsTrigger>\n          <TabsTrigger value=\"signup\" data-testid=\"tab-signup\">Daftar</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"login\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Login</CardTitle>\n              <CardDescription>\n                Masuk ke akun VideoAI Anda\n              </CardDescription>\n            </CardHeader>\n            <form onSubmit={loginForm.handleSubmit(onLogin)}>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"login-email\">Email</Label>\n                  <Input\n                    id=\"login-email\"\n                    type=\"email\"\n                    placeholder=\"nama@email.com\"\n                    {...loginForm.register(\"email\")}\n                    data-testid=\"input-login-email\"\n                  />\n                  {loginForm.formState.errors.email && (\n                    <p className=\"text-sm text-red-600\" data-testid=\"error-login-email\">\n                      {loginForm.formState.errors.email.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"login-password\">Password</Label>\n                  <Input\n                    id=\"login-password\"\n                    type=\"password\"\n                    placeholder=\"Password Anda\"\n                    {...loginForm.register(\"password\")}\n                    data-testid=\"input-login-password\"\n                  />\n                  {loginForm.formState.errors.password && (\n                    <p className=\"text-sm text-red-600\" data-testid=\"error-login-password\">\n                      {loginForm.formState.errors.password.message}\n                    </p>\n                  )}\n                </div>\n              </CardContent>\n              <CardFooter>\n                <Button \n                  type=\"submit\" \n                  className=\"w-full\" \n                  disabled={isLoginLoading}\n                  data-testid=\"button-login-submit\"\n                >\n                  {isLoginLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                  Masuk\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"signup\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Daftar Akun</CardTitle>\n              <CardDescription>\n                Buat akun VideoAI baru\n              </CardDescription>\n            </CardHeader>\n            <form onSubmit={signupForm.handleSubmit(onSignup)}>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"signup-firstname\">Nama Depan</Label>\n                    <Input\n                      id=\"signup-firstname\"\n                      placeholder=\"Nama depan\"\n                      {...signupForm.register(\"firstName\")}\n                      data-testid=\"input-signup-firstname\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"signup-lastname\">Nama Belakang</Label>\n                    <Input\n                      id=\"signup-lastname\"\n                      placeholder=\"Nama belakang\"\n                      {...signupForm.register(\"lastName\")}\n                      data-testid=\"input-signup-lastname\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-username\">Username (opsional)</Label>\n                  <Input\n                    id=\"signup-username\"\n                    placeholder=\"Username unik\"\n                    {...signupForm.register(\"username\")}\n                    data-testid=\"input-signup-username\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-email\">Email</Label>\n                  <Input\n                    id=\"signup-email\"\n                    type=\"email\"\n                    placeholder=\"nama@email.com\"\n                    {...signupForm.register(\"email\")}\n                    data-testid=\"input-signup-email\"\n                  />\n                  {signupForm.formState.errors.email && (\n                    <p className=\"text-sm text-red-600\" data-testid=\"error-signup-email\">\n                      {signupForm.formState.errors.email.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"signup-password\">Password</Label>\n                  <Input\n                    id=\"signup-password\"\n                    type=\"password\"\n                    placeholder=\"Minimal 6 karakter\"\n                    {...signupForm.register(\"password\")}\n                    data-testid=\"input-signup-password\"\n                  />\n                  {signupForm.formState.errors.password && (\n                    <p className=\"text-sm text-red-600\" data-testid=\"error-signup-password\">\n                      {signupForm.formState.errors.password.message}\n                    </p>\n                  )}\n                </div>\n              </CardContent>\n              <CardFooter>\n                <Button \n                  type=\"submit\" \n                  className=\"w-full\"\n                  disabled={isSignupLoading}\n                  data-testid=\"button-signup-submit\"\n                >\n                  {isSignupLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                  Daftar\n                </Button>\n              </CardFooter>\n            </form>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}","size_bytes":8103},"client/src/components/editor/MediaBin.tsx":{"content":"import { useState, useRef } from 'react';\nimport { motion } from 'framer-motion';\nimport { useEditorStore } from '@/stores/editorStore';\nimport { MediaFile } from '@/types/editor';\nimport { \n  Upload, \n  Video, \n  Music, \n  Image as ImageIcon, \n  Trash2, \n  Play,\n  Plus\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function MediaBin() {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [dragOver, setDragOver] = useState(false);\n  const [uploading, setUploading] = useState(false);\n  const { toast } = useToast();\n\n  const { project, addMedia, removeMedia, addClip } = useEditorStore();\n\n  const handleFileUpload = async (files: FileList) => {\n    setUploading(true);\n    \n    for (const file of Array.from(files)) {\n      try {\n        const mediaFile = await processFile(file);\n        addMedia(mediaFile);\n        \n        toast({\n          title: \"Media Added\",\n          description: `${file.name} has been added to your project`\n        });\n      } catch (error) {\n        toast({\n          title: \"Upload Error\",\n          description: `Failed to upload ${file.name}`,\n          variant: \"destructive\"\n        });\n      }\n    }\n    \n    setUploading(false);\n  };\n\n  const processFile = async (file: File): Promise<MediaFile> => {\n    return new Promise((resolve, reject) => {\n      const mediaFile: MediaFile = {\n        id: `media-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        type: file.type.startsWith('video/') ? 'video' : \n              file.type.startsWith('audio/') ? 'audio' : 'image',\n        name: file.name,\n        src: URL.createObjectURL(file),\n        size: file.size,\n        createdAt: new Date()\n      };\n\n      if (file.type.startsWith('video/')) {\n        const video = document.createElement('video');\n        video.onloadedmetadata = () => {\n          mediaFile.duration = video.duration;\n          mediaFile.width = video.videoWidth;\n          mediaFile.height = video.videoHeight;\n          mediaFile.fps = 30; // Default, would need more sophisticated detection\n          resolve(mediaFile);\n        };\n        video.onerror = reject;\n        video.src = mediaFile.src;\n      } else if (file.type.startsWith('audio/')) {\n        const audio = document.createElement('audio');\n        audio.onloadedmetadata = () => {\n          mediaFile.duration = audio.duration;\n          resolve(mediaFile);\n        };\n        audio.onerror = reject;\n        audio.src = mediaFile.src;\n      } else if (file.type.startsWith('image/')) {\n        const img = document.createElement('img');\n        img.onload = () => {\n          mediaFile.width = img.naturalWidth;\n          mediaFile.height = img.naturalHeight;\n          mediaFile.duration = 5; // Default duration for images\n          resolve(mediaFile);\n        };\n        img.onerror = reject;\n        img.src = mediaFile.src;\n      } else {\n        reject(new Error('Unsupported file type'));\n      }\n    });\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files);\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = () => {\n    setDragOver(false);\n  };\n\n  const addToTimeline = (media: MediaFile) => {\n    if (!project) return;\n    \n    // Find appropriate track\n    const targetTrack = project.tracks.find(t => \n      (media.type === 'video' && t.type === 'video') ||\n      (media.type === 'audio' && t.type === 'audio')\n    );\n    \n    if (!targetTrack) return;\n    \n    // Calculate start time (end of timeline or after last clip)\n    const lastClipEnd = Math.max(\n      0,\n      ...targetTrack.clips.map(c => c.endTime)\n    );\n    \n    const newClip = {\n      id: `clip-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      mediaId: media.id,\n      trackId: targetTrack.id,\n      startTime: lastClipEnd,\n      endTime: lastClipEnd + (media.duration || 5),\n      sourceStartTime: 0,\n      sourceEndTime: media.duration || 5,\n      speed: 1,\n      opacity: 1,\n      volume: 1,\n      muted: false,\n      locked: false,\n      transform: {\n        x: 0,\n        y: 0,\n        scaleX: 1,\n        scaleY: 1,\n        rotation: 0,\n        anchorX: 0.5,\n        anchorY: 0.5\n      },\n      effects: [],\n      keyframes: []\n    };\n    \n    addClip(newClip);\n    \n    toast({\n      title: \"Added to Timeline\",\n      description: `${media.name} has been added to ${targetTrack.name}`\n    });\n  };\n\n  const getMediaIcon = (type: string) => {\n    switch (type) {\n      case 'video': return Video;\n      case 'audio': return Music;\n      case 'image': return ImageIcon;\n      default: return Upload;\n    }\n  };\n\n  const formatFileSize = (bytes: number) => {\n    const sizes = ['B', 'KB', 'MB', 'GB'];\n    if (bytes === 0) return '0 B';\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + ' ' + sizes[i];\n  };\n\n  const formatDuration = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = Math.floor(seconds % 60);\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <Card className=\"bg-slate-800/50 border-slate-700\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"text-lg text-white flex items-center gap-2\">\n          <Upload className=\"w-5 h-5\" />\n          Media Bin\n        </CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4\">\n        {/* Upload Area */}\n        <div\n          className={`border-2 border-dashed rounded-lg p-6 text-center transition-colors ${\n            dragOver \n              ? 'border-blue-400 bg-blue-400/10' \n              : 'border-slate-600 hover:border-slate-500'\n          }`}\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n        >\n          <Upload className=\"w-8 h-8 text-slate-400 mx-auto mb-2\" />\n          <p className=\"text-sm text-slate-300 mb-2\">\n            Drag & drop media files here or click to browse\n          </p>\n          <Button\n            onClick={() => fileInputRef.current?.click()}\n            disabled={uploading}\n            className=\"bg-purple-600 hover:bg-purple-700\"\n          >\n            {uploading ? 'Uploading...' : 'Choose Files'}\n          </Button>\n          \n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            multiple\n            accept=\"video/*,audio/*,image/*\"\n            className=\"hidden\"\n            onChange={(e) => e.target.files && handleFileUpload(e.target.files)}\n          />\n        </div>\n\n        {/* Media List */}\n        <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n          {project?.media.map(media => {\n            const IconComponent = getMediaIcon(media.type);\n            \n            return (\n              <motion.div\n                key={media.id}\n                className=\"flex items-center gap-3 p-3 bg-slate-700/50 rounded border border-slate-600 hover:border-slate-500 group\"\n                whileHover={{ scale: 1.02 }}\n                transition={{ duration: 0.1 }}\n              >\n                <div className={`w-10 h-10 rounded flex items-center justify-center ${\n                  media.type === 'video' ? 'bg-purple-600/20 text-purple-400' :\n                  media.type === 'audio' ? 'bg-green-600/20 text-green-400' :\n                  'bg-blue-600/20 text-blue-400'\n                }`}>\n                  <IconComponent className=\"w-5 h-5\" />\n                </div>\n                \n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"text-sm font-medium text-white truncate\">\n                    {media.name}\n                  </div>\n                  <div className=\"text-xs text-slate-400 flex gap-2\">\n                    {media.duration && (\n                      <span>{formatDuration(media.duration)}</span>\n                    )}\n                    {media.width && media.height && (\n                      <span>{media.width}×{media.height}</span>\n                    )}\n                    <span>{formatFileSize(media.size)}</span>\n                  </div>\n                </div>\n                \n                <div className=\"flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={() => addToTimeline(media)}\n                    className=\"w-8 h-8 p-0 text-green-400 hover:text-green-300\"\n                  >\n                    <Plus className=\"w-4 h-4\" />\n                  </Button>\n                  \n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={() => removeMedia(media.id)}\n                    className=\"w-8 h-8 p-0 text-red-400 hover:text-red-300\"\n                  >\n                    <Trash2 className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </motion.div>\n            );\n          })}\n          \n          {(!project?.media || project.media.length === 0) && (\n            <div className=\"text-center py-8 text-slate-400\">\n              <Upload className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\n              <p>No media files yet</p>\n              <p className=\"text-xs\">Upload some files to get started</p>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":9708},"client/src/components/editor/Timeline.tsx":{"content":"import { useRef, useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useEditorStore } from '@/stores/editorStore';\nimport { Clip, Track } from '@/types/editor';\nimport { formatTimecode } from '@/utils/timecode';\n\nexport default function Timeline() {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [dragState, setDragState] = useState<{\n    isDragging: boolean;\n    clipId?: string;\n    startX: number;\n    startTime: number;\n  }>({ isDragging: false, startX: 0, startTime: 0 });\n\n  const {\n    project,\n    timeline,\n    selectedClips,\n    setCurrentTime,\n    setZoom,\n    selectClip,\n    updateClip,\n    splitClip,\n    clearSelection\n  } = useEditorStore();\n\n  const PIXELS_PER_SECOND = 50 * timeline.zoom;\n  const TRACK_HEIGHT = 80;\n  const RULER_HEIGHT = 40;\n\n  const handleTimelineClick = (e: React.MouseEvent) => {\n    if (!containerRef.current) return;\n    \n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left + timeline.scrollX;\n    const time = x / PIXELS_PER_SECOND;\n    \n    setCurrentTime(Math.max(0, time));\n  };\n\n  const handleClipMouseDown = (e: React.MouseEvent, clip: Clip) => {\n    e.stopPropagation();\n    \n    const rect = containerRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    \n    setDragState({\n      isDragging: true,\n      clipId: clip.id,\n      startX: e.clientX - rect.left,\n      startTime: clip.startTime\n    });\n    \n    selectClip(clip.id, e.metaKey || e.ctrlKey);\n  };\n\n  const handleMouseMove = (e: MouseEvent) => {\n    if (!dragState.isDragging || !dragState.clipId) return;\n    \n    const rect = containerRef.current?.getBoundingClientRect();\n    if (!rect) return;\n    \n    const deltaX = e.clientX - rect.left - dragState.startX;\n    const deltaTime = deltaX / PIXELS_PER_SECOND;\n    const newStartTime = Math.max(0, dragState.startTime + deltaTime);\n    \n    const clip = project?.tracks\n      .flatMap(t => t.clips)\n      .find(c => c.id === dragState.clipId);\n    \n    if (clip) {\n      const duration = clip.endTime - clip.startTime;\n      updateClip(clip.id, {\n        startTime: newStartTime,\n        endTime: newStartTime + duration\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragState({ isDragging: false, startX: 0, startTime: 0 });\n  };\n\n  useEffect(() => {\n    if (dragState.isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [dragState.isDragging]);\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (!project) return;\n    \n    switch (e.key) {\n      case 's':\n      case 'S':\n        if (selectedClips.length > 0) {\n          selectedClips.forEach(clipId => {\n            splitClip(clipId, timeline.currentTime);\n          });\n        }\n        break;\n      case 'Delete':\n      case 'Backspace':\n        // Delete selected clips\n        break;\n      case ' ':\n        e.preventDefault();\n        // Toggle play/pause\n        break;\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [selectedClips, timeline.currentTime]);\n\n  if (!project) return null;\n\n  const timelineDuration = Math.max(project.duration, 60); // Minimum 60 seconds\n  const timelineWidth = timelineDuration * PIXELS_PER_SECOND;\n\n  return (\n    <div className=\"bg-slate-900 border-t border-slate-700 flex-1 flex flex-col overflow-hidden\">\n      {/* Timeline Ruler */}\n      <div className=\"bg-slate-800 border-b border-slate-700\" style={{ height: RULER_HEIGHT }}>\n        <div \n          className=\"relative h-full\"\n          style={{ width: timelineWidth, marginLeft: -timeline.scrollX }}\n        >\n          {/* Time markers */}\n          {Array.from({ length: Math.ceil(timelineDuration) + 1 }, (_, i) => (\n            <div\n              key={i}\n              className=\"absolute top-0 h-full border-l border-slate-600 flex items-end pb-1\"\n              style={{ left: i * PIXELS_PER_SECOND }}\n            >\n              <span className=\"text-xs text-slate-400 ml-1\">\n                {formatTimecode(i, project.fps)}\n              </span>\n            </div>\n          ))}\n          \n          {/* Playhead */}\n          <div\n            className=\"absolute top-0 w-px bg-red-500 z-20 pointer-events-none\"\n            style={{ \n              left: timeline.currentTime * PIXELS_PER_SECOND,\n              height: '100vh'\n            }}\n          >\n            <div className=\"w-3 h-3 bg-red-500 -ml-1.5 -mt-1\" style={{ clipPath: 'polygon(50% 0%, 0% 100%, 100% 100%)' }} />\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline Content */}\n      <div \n        ref={containerRef}\n        className=\"flex-1 overflow-auto\"\n        onClick={handleTimelineClick}\n      >\n        <div \n          className=\"relative\"\n          style={{ width: timelineWidth, height: project.tracks.length * TRACK_HEIGHT }}\n        >\n          {/* Tracks */}\n          {project.tracks.map((track, trackIndex) => (\n            <div\n              key={track.id}\n              className=\"absolute w-full border-b border-slate-700\"\n              style={{ \n                top: trackIndex * TRACK_HEIGHT,\n                height: TRACK_HEIGHT\n              }}\n            >\n              {/* Track Header */}\n              <div className=\"absolute left-0 w-40 h-full bg-slate-800 border-r border-slate-700 flex items-center px-3 z-10\">\n                <div className=\"flex-1\">\n                  <div className=\"text-sm font-medium text-white\">{track.name}</div>\n                  <div className=\"text-xs text-slate-400 capitalize\">{track.type}</div>\n                </div>\n                <div className=\"flex gap-1\">\n                  <button \n                    className={`w-6 h-6 rounded text-xs ${track.muted ? 'bg-red-600' : 'bg-slate-600'}`}\n                    onClick={() => updateTrack(track.id, { muted: !track.muted })}\n                  >\n                    M\n                  </button>\n                  <button \n                    className={`w-6 h-6 rounded text-xs ${track.solo ? 'bg-yellow-600' : 'bg-slate-600'}`}\n                    onClick={() => updateTrack(track.id, { solo: !track.solo })}\n                  >\n                    S\n                  </button>\n                </div>\n              </div>\n\n              {/* Clips */}\n              <div className=\"ml-40 h-full relative\">\n                {track.clips.map(clip => {\n                  const clipWidth = (clip.endTime - clip.startTime) * PIXELS_PER_SECOND;\n                  const clipLeft = clip.startTime * PIXELS_PER_SECOND;\n                  const isSelected = selectedClips.includes(clip.id);\n                  \n                  return (\n                    <motion.div\n                      key={clip.id}\n                      className={`absolute top-2 bottom-2 rounded border-2 cursor-pointer overflow-hidden ${\n                        isSelected \n                          ? 'border-blue-400 bg-blue-600/80' \n                          : 'border-slate-500 bg-slate-600/80'\n                      } ${track.type === 'video' ? 'bg-gradient-to-r from-purple-600/80 to-blue-600/80' : 'bg-gradient-to-r from-green-600/80 to-emerald-600/80'}`}\n                      style={{\n                        left: clipLeft,\n                        width: Math.max(clipWidth, 20)\n                      }}\n                      onMouseDown={(e) => handleClipMouseDown(e, clip)}\n                      whileHover={{ scale: 1.02 }}\n                      transition={{ duration: 0.1 }}\n                    >\n                      {/* Clip Content */}\n                      <div className=\"h-full flex items-center px-2\">\n                        <div className=\"text-xs text-white truncate\">\n                          {project.media.find(m => m.id === clip.mediaId)?.name || 'Unknown'}\n                        </div>\n                      </div>\n                      \n                      {/* Resize handles */}\n                      <div className=\"absolute left-0 top-0 bottom-0 w-2 cursor-ew-resize bg-white/20 opacity-0 hover:opacity-100\" />\n                      <div className=\"absolute right-0 top-0 bottom-0 w-2 cursor-ew-resize bg-white/20 opacity-0 hover:opacity-100\" />\n                    </motion.div>\n                  );\n                })}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Timeline Controls */}\n      <div className=\"bg-slate-800 border-t border-slate-700 p-2 flex items-center gap-4\">\n        <div className=\"flex items-center gap-2\">\n          <label className=\"text-sm text-slate-300\">Zoom:</label>\n          <input\n            type=\"range\"\n            min=\"0.1\"\n            max=\"5\"\n            step=\"0.1\"\n            value={timeline.zoom}\n            onChange={(e) => setZoom(parseFloat(e.target.value))}\n            className=\"w-20\"\n          />\n          <span className=\"text-xs text-slate-400\">{timeline.zoom.toFixed(1)}x</span>\n        </div>\n        \n        <button\n          onClick={clearSelection}\n          className=\"px-3 py-1 bg-slate-600 hover:bg-slate-500 rounded text-sm text-white\"\n        >\n          Clear Selection\n        </button>\n        \n        <div className=\"flex-1\" />\n        \n        <div className=\"text-sm text-slate-300\">\n          {formatTimecode(timeline.currentTime, project.fps)} / {formatTimecode(project.duration, project.fps)}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9681},"client/src/components/editor/Viewer.tsx":{"content":"import { useRef, useEffect, useState } from 'react';\nimport { useEditorStore } from '@/stores/editorStore';\nimport { MediaFile } from '@/types/editor';\n\nexport default function Viewer() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const { project, timeline } = useEditorStore();\n  const [loadedMedia, setLoadedMedia] = useState<Map<string, HTMLImageElement | HTMLVideoElement>>(new Map());\n\n  // Load media elements when project media changes\n  useEffect(() => {\n    if (!project) return;\n\n    const loadMedia = async () => {\n      const mediaMap = new Map<string, HTMLImageElement | HTMLVideoElement>();\n      \n      for (const media of project.media) {\n        try {\n          if (media.type === 'image') {\n            const img = new Image();\n            img.crossOrigin = 'anonymous';\n            await new Promise((resolve, reject) => {\n              img.onload = resolve;\n              img.onerror = reject;\n              img.src = media.src;\n            });\n            mediaMap.set(media.id, img);\n          } else if (media.type === 'video') {\n            const video = document.createElement('video');\n            video.crossOrigin = 'anonymous';\n            video.muted = true;\n            video.preload = 'metadata';\n            await new Promise((resolve, reject) => {\n              video.onloadedmetadata = resolve;\n              video.onerror = reject;\n              video.src = media.src;\n            });\n            mediaMap.set(media.id, video);\n          }\n        } catch (error) {\n          console.warn(`Failed to load media ${media.name}:`, error);\n        }\n      }\n      \n      setLoadedMedia(mediaMap);\n    };\n\n    loadMedia();\n  }, [project?.media]);\n\n  useEffect(() => {\n    if (!canvasRef.current || !project) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Render current frame\n    renderFrame(ctx, timeline.currentTime);\n  }, [project, timeline.currentTime, loadedMedia]);\n\n  const renderFrame = (ctx: CanvasRenderingContext2D, currentTime: number) => {\n    if (!project) return;\n\n    // Find active clips at current time\n    const activeClips = project.tracks.flatMap(track => \n      track.clips.filter(clip => \n        currentTime >= clip.startTime && currentTime < clip.endTime\n      )\n    );\n\n    // Sort by track order (video tracks first, then by layer)\n    activeClips.sort((a, b) => {\n      const trackA = project.tracks.find(t => t.id === a.trackId);\n      const trackB = project.tracks.find(t => t.id === b.trackId);\n      \n      if (trackA?.type !== trackB?.type) {\n        return trackA?.type === 'video' ? -1 : 1;\n      }\n      \n      return project.tracks.indexOf(trackA!) - project.tracks.indexOf(trackB!);\n    });\n\n    // Render each active clip\n    activeClips.forEach(clip => {\n      const media = project.media.find(m => m.id === clip.mediaId);\n      if (!media) return;\n\n      // Calculate clip local time\n      const clipTime = currentTime - clip.startTime;\n      const sourceTime = clip.sourceStartTime + (clipTime * clip.speed);\n\n      renderClip(ctx, clip, media, sourceTime);\n    });\n  };\n\n  const renderClip = (ctx: CanvasRenderingContext2D, clip: any, media: MediaFile, sourceTime: number) => {\n    const mediaElement = loadedMedia.get(media.id);\n    if (!mediaElement) {\n      // Show loading placeholder\n      ctx.save();\n      const centerX = project!.width / 2;\n      const centerY = project!.height / 2;\n      \n      ctx.translate(centerX, centerY);\n      ctx.fillStyle = '#4a5568';\n      ctx.fillRect(-100, -50, 200, 100);\n      ctx.fillStyle = '#ffffff';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('Loading...', 0, 0);\n      ctx.restore();\n      return;\n    }\n\n    ctx.save();\n\n    // Apply transform\n    const centerX = project!.width / 2;\n    const centerY = project!.height / 2;\n    \n    ctx.translate(centerX, centerY);\n    ctx.rotate(clip.transform.rotation * Math.PI / 180);\n    ctx.scale(clip.transform.scaleX, clip.transform.scaleY);\n    ctx.globalAlpha = clip.opacity;\n\n    // Calculate dimensions\n    const mediaWidth = media.width || 100;\n    const mediaHeight = media.height || 100;\n    const renderWidth = mediaWidth;\n    const renderHeight = mediaHeight;\n\n    try {\n      if (media.type === 'video' && mediaElement instanceof HTMLVideoElement) {\n        // Set video time to match timeline\n        const videoTime = Math.max(0, Math.min(sourceTime, media.duration || 0));\n        if (Math.abs(mediaElement.currentTime - videoTime) > 0.1) {\n          mediaElement.currentTime = videoTime;\n        }\n        \n        // Draw video frame\n        ctx.drawImage(\n          mediaElement,\n          -renderWidth / 2,\n          -renderHeight / 2,\n          renderWidth,\n          renderHeight\n        );\n      } else if (media.type === 'image' && mediaElement instanceof HTMLImageElement) {\n        // Draw image\n        ctx.drawImage(\n          mediaElement,\n          -renderWidth / 2,\n          -renderHeight / 2,\n          renderWidth,\n          renderHeight\n        );\n      }\n    } catch (error) {\n      // Fallback to placeholder if rendering fails\n      ctx.fillStyle = '#ef4444';\n      ctx.fillRect(-renderWidth / 2, -renderHeight / 2, renderWidth, renderHeight);\n      ctx.fillStyle = '#ffffff';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('Error', 0, 0);\n    }\n\n    ctx.restore();\n  };\n\n  if (!project) return null;\n\n  return (\n    <div className=\"flex-1 bg-black/40 backdrop-blur-sm flex items-center justify-center p-4\">\n      <div className=\"relative\">\n        <canvas\n          ref={canvasRef}\n          width={project.width}\n          height={project.height}\n          className=\"max-w-full max-h-full bg-black rounded-lg border border-white/20\"\n          style={{ aspectRatio: `${project.width}/${project.height}`, maxHeight: '60vh' }}\n        />\n        \n        {/* Preview Overlay */}\n        <div className=\"absolute inset-0 border-2 border-purple-500/30 rounded-lg pointer-events-none\" />\n        \n        {/* Safe Margins (optional) */}\n        <div className=\"absolute inset-4 border border-yellow-500/30 rounded pointer-events-none opacity-50\" />\n      </div>\n    </div>\n  );\n}","size_bytes":6337},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","size_bytes":1127},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/help/content-policy.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, CheckCircle, AlertTriangle, XCircle, Lightbulb } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function ContentPolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Panduan Kepatuhan Konten\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Best practices untuk membuat konten yang aman dan berkualitas</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n            <p className=\"text-blue-200 text-sm\">\n              💡 <strong>Panduan ini membantu Anda:</strong> Memahami apa yang boleh dan tidak boleh dibuat, \n              menghindari pelanggaran kebijakan, dan menciptakan konten berkualitas tinggi.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-green-300 mb-6\">✅ Konten yang Dianjurkan</h2>\n            \n            <div className=\"space-y-6\">\n              <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <CheckCircle className=\"w-5 h-5 text-green-400\" />\n                  <h3 className=\"text-xl font-semibold text-green-300\">Konten Edukasi dan Kreatif</h3>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Contoh Prompt yang Baik:</h4>\n                    <ul className=\"space-y-1 text-green-100 text-sm\">\n                      <li>• \"Proses fotosintesis pada tanaman dengan animasi ilmiah\"</li>\n                      <li>• \"Tutorial origami burung dengan langkah detail\"</li>\n                      <li>• \"Sejarah Candi Borobudur dengan visual cinematik\"</li>\n                      <li>• \"Eksplorasi laut dalam dengan makhluk bioluminesensi\"</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Tujuan Positif:</h4>\n                    <ul className=\"space-y-1 text-green-100 text-sm\">\n                      <li>• Pembelajaran dan edukasi</li>\n                      <li>• Inspirasi dan motivasi</li>\n                      <li>• Dokumentasi budaya</li>\n                      <li>• Eksplorasi sains dan alam</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <CheckCircle className=\"w-5 h-5 text-blue-400\" />\n                  <h3 className=\"text-xl font-semibold text-blue-300\">Konten Bisnis dan Pemasaran</h3>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Contoh yang Tepat:</h4>\n                    <ul className=\"space-y-1 text-blue-100 text-sm\">\n                      <li>• \"Presentasi produk dengan background minimalis modern\"</li>\n                      <li>• \"Demo aplikasi mobile dengan UI yang clean\"</li>\n                      <li>• \"Testimoni pelanggan dengan setting office professional\"</li>\n                      <li>• \"Brand story dengan visual storytelling yang menarik\"</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Praktik Terbaik:</h4>\n                    <ul className=\"space-y-1 text-blue-100 text-sm\">\n                      <li>• Jujur dan transparan</li>\n                      <li>• Tidak menyesatkan</li>\n                      <li>• Menghormati kompetitor</li>\n                      <li>• Fokus pada value proposition</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-purple-900/20 border border-purple-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <CheckCircle className=\"w-5 h-5 text-purple-400\" />\n                  <h3 className=\"text-xl font-semibold text-purple-300\">Konten Hiburan dan Seni</h3>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Seni dan Kreativitas:</h4>\n                    <ul className=\"space-y-1 text-purple-100 text-sm\">\n                      <li>• \"Lukisan digital dengan gaya impressionist modern\"</li>\n                      <li>• \"Choreografi tari dengan kostum tradisional\"</li>\n                      <li>• \"Musik visualizer dengan geometri abstrak\"</li>\n                      <li>• \"Fashion show dengan tema sustainable fashion\"</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Hiburan Positif:</h4>\n                    <ul className=\"space-y-1 text-purple-100 text-sm\">\n                      <li>• Komedi yang tidak menyinggung</li>\n                      <li>• Parodi yang konstruktif</li>\n                      <li>• Storytelling yang inspiratif</li>\n                      <li>• Entertainment yang family-friendly</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-yellow-300 mb-6\">⚠️ Konten yang Perlu Hati-hati</h2>\n            \n            <div className=\"space-y-4\">\n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <AlertTriangle className=\"w-5 h-5 text-yellow-400\" />\n                  <h3 className=\"text-xl font-semibold text-yellow-300\">Konten Sensitif</h3>\n                </div>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Topik yang Memerlukan Kehati-hatian:</h4>\n                    <ul className=\"list-disc list-inside space-y-1 text-yellow-100 text-sm ml-4\">\n                      <li><strong>Politik:</strong> Hindari bias partisan, fokus pada fakta dan edukasi</li>\n                      <li><strong>Agama:</strong> Hormati semua kepercayaan, hindari proselitizing</li>\n                      <li><strong>Isu Sosial:</strong> Presentasikan berbagai perspektif secara berimbang</li>\n                      <li><strong>Sejarah Kontroversial:</strong> Gunakan sumber terpercaya dan konteks yang tepat</li>\n                    </ul>\n                  </div>\n                  <div className=\"bg-yellow-800/30 rounded p-3\">\n                    <p className=\"text-yellow-100 text-sm\">\n                      <strong>💡 Tips:</strong> Konsultasikan dengan ahli, lakukan fact-checking, \n                      dan pertimbangkan dampak konten terhadap berbagai kelompok masyarakat.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-orange-900/20 border border-orange-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <AlertTriangle className=\"w-5 h-5 text-orange-400\" />\n                  <h3 className=\"text-xl font-semibold text-orange-300\">Penggunaan Nama dan Likeness</h3>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Yang Harus Dihindari:</h4>\n                    <ul className=\"space-y-1 text-orange-100 text-sm\">\n                      <li>• Tokoh publik tanpa konteks educational</li>\n                      <li>• Selebriti untuk keperluan komersial</li>\n                      <li>• Politisi dalam konteks partisan</li>\n                      <li>• Orang hidup tanpa izin</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Alternatif yang Aman:</h4>\n                    <ul className=\"space-y-1 text-orange-100 text-sm\">\n                      <li>• Karakter fiksi original</li>\n                      <li>• Tokoh sejarah (domain publik)</li>\n                      <li>• Deskripsi umum tanpa identitas spesifik</li>\n                      <li>• Stock character types</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-red-300 mb-6\">❌ Konten yang Dilarang</h2>\n            \n            <div className=\"space-y-4\">\n              <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <XCircle className=\"w-5 h-5 text-red-400\" />\n                  <h3 className=\"text-xl font-semibold text-red-300\">Konten Berbahaya dan Ilegal</h3>\n                </div>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Dilarang Keras:</h4>\n                    <ul className=\"space-y-1 text-red-100 text-sm\">\n                      <li>• Kekerasan atau gore</li>\n                      <li>• Konten seksual atau pornografi</li>\n                      <li>• Hate speech atau diskriminasi</li>\n                      <li>• Eksploitasi anak</li>\n                      <li>• Terorisme atau ekstremisme</li>\n                      <li>• Narkoba atau zat ilegal</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Konsekuensi:</h4>\n                    <ul className=\"space-y-1 text-red-100 text-sm\">\n                      <li>• Penghapusan konten langsung</li>\n                      <li>• Peringatan atau suspend akun</li>\n                      <li>• Penonaktifan permanen</li>\n                      <li>• Laporan ke pihak berwajib</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-red-900/10 border border-red-500/20 rounded-lg p-4\">\n                <h4 className=\"font-semibold text-red-200 mb-2\">Contoh Prompt yang Akan Ditolak:</h4>\n                <div className=\"space-y-2 text-red-100 text-sm\">\n                  <div className=\"bg-red-800/30 rounded p-2\">\n                    <p>❌ \"Pertarungan berdarah dengan senjata tajam\"</p>\n                  </div>\n                  <div className=\"bg-red-800/30 rounded p-2\">\n                    <p>❌ \"Konten dewasa dengan ketelanjangan\"</p>\n                  </div>\n                  <div className=\"bg-red-800/30 rounded p-2\">\n                    <p>❌ \"Propaganda kebencian terhadap kelompok etnis\"</p>\n                  </div>\n                  <div className=\"bg-red-800/30 rounded p-2\">\n                    <p>❌ \"Tutorial pembuatan bahan peledak\"</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">Fair Use dan Copyright</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Prinsip Fair Use yang Aman:</h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-cyan-300 mb-2\">Tujuan yang Diizinkan:</h4>\n                    <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                      <li>Kritik dan review</li>\n                      <li>Parodi dan satire</li>\n                      <li>Komentar berita</li>\n                      <li>Tujuan pendidikan</li>\n                      <li>Penelitian akademis</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-cyan-300 mb-2\">Panduan Praktis:</h4>\n                    <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                      <li>Gunakan minimal yang diperlukan</li>\n                      <li>Transformatif, bukan copy</li>\n                      <li>Tidak merugikan pemilik asli</li>\n                      <li>Berikan konteks dan komentar</li>\n                      <li>Sertakan atribusi jika memungkinkan</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-blue-200 mb-2\">Contoh Fair Use yang Tepat:</h3>\n                <ul className=\"space-y-2 text-blue-100 text-sm\">\n                  <li>• <strong>Review Film:</strong> \"Analisis cinematography dalam film [nama] dengan fokus pada teknik lighting\"</li>\n                  <li>• <strong>Parodi:</strong> \"Versi komedi dari genre horror klasik dengan twist modern\"</li>\n                  <li>• <strong>Edukasi:</strong> \"Penjelasan teknik editing yang digunakan dalam video viral terbaru\"</li>\n                  <li>• <strong>Komentar:</strong> \"Perspektif budaya Indonesia terhadap trend global terbaru\"</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">Tips untuk Konten Berkualitas</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Lightbulb className=\"w-5 h-5 text-green-400\" />\n                    <h3 className=\"font-semibold text-green-200\">Teknik Penulisan Prompt</h3>\n                  </div>\n                  <ul className=\"text-sm text-slate-300 space-y-1\">\n                    <li>• Gunakan deskripsi visual yang spesifik</li>\n                    <li>• Sertakan detail pencahayaan dan mood</li>\n                    <li>• Jelaskan setting dan konteks</li>\n                    <li>• Tambahkan informasi tentang gerakan</li>\n                    <li>• Gunakan referensi gaya yang jelas</li>\n                  </ul>\n                </div>\n                \n                <div className=\"bg-purple-900/20 border border-purple-500/30 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-purple-200 mb-2\">Optimisasi Hasil</h3>\n                  <ul className=\"text-sm text-slate-300 space-y-1\">\n                    <li>• Uji berbagai variasi prompt</li>\n                    <li>• Gunakan fitur enhance untuk perbaikan</li>\n                    <li>• Manfaatkan auto-translate jika diperlukan</li>\n                    <li>• Iterasi berdasarkan hasil sebelumnya</li>\n                  </ul>\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-blue-200 mb-2\">Contoh Prompt Berkualitas Tinggi</h3>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"bg-slate-800/70 rounded p-2\">\n                      <p className=\"text-slate-300\">\"Seekor kucing oranye bermain piano di ruangan hangat dengan cahaya lilin, gaya cinematik dengan depth of field shallow, pencahayaan golden hour\"</p>\n                    </div>\n                    <div className=\"bg-slate-800/70 rounded p-2\">\n                      <p className=\"text-slate-300\">\"Time-lapse pertumbuhan tanaman dari biji hingga berbunga, dengan background minimalis putih, makro photography, 4K quality\"</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-yellow-200 mb-2\">Checklist Sebelum Generate</h3>\n                  <ul className=\"text-sm text-slate-300 space-y-1\">\n                    <li>□ Apakah prompt mengandung konten yang dilarang?</li>\n                    <li>□ Apakah melanggar hak cipta atau trademark?</li>\n                    <li>□ Apakah deskripsi cukup detail dan jelas?</li>\n                    <li>□ Apakah sesuai dengan tujuan penggunaan?</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">Dukungan dan Konsultasi</h2>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-white mb-2\">Tidak Yakin dengan Konten Anda?</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Tim support kami siap membantu mengevaluasi konten yang meragukan.\n                </p>\n                <Link href=\"/contact\">\n                  <Button size=\"sm\" className=\"bg-purple-600 hover:bg-purple-700\">\n                    Konsultasi dengan Tim\n                  </Button>\n                </Link>\n              </div>\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-white mb-2\">Laporan Konten Bermasalah</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Bantu kami menjaga komunitas dengan melaporkan konten yang melanggar.\n                </p>\n                <a href=\"mailto:abuse@videoai.id\" className=\"text-purple-400 hover:text-purple-300 text-sm\">\n                  abuse@videoai.id\n                </a>\n              </div>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Recommended Content:</strong> Educational content, business presentations, creative arts, \n                positive entertainment, and cultural documentation are encouraged with detailed, specific prompts.\n              </p>\n              <p>\n                <strong>Sensitive Content:</strong> Political, religious, and social topics require careful handling. \n                Avoid partisan bias, respect all beliefs, and present balanced perspectives with credible sources.\n              </p>\n              <p>\n                <strong>Prohibited Content:</strong> Violence, sexual content, hate speech, child exploitation, \n                terrorism, illegal substances, and copyright infringement result in immediate content removal and account penalties.\n              </p>\n              <p>\n                <strong>Fair Use:</strong> Acceptable for criticism, parody, news commentary, education, and research. \n                Use minimal necessary content, ensure transformation, provide context, and include attribution.\n              </p>\n              <p>\n                <strong>Support:</strong> Contact our team at <Link href=\"/contact\" className=\"text-cyan-400 hover:text-cyan-300\">support</Link> for \n                content consultation or report violations to abuse@videoai.id.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":20585},"client/src/pages/help/faq.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, ChevronDown, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { useState } from \"react\";\n\nexport default function FAQ() {\n  const [openItems, setOpenItems] = useState<string[]>([]);\n\n  const toggleItem = (id: string) => {\n    setOpenItems(prev => \n      prev.includes(id) \n        ? prev.filter(item => item !== id)\n        : [...prev, id]\n    );\n  };\n\n  const faqCategories = [\n    {\n      title: \"Dasar-dasar VideoAI\",\n      items: [\n        {\n          id: \"what-is-videoai\",\n          question: \"Apa itu VideoAI?\",\n          answer: \"VideoAI adalah platform AI yang memungkinkan Anda membuat video berkualitas HD berdurasi 8 detik dari prompt teks. Menggunakan teknologi kecerdasan buatan terdepan, platform ini mengubah deskripsi tekstual menjadi video visual yang menakjubkan tanpa memerlukan keahlian editing.\"\n        },\n        {\n          id: \"how-it-works\",\n          question: \"Bagaimana cara kerja VideoAI?\",\n          answer: \"VideoAI menggunakan model AI generatif yang telah dilatih pada jutaan video untuk memahami hubungan antara teks dan visual. Ketika Anda memasukkan prompt, AI menganalisis deskripsi tersebut dan menghasilkan sequence visual yang sesuai, kemudian merender menjadi video HD 8 detik.\"\n        },\n        {\n          id: \"video-quality\",\n          question: \"Seperti apa kualitas video yang dihasilkan?\",\n          answer: \"Video dihasilkan dalam format MP4 dengan resolusi HD (1080p), frame rate 24fps, dan durasi tetap 8 detik. Kualitas visual bergantung pada detail prompt dan kemampuan model AI yang terus ditingkatkan.\"\n        }\n      ]\n    },\n    {\n      title: \"Penggunaan dan Fitur\",\n      items: [\n        {\n          id: \"prompt-tips\",\n          question: \"Bagaimana cara menulis prompt yang baik?\",\n          answer: \"Prompt terbaik adalah yang deskriptif dan spesifik. Sertakan detail tentang objek utama, setting/lokasi, pencahayaan, mood, dan gerakan. Contoh: 'Seekor kucing oranye bermain piano di ruangan hangat dengan cahaya lilin' lebih baik daripada 'kucing main piano'.\"\n        },\n        {\n          id: \"enhance-feature\",\n          question: \"Apa fungsi tombol 'Enhance'?\",\n          answer: \"Fitur Enhance menggunakan AI untuk memperbaiki dan memperkaya prompt Anda secara otomatis. Ia menambahkan detail visual, memperbaiki struktur kalimat, dan mengoptimalkan prompt untuk hasil video yang lebih baik.\"\n        },\n        {\n          id: \"multiple-videos\",\n          question: \"Bisakah saya membuat beberapa video sekaligus?\",\n          answer: \"Ya! Anda dapat menjalankan hingga 10 proses pembuatan video secara bersamaan. Tidak perlu menunggu satu video selesai untuk memulai yang lain. Sistem akan mengelola queue secara otomatis.\"\n        },\n        {\n          id: \"auto-translate\",\n          question: \"Apa itu fitur auto-translate?\",\n          answer: \"Auto-translate secara otomatis menerjemahkan prompt Bahasa Indonesia ke Bahasa Inggris untuk hasil yang lebih optimal, karena model AI dilatih terutama dengan data berbahasa Inggris.\"\n        }\n      ]\n    },\n    {\n      title: \"Format dan Download\",\n      items: [\n        {\n          id: \"file-format\",\n          question: \"Dalam format apa video diunduh?\",\n          answer: \"Video diunduh dalam format MP4 (H.264 codec) dengan resolusi 1080p. Format ini kompatibel dengan hampir semua device dan platform media sosial.\"\n        },\n        {\n          id: \"file-size\",\n          question: \"Berapa ukuran file video?\",\n          answer: \"Video 8 detik HD biasanya berukuran 3-8 MB tergantung kompleksitas visual. Ukuran sudah dioptimalkan untuk keseimbangan antara kualitas dan efisiensi storage.\"\n        },\n        {\n          id: \"duration-limit\",\n          question: \"Bisakah saya membuat video lebih dari 8 detik?\",\n          answer: \"Saat ini, platform dibatasi pada durasi 8 detik untuk memastikan kualitas optimal dan waktu pemrosesan yang cepat. Fitur durasi variabel sedang dalam pengembangan.\"\n        },\n        {\n          id: \"watermark\",\n          question: \"Apakah ada watermark di video?\",\n          answer: \"Tidak, video yang dihasilkan tidak memiliki watermark dan dapat digunakan secara bebas termasuk untuk keperluan komersial.\"\n        }\n      ]\n    },\n    {\n      title: \"Hak Cipta dan Lisensi\",\n      items: [\n        {\n          id: \"commercial-use\",\n          question: \"Bisakah saya menggunakan video untuk tujuan komersial?\",\n          answer: \"Ya, Anda memiliki hak penuh untuk menggunakan video yang dihasilkan untuk tujuan komersial, termasuk menjual, mendistribusikan, atau menggunakan dalam project bisnis.\"\n        },\n        {\n          id: \"ownership\",\n          question: \"Siapa yang memiliki hak cipta video?\",\n          answer: \"Anda memiliki hak cipta atas video yang dihasilkan dari prompt Anda. VideoAI tidak mengklaim kepemilikan atas konten yang Anda buat.\"\n        },\n        {\n          id: \"attribution\",\n          question: \"Apakah saya perlu menyebutkan VideoAI saat menggunakan video?\",\n          answer: \"Tidak ada kewajiban untuk menyebutkan VideoAI, namun kami sangat menghargai jika Anda memberikan credit atau berbagi pengalaman Anda.\"\n        }\n      ]\n    },\n    {\n      title: \"Akun dan Pembayaran\",\n      items: [\n        {\n          id: \"free-tier\",\n          question: \"Apa yang tersedia di akun gratis?\",\n          answer: \"Akun gratis memungkinkan Anda membuat sejumlah terbatas video per bulan dengan fitur dasar. Lihat halaman pricing untuk detail lengkap batas dan fitur.\"\n        },\n        {\n          id: \"payment-methods\",\n          question: \"Metode pembayaran apa yang diterima?\",\n          answer: \"Kami menerima kartu kredit/debit, e-wallet seperti GoPay, OVO, DANA, dan transfer bank. Pembayaran diproses secara aman melalui gateway pembayaran berlisensi.\"\n        },\n        {\n          id: \"refund-policy\",\n          question: \"Bagaimana kebijakan refund?\",\n          answer: \"Refund dapat diajukan dalam 7 hari pertama setelah pembelian langganan baru. Lihat halaman kebijakan refund untuk syarat dan kondisi lengkap.\"\n        },\n        {\n          id: \"account-limits\",\n          question: \"Apakah ada batasan penggunaan?\",\n          answer: \"Ya, setiap paket memiliki batasan jumlah video per bulan, concurrent processing, dan fitur tertentu. Batasan direset setiap bulan dan dapat di-upgrade dengan paket yang lebih tinggi.\"\n        }\n      ]\n    },\n    {\n      title: \"Teknis dan Troubleshooting\",\n      items: [\n        {\n          id: \"processing-time\",\n          question: \"Berapa lama waktu pembuatan video?\",\n          answer: \"Rata-rata 1-3 menit per video, tergantung kompleksitas prompt dan beban server. Waktu bisa lebih lama saat peak hours atau untuk prompt yang sangat kompleks.\"\n        },\n        {\n          id: \"failed-generation\",\n          question: \"Mengapa video saya gagal dibuat?\",\n          answer: \"Video bisa gagal karena prompt melanggar kebijakan konten, masalah teknis server, atau prompt yang terlalu kompleks/ambigu. Coba dengan prompt yang lebih sederhana dan pastikan mengikuti panduan konten.\"\n        },\n        {\n          id: \"slow-loading\",\n          question: \"Website lambat atau tidak merespons?\",\n          answer: \"Coba refresh halaman, clear cache browser, atau gunakan koneksi internet yang lebih stabil. Jika masalah berlanjut, hubungi customer support.\"\n        },\n        {\n          id: \"browser-compatibility\",\n          question: \"Browser apa yang didukung?\",\n          answer: \"VideoAI kompatibel dengan Chrome, Firefox, Safari, dan Edge versi terbaru. Untuk pengalaman terbaik, gunakan browser yang telah diperbarui dengan JavaScript enabled.\"\n        },\n        {\n          id: \"mobile-usage\",\n          question: \"Bisakah digunakan di mobile?\",\n          answer: \"Ya, website fully responsive dan dapat digunakan di smartphone dan tablet. App mobile native sedang dalam pengembangan.\"\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Frequently Asked Questions (FAQ)\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Temukan jawaban atas pertanyaan yang paling sering diajukan</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n            <p className=\"text-blue-200 text-sm\">\n              💡 <strong>Tidak menemukan jawaban?</strong> Hubungi customer service kami melalui chat widget \n              atau email support@videoai.id untuk bantuan personal.\n            </p>\n          </div>\n\n          {faqCategories.map((category, categoryIndex) => (\n            <section key={categoryIndex}>\n              <h2 className=\"text-2xl font-bold text-purple-300 mb-6\">{category.title}</h2>\n              <div className=\"space-y-4\">\n                {category.items.map((item) => (\n                  <Collapsible key={item.id} open={openItems.includes(item.id)}>\n                    <CollapsibleTrigger\n                      onClick={() => toggleItem(item.id)}\n                      className=\"w-full bg-slate-700/50 hover:bg-slate-700/70 rounded-lg p-4 text-left transition-colors\"\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"text-lg font-semibold text-white\">{item.question}</h3>\n                        {openItems.includes(item.id) ? (\n                          <ChevronDown className=\"w-5 h-5 text-slate-400\" />\n                        ) : (\n                          <ChevronRight className=\"w-5 h-5 text-slate-400\" />\n                        )}\n                      </div>\n                    </CollapsibleTrigger>\n                    <CollapsibleContent>\n                      <div className=\"mt-2 p-4 bg-slate-600/30 rounded-lg border-l-4 border-purple-500\">\n                        <p className=\"text-slate-300 leading-relaxed\">{item.answer}</p>\n                      </div>\n                    </CollapsibleContent>\n                  </Collapsible>\n                ))}\n              </div>\n            </section>\n          ))}\n\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">Masih Butuh Bantuan?</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">📧 Email Support</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Untuk pertanyaan teknis atau masalah akun\n                </p>\n                <p className=\"text-purple-400\">support@videoai.id</p>\n              </div>\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">💬 Live Chat</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Chat langsung dengan customer service\n                </p>\n                <p className=\"text-purple-400\">Widget chat di pojok kanan bawah</p>\n              </div>\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">📖 Panduan Lengkap</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Tutorial step-by-step untuk pemula\n                </p>\n                <Link href=\"/help/getting-started\" className=\"text-purple-400 hover:text-purple-300\">\n                  Baca Getting Started →\n                </Link>\n              </div>\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">⚖️ Kebijakan</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Syarat penggunaan dan kebijakan privasi\n                </p>\n                <Link href=\"/legal/terms\" className=\"text-purple-400 hover:text-purple-300\">\n                  Lihat Legal Pages →\n                </Link>\n              </div>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>VideoAI Basics:</strong> AI-powered platform that creates 8-second HD videos from text prompts \n                using advanced generative AI models trained on millions of videos.\n              </p>\n              <p>\n                <strong>Features:</strong> Multiple concurrent video generation (up to 10), prompt enhancement, \n                auto-translation, HD quality output (1080p MP4), and commercial usage rights without watermarks.\n              </p>\n              <p>\n                <strong>Usage Tips:</strong> Write descriptive prompts with specific visual details, lighting, and movement. \n                Use the Enhance feature for better results and auto-translate for Indonesian prompts.\n              </p>\n              <p>\n                <strong>Technical:</strong> Processing takes 1-3 minutes per video, supports modern browsers, \n                mobile-responsive interface, with dedicated customer support via email and live chat.\n              </p>\n              <p>\n                <strong>Pricing:</strong> Free tier available with limitations, paid plans offer more videos and features. \n                7-day refund policy for new subscriptions.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":14359},"client/src/pages/help/getting-started.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, Play, Sparkles, Download, Lightbulb, Clock, FileText } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function GettingStarted() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Panduan Memulai\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Pelajari cara membuat video AI yang menakjubkan dalam 4 langkah mudah</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-gradient-to-r from-purple-900/30 to-pink-900/30 rounded-lg p-4 border border-purple-500/30\">\n            <h2 className=\"text-xl font-semibold text-white mb-2\">🚀 Selamat Datang di VideoAI!</h2>\n            <p className=\"text-slate-300\">\n              Platform AI yang memungkinkan Anda membuat video berkualitas profesional hanya dengan mengetik prompt teks. \n              Tidak perlu keahlian editing - cukup imajinasi Anda!\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-6\">Langkah-langkah Pembuatan Video</h2>\n            \n            <div className=\"space-y-6\">\n              {/* Step 1 */}\n              <div className=\"bg-slate-700/50 rounded-lg p-6 border-l-4 border-purple-500\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold\">1</div>\n                  <FileText className=\"w-6 h-6 text-purple-400\" />\n                  <h3 className=\"text-xl font-semibold text-white\">Tulis Deskripsi Video Anda</h3>\n                </div>\n                <div className=\"ml-11 space-y-3\">\n                  <p className=\"text-slate-300\">\n                    Masukkan prompt teks yang mendeskripsikan video yang ingin Anda buat. Semakin detail, semakin baik hasilnya!\n                  </p>\n                  <div className=\"bg-slate-800/70 rounded-lg p-3\">\n                    <p className=\"text-sm text-slate-400 mb-2\">Contoh prompt yang baik:</p>\n                    <div className=\"space-y-2\">\n                      <div className=\"bg-green-900/20 border border-green-500/30 rounded p-2\">\n                        <p className=\"text-green-200 text-sm\">✅ \"Seekor kucing oranye bermain piano di ruangan yang hangat dengan cahaya lilin\"</p>\n                      </div>\n                      <div className=\"bg-green-900/20 border border-green-500/30 rounded p-2\">\n                        <p className=\"text-green-200 text-sm\">✅ \"Elang emas terbang melintasi puncak gunung saat matahari terbenam dengan awan dramatis\"</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-3\">\n                    <p className=\"text-yellow-200 text-sm\">\n                      💡 <strong>Tips:</strong> Tekan Enter untuk langsung generate video, atau gunakan fitur \"Enhance\" \n                      untuk meningkatkan kualitas prompt Anda secara otomatis.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Step 2 */}\n              <div className=\"bg-slate-700/50 rounded-lg p-6 border-l-4 border-pink-500\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-8 h-8 bg-pink-600 rounded-full flex items-center justify-center text-white font-bold\">2</div>\n                  <Sparkles className=\"w-6 h-6 text-pink-400\" />\n                  <h3 className=\"text-xl font-semibold text-white\">Gunakan Fitur Enhancement (Opsional)</h3>\n                </div>\n                <div className=\"ml-11 space-y-3\">\n                  <p className=\"text-slate-300\">\n                    Klik tombol \"Enhance\" untuk memperbaiki prompt Anda menggunakan AI. Fitur ini akan:\n                  </p>\n                  <ul className=\"list-disc list-inside space-y-1 text-slate-300 ml-4\">\n                    <li>Menambahkan detail visual yang menarik</li>\n                    <li>Memperbaiki struktur kalimat untuk hasil optimal</li>\n                    <li>Menerjemahkan dari Bahasa Indonesia ke Inggris secara otomatis</li>\n                    <li>Menyesuaikan prompt untuk model AI video</li>\n                  </ul>\n                  <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-3\">\n                    <p className=\"text-blue-200 text-sm\">\n                      🤖 <strong>Auto-translate:</strong> Aktifkan toggle untuk menerjemahkan prompt Indonesia ke Inggris \n                      secara otomatis untuk hasil yang lebih optimal.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Step 3 */}\n              <div className=\"bg-slate-700/50 rounded-lg p-6 border-l-4 border-cyan-500\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-8 h-8 bg-cyan-600 rounded-full flex items-center justify-center text-white font-bold\">3</div>\n                  <Play className=\"w-6 h-6 text-cyan-400\" />\n                  <h3 className=\"text-xl font-semibold text-white\">Generate Video Anda</h3>\n                </div>\n                <div className=\"ml-11 space-y-3\">\n                  <p className=\"text-slate-300\">\n                    Klik tombol \"Generate Video\" atau tekan Enter untuk memulai proses pembuatan. Video akan diproses di cloud dengan teknologi AI terdepan.\n                  </p>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div className=\"bg-slate-800/70 rounded-lg p-3\">\n                      <h4 className=\"font-semibold text-white mb-2\">Yang Terjadi Selama Proses:</h4>\n                      <ul className=\"text-sm text-slate-300 space-y-1\">\n                        <li>• AI menganalisis prompt Anda</li>\n                        <li>• Sistem menghasilkan frame video</li>\n                        <li>• Video di-render dalam kualitas HD</li>\n                        <li>• Proses selesai dalam 1-3 menit</li>\n                      </ul>\n                    </div>\n                    <div className=\"bg-slate-800/70 rounded-lg p-3\">\n                      <h4 className=\"font-semibold text-white mb-2\">Multiple Video:</h4>\n                      <ul className=\"text-sm text-slate-300 space-y-1\">\n                        <li>• Bisa generate hingga 10 video sekaligus</li>\n                        <li>• Tidak perlu menunggu satu selesai</li>\n                        <li>• Tracking progress real-time</li>\n                        <li>• Queue management otomatis</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Step 4 */}\n              <div className=\"bg-slate-700/50 rounded-lg p-6 border-l-4 border-green-500\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-8 h-8 bg-green-600 rounded-full flex items-center justify-center text-white font-bold\">4</div>\n                  <Download className=\"w-6 h-6 text-green-400\" />\n                  <h3 className=\"text-xl font-semibold text-white\">Download dan Gunakan Video</h3>\n                </div>\n                <div className=\"ml-11 space-y-3\">\n                  <p className=\"text-slate-300\">\n                    Setelah video selesai diproses, Anda dapat langsung menonton preview dan mengunduhnya untuk digunakan.\n                  </p>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div className=\"bg-slate-800/70 rounded-lg p-3\">\n                      <h4 className=\"font-semibold text-white mb-2\">Format Video:</h4>\n                      <ul className=\"text-sm text-slate-300 space-y-1\">\n                        <li>• Durasi: 8 detik</li>\n                        <li>• Format: MP4 (H.264)</li>\n                        <li>• Resolusi: HD (1080p)</li>\n                        <li>• Frame rate: 24fps</li>\n                      </ul>\n                    </div>\n                    <div className=\"bg-slate-800/70 rounded-lg p-3\">\n                      <h4 className=\"font-semibold text-white mb-2\">Hak Penggunaan:</h4>\n                      <ul className=\"text-sm text-slate-300 space-y-1\">\n                        <li>• Penggunaan komersial diizinkan</li>\n                        <li>• Tidak ada watermark</li>\n                        <li>• Video menjadi milik Anda</li>\n                        <li>• Distribusi bebas</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">Tips untuk Hasil Terbaik</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Lightbulb className=\"w-5 h-5 text-green-400\" />\n                    <h3 className=\"font-semibold text-green-200\">Tips Penulisan Prompt</h3>\n                  </div>\n                  <ul className=\"text-sm text-slate-300 space-y-1\">\n                    <li>• Sertakan detail visual yang spesifik</li>\n                    <li>• Jelaskan pencahayaan dan suasana</li>\n                    <li>• Tambahkan informasi tentang gerakan</li>\n                    <li>• Gunakan kata sifat yang deskriptif</li>\n                    <li>• Hindari prompt yang terlalu rumit</li>\n                  </ul>\n                </div>\n                \n                <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <Clock className=\"w-5 h-5 text-blue-400\" />\n                    <h3 className=\"font-semibold text-blue-200\">Optimalisasi Waktu</h3>\n                  </div>\n                  <ul className=\"text-sm text-slate-300 space-y-1\">\n                    <li>• Generate multiple video sekaligus</li>\n                    <li>• Gunakan fitur enhance untuk prompt pendek</li>\n                    <li>• Coba variasi prompt yang berbeda</li>\n                    <li>• Manfaatkan contoh prompt yang disediakan</li>\n                  </ul>\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div className=\"bg-purple-900/20 border border-purple-500/30 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-purple-200 mb-2\">Contoh Prompt Kategori Populer</h3>\n                  <div className=\"space-y-2 text-sm\">\n                    <div>\n                      <strong className=\"text-white\">Alam:</strong>\n                      <p className=\"text-slate-300\">\"Hutan hujan dengan air terjun dan pelangi\"</p>\n                    </div>\n                    <div>\n                      <strong className=\"text-white\">Hewan:</strong>\n                      <p className=\"text-slate-300\">\"Lumba-lumba melompat di laut biru dengan matahari terbenam\"</p>\n                    </div>\n                    <div>\n                      <strong className=\"text-white\">Fantasi:</strong>\n                      <p className=\"text-slate-300\">\"Naga emas terbang di atas kastil dengan aurora borealis\"</p>\n                    </div>\n                    <div>\n                      <strong className=\"text-white\">Teknologi:</strong>\n                      <p className=\"text-slate-300\">\"Robot futuristik berjalan di kota cyberpunk dengan neon\"</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-yellow-200 mb-2\">Troubleshooting Umum</h3>\n                  <ul className=\"text-sm text-slate-300 space-y-1\">\n                    <li>• Video tidak sesuai? Coba prompt yang lebih spesifik</li>\n                    <li>• Loading lama? Cek koneksi internet</li>\n                    <li>• Error? Refresh halaman dan coba lagi</li>\n                    <li>• Butuh bantuan? Hubungi customer service</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">Langkah Selanjutnya</h2>\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <Link href=\"/help/faq\">\n                <div className=\"bg-slate-700/50 hover:bg-slate-700/70 rounded-lg p-4 transition-colors cursor-pointer\">\n                  <h3 className=\"font-semibold text-white mb-2\">📋 Baca FAQ</h3>\n                  <p className=\"text-sm text-slate-300\">Pertanyaan yang sering diajukan</p>\n                </div>\n              </Link>\n              <Link href=\"/help/content-policy\">\n                <div className=\"bg-slate-700/50 hover:bg-slate-700/70 rounded-lg p-4 transition-colors cursor-pointer\">\n                  <h3 className=\"font-semibold text-white mb-2\">📖 Panduan Konten</h3>\n                  <p className=\"text-sm text-slate-300\">Aturan dan best practices</p>\n                </div>\n              </Link>\n              <Link href=\"/pricing\">\n                <div className=\"bg-slate-700/50 hover:bg-slate-700/70 rounded-lg p-4 transition-colors cursor-pointer\">\n                  <h3 className=\"font-semibold text-white mb-2\">💎 Lihat Paket</h3>\n                  <p className=\"text-sm text-slate-300\">Upgrade untuk fitur premium</p>\n                </div>\n              </Link>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Getting Started:</strong> Create AI videos in 4 steps: 1) Write descriptive text prompt, \n                2) Use enhancement features (optional), 3) Generate video with AI processing, 4) Download HD MP4 result.\n              </p>\n              <p>\n                <strong>Features:</strong> 8-second HD videos, multiple concurrent generation, auto-translation, \n                prompt enhancement, commercial usage rights, no watermarks.\n              </p>\n              <p>\n                <strong>Tips:</strong> Use specific visual details, describe lighting and mood, include movement information, \n                try multiple variations, and leverage example prompts for best results.\n              </p>\n              <p>\n                <strong>Next Steps:</strong> Check <Link href=\"/help/faq\" className=\"text-cyan-400 hover:text-cyan-300\">FAQ</Link>, \n                read <Link href=\"/help/content-policy\" className=\"text-cyan-400 hover:text-cyan-300\">content guidelines</Link>, \n                or explore <Link href=\"/pricing\" className=\"text-cyan-400 hover:text-cyan-300\">premium plans</Link>.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":15931},"client/src/pages/legal/age.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, Users, Shield, AlertTriangle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function AgePolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Perlindungan Anak & Batas Usia\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Shield className=\"w-5 h-5 text-blue-400\" />\n              <h3 className=\"font-semibold text-blue-200\">Komitmen Perlindungan Anak</h3>\n            </div>\n            <p className=\"text-blue-100 text-sm\">\n              VideoAI berkomitmen untuk menciptakan lingkungan online yang aman untuk semua pengguna, \n              dengan perlindungan khusus untuk anak-anak dan remaja sesuai peraturan Indonesia dan internasional.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Batas Usia Minimum</h2>\n            <div className=\"space-y-6\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <Users className=\"w-5 h-5 text-green-400\" />\n                  <h3 className=\"text-lg font-semibold text-white\">Persyaratan Usia</h3>\n                </div>\n                <div className=\"space-y-4\">\n                  <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-3\">\n                    <h4 className=\"font-semibold text-green-200 mb-2\">18 Tahun ke Atas - Akses Penuh</h4>\n                    <p className=\"text-green-100 text-sm\">\n                      Pengguna yang berusia 18 tahun atau lebih dapat menggunakan semua fitur platform \n                      tanpa pembatasan, termasuk akun berbayar dan fitur komersial.\n                    </p>\n                  </div>\n                  \n                  <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-3\">\n                    <h4 className=\"font-semibold text-yellow-200 mb-2\">16-17 Tahun - Dengan Persetujuan Orang Tua</h4>\n                    <p className=\"text-yellow-100 text-sm\">\n                      Remaja usia 16-17 tahun dapat menggunakan platform dengan persetujuan tertulis \n                      dan pengawasan orang tua/wali yang sah.\n                    </p>\n                  </div>\n                  \n                  <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-3\">\n                    <h4 className=\"font-semibold text-red-200 mb-2\">Di Bawah 16 Tahun - Tidak Diizinkan</h4>\n                    <p className=\"text-red-100 text-sm\">\n                      Sesuai UU PDP Indonesia dan standar internasional, kami tidak melayani \n                      pengguna di bawah 16 tahun untuk melindungi privasi dan keamanan mereka.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Persetujuan Orang Tua</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                Untuk pengguna usia 16-17 tahun, persetujuan orang tua/wali diperlukan melalui proses berikut:\n              </p>\n\n              <div className=\"grid md:grid-cols-4 gap-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">1</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Registrasi</h3>\n                  <p className=\"text-slate-300 text-sm\">Anak mengisi form registrasi dengan data orang tua</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">2</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Verifikasi</h3>\n                  <p className=\"text-slate-300 text-sm\">Email verifikasi dikirim ke orang tua</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">3</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Persetujuan</h3>\n                  <p className=\"text-slate-300 text-sm\">Orang tua menyetujui syarat dan ketentuan</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">4</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Aktivasi</h3>\n                  <p className=\"text-slate-300 text-sm\">Akun diaktifkan dengan monitoring</p>\n                </div>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-blue-200 mb-2\">Dokumen yang Diperlukan:</h3>\n                <ul className=\"text-blue-100 text-sm space-y-1\">\n                  <li>• Identitas anak (KTP anak/akta kelahiran)</li>\n                  <li>• Identitas orang tua/wali (KTP/paspor)</li>\n                  <li>• Surat persetujuan yang ditandatangani</li>\n                  <li>• Bukti hubungan keluarga (jika diperlukan)</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Fitur Perlindungan untuk Remaja</h2>\n            <div className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-3\">Pembatasan Akses</h3>\n                  <ul className=\"text-slate-300 text-sm space-y-2\">\n                    <li>• Akun gratis only (tidak bisa upgrade berbayar)</li>\n                    <li>• Limit video generation per bulan</li>\n                    <li>• Konten filter otomatis lebih ketat</li>\n                    <li>• Tidak bisa mengunduh watermark-free</li>\n                    <li>• Tidak bisa share ke public gallery</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-3\">Monitoring & Safety</h3>\n                  <ul className=\"text-slate-300 text-sm space-y-2\">\n                    <li>• Review semua konten sebelum generation</li>\n                    <li>• Report to parent untuk aktivitas mencurigakan</li>\n                    <li>• Akses terbatas pada prompt tertentu</li>\n                    <li>• Session timeout otomatis lebih cepat</li>\n                    <li>• Chat support dengan moderator khusus</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-3\">Kontrol Orang Tua</h3>\n                  <ul className=\"text-slate-300 text-sm space-y-2\">\n                    <li>• Dashboard monitoring untuk orang tua</li>\n                    <li>• Email report mingguan aktivitas</li>\n                    <li>• Kemampuan suspend akun temporary</li>\n                    <li>• Review dan approve konten (opsional)</li>\n                    <li>• Setting time limits penggunaan</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-3\">Edukasi & Awareness</h3>\n                  <ul className=\"text-slate-300 text-sm space-y-2\">\n                    <li>• Tutorial digital literacy</li>\n                    <li>• Panduan safe online behavior</li>\n                    <li>• Warning untuk konten sensitive</li>\n                    <li>• Tips untuk responsible AI usage</li>\n                    <li>• Link ke resources mental health</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Konten Safety untuk Anak</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <AlertTriangle className=\"w-5 h-5 text-red-400\" />\n                  <h3 className=\"text-xl font-semibold text-red-300\">Zero Tolerance untuk CSAM</h3>\n                </div>\n                <p className=\"text-red-100 text-sm mb-3\">\n                  VideoAI memiliki kebijakan zero tolerance untuk Child Sexual Abuse Material (CSAM) \n                  dan menggunakan teknologi detection terdepan untuk mencegah, mendeteksi, dan melaporkan konten tersebut.\n                </p>\n                <div className=\"bg-red-800/50 rounded p-3\">\n                  <h4 className=\"font-semibold text-red-200 mb-2\">Tindakan Otomatis:</h4>\n                  <ul className=\"text-red-100 text-sm space-y-1\">\n                    <li>• AI-powered CSAM detection</li>\n                    <li>• Automatic account termination</li>\n                    <li>• Report to authorities (NCMEC, law enforcement)</li>\n                    <li>• IP ban dan device fingerprinting</li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"bg-orange-900/20 border border-orange-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-orange-200 mb-3\">Konten yang Dilarang untuk Remaja</h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Kategori Dilarang:</h4>\n                    <ul className=\"text-orange-100 text-sm space-y-1\">\n                      <li>• Konten seksual atau suggestif</li>\n                      <li>• Kekerasan atau gore</li>\n                      <li>• Substance abuse (narkoba, alkohol)</li>\n                      <li>• Self-harm atau suicide content</li>\n                      <li>• Bullying atau harassment</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Batasan Tambahan:</h4>\n                    <ul className=\"text-orange-100 text-sm space-y-1\">\n                      <li>• Tidak bisa generate likeness orang nyata</li>\n                      <li>• Prompt filter lebih sensitif</li>\n                      <li>• Automatic content moderation</li>\n                      <li>• Human review untuk edge cases</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Pelaporan dan Dukungan</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Untuk Orang Tua</h3>\n                <div className=\"space-y-3\">\n                  <p className=\"text-slate-300 text-sm\">\n                    Jika Anda khawatir tentang aktivitas anak atau menemukan konten yang tidak pantas:\n                  </p>\n                  <div className=\"space-y-2 text-sm\">\n                    <p><strong>Email:</strong> parents@videoai.id</p>\n                    <p><strong>Phone:</strong> +62 21 XXXX XXXX (ext. 3)</p>\n                    <p><strong>Hours:</strong> 24/7 untuk emergency, 09:00-18:00 untuk general inquiry</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Untuk Remaja</h3>\n                <div className=\"space-y-3\">\n                  <p className=\"text-slate-300 text-sm\">\n                    Jika Anda merasa tidak aman, di-bully, atau menemukan konten yang mengganggu:\n                  </p>\n                  <div className=\"space-y-2 text-sm\">\n                    <p><strong>Chat Support:</strong> Widget chat 24/7</p>\n                    <p><strong>Email:</strong> teen-support@videoai.id</p>\n                    <p><strong>Anonymous Report:</strong> Link di footer website</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Compliance dan Regulasi</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Kepatuhan Hukum:</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Indonesia:</strong> UU No. 35/2014 tentang Perlindungan Anak dan UU PDP</li>\n                  <li><strong>International:</strong> COPPA (US), GDPR Article 8 (EU), UK Age Appropriate Design Code</li>\n                  <li><strong>Industry Standards:</strong> kidSAFE Seal Program, CARU guidelines</li>\n                  <li><strong>Platform Policies:</strong> Alignment dengan YouTube Kids, TikTok Family Safety</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-blue-200 mb-2\">Regular Audits & Updates:</h3>\n                <ul className=\"text-blue-100 text-sm space-y-1\">\n                  <li>• Quarterly review kebijakan child safety</li>\n                  <li>• Annual third-party security audit</li>\n                  <li>• Regular training untuk moderator content</li>\n                  <li>• Update AI model untuk better child protection</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Age Requirements:</strong> 18+ for full access, 16-17 with parental consent and supervision, \n                under 16 not permitted per Indonesian Personal Data Protection Law and international standards.\n              </p>\n              <p>\n                <strong>Parental Consent:</strong> Required verification process including identity documents, \n                signed consent forms, and ongoing monitoring dashboard for parents of teen users.\n              </p>\n              <p>\n                <strong>Teen Protections:</strong> Limited to free accounts, stricter content filtering, \n                automatic moderation, parental controls, and specialized support with safety education.\n              </p>\n              <p>\n                <strong>CSAM Zero Tolerance:</strong> AI-powered detection, automatic reporting to authorities, \n                immediate account termination, and IP banning for any child exploitation material.\n              </p>\n              <p>\n                <strong>Support:</strong> 24/7 emergency support for parents (parents@videoai.id), \n                specialized teen support (teen-support@videoai.id), and anonymous reporting options.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":16812},"client/src/pages/legal/ai-disclosure.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, Bot, AlertTriangle, Brain, Eye } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function AIDisclosure() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Pernyataan AI & Transparansi\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Bot className=\"w-5 h-5 text-blue-400\" />\n              <h3 className=\"font-semibold text-blue-200\">Transparansi AI</h3>\n            </div>\n            <p className=\"text-blue-100 text-sm\">\n              VideoAI menggunakan teknologi kecerdasan buatan untuk menghasilkan konten video. \n              Dokumen ini menjelaskan bagaimana AI bekerja, batasannya, dan tanggung jawab Anda sebagai pengguna.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Konfirmasi Penggunaan AI</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Teknologi yang Digunakan:</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Generative AI Models:</strong> Model pembelajaran mesin yang dilatih untuk menghasilkan video dari teks</li>\n                  <li><strong>Natural Language Processing:</strong> Untuk memahami dan memproses prompt berbahasa Indonesia dan Inggris</li>\n                  <li><strong>Computer Vision:</strong> Untuk menganalisis dan menghasilkan elemen visual yang koheren</li>\n                  <li><strong>Neural Networks:</strong> Deep learning algorithms untuk sintesis video berkualitas tinggi</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <AlertTriangle className=\"w-5 h-5 text-yellow-400\" />\n                  <h3 className=\"font-semibold text-yellow-200\">Penting untuk Diketahui</h3>\n                </div>\n                <p className=\"text-yellow-100 text-sm\">\n                  <strong>Semua video yang dihasilkan oleh platform ini adalah produk AI generatif.</strong> \n                  Konten tidak merepresentasikan peristiwa nyata kecuali secara kebetulan, dan harus diperlakukan \n                  sebagai karya seni digital atau simulasi.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Potensi Bias dan Keterbatasan</h2>\n            <div className=\"space-y-6\">\n              <div className=\"bg-red-900/10 border border-red-500/20 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <Brain className=\"w-5 h-5 text-red-400\" />\n                  <h3 className=\"text-xl font-semibold text-red-300\">Bias dalam Model AI</h3>\n                </div>\n                <div className=\"space-y-4\">\n                  <p className=\"text-slate-300\">\n                    Model AI kami dilatih menggunakan dataset besar yang mungkin mengandung bias implicit. Ini dapat mempengaruhi:\n                  </p>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"font-semibold text-white mb-2\">Representasi Visual:</h4>\n                      <ul className=\"text-red-100 text-sm space-y-1\">\n                        <li>• Representasi ras dan etnis</li>\n                        <li>• Stereotip gender</li>\n                        <li>• Bias budaya dan geografis</li>\n                        <li>• Preferensi estetika tertentu</li>\n                      </ul>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-white mb-2\">Interpretasi Konteks:</h4>\n                      <ul className=\"text-red-100 text-sm space-y-1\">\n                        <li>• Asumsi budaya Barat</li>\n                        <li>• Bias temporal (modern vs klasik)</li>\n                        <li>• Preferensi gaya visual populer</li>\n                        <li>• Interpretasi subjektif prompt</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-orange-900/10 border border-orange-500/20 rounded-lg p-4\">\n                <h3 className=\"text-xl font-semibold text-orange-300 mb-3\">Keterbatasan Teknis</h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Akurasi Konten:</h4>\n                    <ul className=\"text-orange-100 text-sm space-y-1\">\n                      <li>• Tidak dapat memverifikasi fakta</li>\n                      <li>• Hasil bersifat probabilistik</li>\n                      <li>• Mungkin menghasilkan anachronism</li>\n                      <li>• Tidak memahami konteks sejarah</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Konsistensi Visual:</h4>\n                    <ul className=\"text-orange-100 text-sm space-y-1\">\n                      <li>• Variasi hasil untuk prompt sama</li>\n                      <li>• Kesulitan dengan detail spesifik</li>\n                      <li>• Keterbatasan fisika realistis</li>\n                      <li>• Interpretasi prompt yang berbeda</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Kewajiban Verifikasi Pengguna</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Tanggung Jawab Pengguna:</h3>\n                <ol className=\"list-decimal list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Verifikasi Faktual:</strong> Pastikan akurasi informasi jika video digunakan untuk tujuan edukasi atau informatif</li>\n                  <li><strong>Konteks yang Tepat:</strong> Berikan disclaimer yang sesuai saat membagikan konten AI-generated</li>\n                  <li><strong>Sensitivitas Budaya:</strong> Periksa apakah konten menghormati norma dan nilai lokal</li>\n                  <li><strong>Kesesuaian Platform:</strong> Pastikan konten sesuai dengan guidelines platform tempat Anda berbagi</li>\n                  <li><strong>Hak dan Izin:</strong> Verifikasi bahwa penggunaan tidak melanggar hak orang lain</li>\n                </ol>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-blue-200 mb-2\">Contoh Disclaimer yang Disarankan:</h3>\n                <div className=\"bg-slate-800/70 rounded p-3 text-sm text-slate-300 font-mono\">\n                  <p>\"Video ini dibuat menggunakan teknologi AI generatif dan tidak merepresentasikan peristiwa nyata.\"</p>\n                  <br />\n                  <p>\"Konten ini adalah hasil AI generatif dari VideoAI.id - selalu verifikasi informasi dari sumber terpercaya.\"</p>\n                  <br />\n                  <p>\"AI-generated content by VideoAI - for entertainment/artistic purposes only.\"</p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Larangan Penggunaan</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-red-200 mb-3\">Penggunaan yang Dilarang Keras:</h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Klaim Medis/Kesehatan:</h4>\n                    <ul className=\"text-red-100 text-sm space-y-1\">\n                      <li>• Diagnosis medis</li>\n                      <li>• Rekomendasi pengobatan</li>\n                      <li>• Klaim efektivitas obat</li>\n                      <li>• Informasi kesehatan menyesatkan</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Klaim Finansial:</h4>\n                    <ul className=\"text-red-100 text-sm space-y-1\">\n                      <li>• Prediksi pasar saham</li>\n                      <li>• Saran investasi</li>\n                      <li>• Analisis keuangan</li>\n                      <li>• Jaminan return investasi</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Klaim Hukum:</h4>\n                    <ul className=\"text-red-100 text-sm space-y-1\">\n                      <li>• Nasihat hukum</li>\n                      <li>• Interpretasi undang-undang</li>\n                      <li>• Prosedur legal</li>\n                      <li>• Hak dan kewajiban hukum</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Misinformasi:</h4>\n                    <ul className=\"text-red-100 text-sm space-y-1\">\n                      <li>• Berita palsu</li>\n                      <li>• Conspiracy theories</li>\n                      <li>• Pseudoscience</li>\n                      <li>• Historical revision</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Best Practices untuk Penggunaan AI</h2>\n            <div className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <Eye className=\"w-5 h-5 text-green-400\" />\n                    <h3 className=\"text-lg font-semibold text-green-200\">Penggunaan Etis</h3>\n                  </div>\n                  <ul className=\"text-green-100 text-sm space-y-2\">\n                    <li>• Selalu berikan konteks AI-generated</li>\n                    <li>• Hindari menyesatkan audiens</li>\n                    <li>• Hormati hak dan privasi orang lain</li>\n                    <li>• Gunakan untuk tujuan konstruktif</li>\n                    <li>• Pertimbangkan dampak sosial</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-blue-200 mb-3\">Quality Assurance</h3>\n                  <ul className=\"text-blue-100 text-sm space-y-2\">\n                    <li>• Review hasil sebelum publikasi</li>\n                    <li>• Cross-check dengan sumber terpercaya</li>\n                    <li>• Test dengan audiens kecil dulu</li>\n                    <li>• Monitor feedback dan tanggapan</li>\n                    <li>• Siap untuk koreksi jika perlu</li>\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"bg-purple-900/20 border border-purple-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-purple-200 mb-3\">Contoh Penggunaan yang Baik:</h3>\n                <div className=\"space-y-2 text-purple-100 text-sm\">\n                  <div className=\"bg-slate-800/50 rounded p-2\">\n                    <p><strong>Edukasi:</strong> \"Simulasi AI tentang ekosistem laut dalam untuk tujuan pembelajaran\"</p>\n                  </div>\n                  <div className=\"bg-slate-800/50 rounded p-2\">\n                    <p><strong>Hiburan:</strong> \"Konten hiburan AI-generated untuk media sosial dengan disclaimer yang jelas\"</p>\n                  </div>\n                  <div className=\"bg-slate-800/50 rounded p-2\">\n                    <p><strong>Kreatif:</strong> \"Eksplorasi artistik menggunakan AI sebagai tool creative collaboration\"</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Pelaporan dan Feedback</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-white mb-3\">Laporkan Masalah:</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Jika Anda menemukan bias, output yang bermasalah, atau kegunaan yang tidak tepat:\n                </p>\n                <div className=\"space-y-2 text-sm\">\n                  <p><strong>Email:</strong> ai-ethics@videoai.id</p>\n                  <p><strong>Subject:</strong> \"AI Output Concern - [Brief Description]\"</p>\n                  <p><strong>Include:</strong> Screenshot, prompt, dan penjelasan masalah</p>\n                </div>\n              </div>\n\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"font-semibold text-white mb-3\">Saran Perbaikan:</h3>\n                <p className=\"text-slate-300 text-sm mb-3\">\n                  Bantuan Anda sangat berharga untuk meningkatkan kualitas AI kami:\n                </p>\n                <ul className=\"text-slate-300 text-sm space-y-1\">\n                  <li>• Laporkan bias yang Anda temukan</li>\n                  <li>• Sarankan improvement untuk model</li>\n                  <li>• Bagikan use case positif</li>\n                  <li>• Berikan feedback tentang accuracy</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Komitmen Perbaikan Berkelanjutan</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <p className=\"text-slate-300 mb-4\">\n                VideoAI berkomitmen untuk terus meningkatkan kualitas, akurasi, dan fairness model AI kami melalui:\n              </p>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Regular model updates berdasarkan feedback pengguna</li>\n                <li>Bias detection dan mitigation yang berkelanjutan</li>\n                <li>Kolaborasi dengan peneliti AI ethics</li>\n                <li>Transparency reporting secara berkala</li>\n                <li>Community engagement untuk responsible AI development</li>\n              </ul>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>AI Technology:</strong> VideoAI uses generative AI models, natural language processing, and deep learning \n                to create videos from text prompts. All outputs are AI-generated and should be treated as digital art or simulation.\n              </p>\n              <p>\n                <strong>Limitations & Bias:</strong> AI models may contain implicit bias affecting visual representation, cultural assumptions, \n                and content interpretation. Results are probabilistic and may vary for identical prompts.\n              </p>\n              <p>\n                <strong>User Responsibilities:</strong> Verify factual accuracy, provide appropriate disclaimers, respect cultural sensitivities, \n                and ensure compliance with platform guidelines when sharing AI-generated content.\n              </p>\n              <p>\n                <strong>Prohibited Uses:</strong> Medical advice, financial predictions, legal counsel, and misinformation are strictly forbidden. \n                Always disclose AI-generated nature of content.\n              </p>\n              <p>\n                <strong>Reporting:</strong> Contact ai-ethics@videoai.id to report bias, problematic outputs, or suggest improvements. \n                We're committed to continuous model enhancement and responsible AI development.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":17615},"client/src/pages/legal/aup.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, AlertTriangle, Shield, Ban } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function AcceptableUsePolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Kebijakan Penggunaan yang Dapat Diterima\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <AlertTriangle className=\"w-5 h-5 text-red-400\" />\n              <h3 className=\"font-semibold text-red-200\">Peringatan Penting</h3>\n            </div>\n            <p className=\"text-red-100 text-sm\">\n              Pelanggaran terhadap kebijakan ini dapat mengakibatkan penonaktifan akun permanen tanpa pemberitahuan sebelumnya. \n              Ini bukan nasihat hukum - konsultasikan dengan ahli hukum untuk kebutuhan spesifik Anda.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Tujuan Kebijakan</h2>\n            <p className=\"text-slate-300 mb-4\">\n              Kebijakan Penggunaan yang Dapat Diterima (AUP) ini mengatur penggunaan platform VideoAI untuk memastikan:\n            </p>\n            <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n              <li>Lingkungan yang aman dan positif bagi semua pengguna</li>\n              <li>Kepatuhan terhadap hukum dan peraturan yang berlaku</li>\n              <li>Perlindungan hak kekayaan intelektual dan privasi</li>\n              <li>Pencegahan penyalahgunaan teknologi AI untuk tujuan berbahaya</li>\n            </ul>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-red-400 mb-6\">2. Konten yang Dilarang</h2>\n            \n            <div className=\"space-y-6\">\n              <div className=\"bg-red-900/10 border border-red-500/20 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <Ban className=\"w-5 h-5 text-red-400\" />\n                  <h3 className=\"text-xl font-semibold text-red-300\">Konten Ilegal dan Berbahaya</h3>\n                </div>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Konten Ilegal:</strong> Melanggar hukum Indonesia atau internasional</li>\n                  <li><strong>Kekerasan:</strong> Menampilkan atau mempromosikan kekerasan fisik</li>\n                  <li><strong>Terorisme:</strong> Konten yang mendukung atau menghasut tindakan teror</li>\n                  <li><strong>Narkoba:</strong> Promosi penjualan atau penggunaan narkoba ilegal</li>\n                  <li><strong>Senjata:</strong> Panduan pembuatan senjata atau bahan peledak</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-pink-900/10 border border-pink-500/20 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <Shield className=\"w-5 h-5 text-pink-400\" />\n                  <h3 className=\"text-xl font-semibold text-pink-300\">Perlindungan Anak dan Konten Dewasa</h3>\n                </div>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>CSAM:</strong> Segala bentuk eksploitasi seksual anak (zero tolerance)</li>\n                  <li><strong>Pornografi:</strong> Konten seksual eksplisit atau suggestif</li>\n                  <li><strong>Ketelanjangan:</strong> Gambar telanjang atau semi-telanjang</li>\n                  <li><strong>Grooming:</strong> Konten yang menargetkan atau memanipulasi anak</li>\n                  <li><strong>Age-inappropriate:</strong> Konten dewasa yang dapat diakses anak</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-orange-900/10 border border-orange-500/20 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <AlertTriangle className=\"w-5 h-5 text-orange-400\" />\n                  <h3 className=\"text-xl font-semibold text-orange-300\">Hate Speech dan Diskriminasi</h3>\n                </div>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Ujaran Kebencian:</strong> Berdasarkan ras, agama, etnis, gender, orientasi seksual</li>\n                  <li><strong>Bullying:</strong> Pelecehan, intimidasi, atau ancaman terhadap individu</li>\n                  <li><strong>Doxxing:</strong> Publikasi informasi pribadi tanpa izin</li>\n                  <li><strong>Harassment:</strong> Pelecehan berulang atau sistematis</li>\n                  <li><strong>Diskriminasi:</strong> Konten yang mendiskriminasi kelompok tertentu</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-blue-900/10 border border-blue-500/20 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <Shield className=\"w-5 h-5 text-blue-400\" />\n                  <h3 className=\"text-xl font-semibold text-blue-300\">Deepfake dan Misinformasi</h3>\n                </div>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Deepfake Menipu:</strong> Video palsu untuk menipu atau merugikan orang</li>\n                  <li><strong>Impersonasi:</strong> Menyamar sebagai orang lain tanpa izin</li>\n                  <li><strong>Hoax:</strong> Penyebaran informasi palsu atau menyesatkan</li>\n                  <li><strong>Manipulasi Politik:</strong> Konten untuk mempengaruhi pemilu secara curang</li>\n                  <li><strong>Medical Misinformation:</strong> Klaim medis palsu atau berbahaya</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Pelanggaran Hak Cipta dan Kekayaan Intelektual</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Yang Tidak Diizinkan:</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li>Menggunakan konten berhak cipta tanpa izin (musik, film, gambar)</li>\n                  <li>Melanggar merek dagang atau hak cipta orang lain</li>\n                  <li>Menggunakan likeness selebriti atau tokoh publik tanpa izin</li>\n                  <li>Meniru gaya atau karya seniman tanpa atribusi yang tepat</li>\n                </ul>\n              </div>\n              <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-green-200 mb-2\">Yang Diizinkan:</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li>Konten original yang Anda buat sendiri</li>\n                  <li>Materi domain publik atau creative commons</li>\n                  <li>Penggunaan fair use yang sah untuk kritik, parodi, atau edukasi</li>\n                  <li>Konten dengan lisensi yang tepat dan atribusi yang benar</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Spam dan Penyalahgunaan Teknis</h2>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Spam dan Penipuan</h3>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                  <li>Konten spam berulang</li>\n                  <li>Skema ponzi atau piramida</li>\n                  <li>Phishing atau scam</li>\n                  <li>MLM atau get-rich-quick schemes</li>\n                </ul>\n              </div>\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Penyalahgunaan Sistem</h3>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                  <li>Bot atau automasi tidak sah</li>\n                  <li>Rate limiting bypass</li>\n                  <li>Multiple accounts untuk circumvention</li>\n                  <li>Reverse engineering platform</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Contoh Penggunaan yang Dapat Diterima</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-green-200 mb-3\">✅ Dianjurkan</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 text-sm ml-4\">\n                  <li>Video edukasi dan tutorial</li>\n                  <li>Konten kreatif dan artistik original</li>\n                  <li>Demo produk dan presentasi bisnis</li>\n                  <li>Konten hiburan yang positif</li>\n                  <li>Visualisasi data dan infografis</li>\n                  <li>Animasi untuk storytelling</li>\n                  <li>Konten pemasaran yang etis</li>\n                  <li>Parodi dan satire yang tidak merugikan</li>\n                </ul>\n              </div>\n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-yellow-200 mb-3\">⚠️ Perlu Hati-hati</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 text-sm ml-4\">\n                  <li>Konten kontroversial atau sensitif</li>\n                  <li>Kritik terhadap tokoh publik (harus konstruktif)</li>\n                  <li>Konten politik (harus berimbang)</li>\n                  <li>Penggunaan music berlisensi</li>\n                  <li>Referensi merek atau produk lain</li>\n                  <li>Konten sejarah sensitif</li>\n                  <li>Diskusi isu sosial kompleks</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Pelaporan dan Penegakan</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Cara Melaporkan Pelanggaran</h3>\n                <p className=\"text-slate-300 mb-2\">Jika Anda menemukan konten yang melanggar kebijakan ini:</p>\n                <ol className=\"list-decimal list-inside space-y-1 text-slate-300 ml-4\">\n                  <li>Gunakan tombol \"Laporkan\" pada konten tersebut</li>\n                  <li>Kirim email ke abuse@videoai.id dengan detail lengkap</li>\n                  <li>Sertakan screenshot dan URL jika memungkinkan</li>\n                  <li>Berikan konteks mengapa konten melanggar kebijakan</li>\n                </ol>\n              </div>\n\n              <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-red-200 mb-2\">Konsekuensi Pelanggaran</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Peringatan:</strong> Untuk pelanggaran ringan pertama kali</li>\n                  <li><strong>Pembatasan Fitur:</strong> Sementara untuk pelanggaran berulang</li>\n                  <li><strong>Suspend Akun:</strong> 7-30 hari untuk pelanggaran serius</li>\n                  <li><strong>Penonaktifan Permanen:</strong> Untuk pelanggaran berat atau berulang</li>\n                  <li><strong>Tindakan Hukum:</strong> Jika diperlukan untuk konten ilegal</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Banding dan Review</h2>\n            <p className=\"text-slate-300 mb-4\">\n              Jika Anda merasa akun atau konten Anda ditindak secara tidak adil, Anda dapat mengajukan banding melalui:\n            </p>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Email: appeals@videoai.id dengan subjek \"Appeal - [Username Anda]\"</li>\n                <li>Sertakan alasan detail mengapa Anda merasa tindakan tidak tepat</li>\n                <li>Berikan bukti pendukung jika ada</li>\n                <li>Kami akan merespons dalam 5-7 hari kerja</li>\n              </ul>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">8. Kontak dan Dukungan</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <p className=\"text-slate-300\">\n                <strong>Tim Keamanan dan Kepatuhan:</strong><br />\n                Email: abuse@videoai.id<br />\n                Email Banding: appeals@videoai.id<br />\n                Laporan Darurat: emergency@videoai.id\n              </p>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Prohibited Content:</strong> Illegal content, violence, terrorism, child exploitation, hate speech, \n                deepfakes, copyright infringement, spam, and technical abuse are strictly forbidden.\n              </p>\n              <p>\n                <strong>Acceptable Use:</strong> Educational content, original creative works, business presentations, \n                positive entertainment, data visualization, and ethical marketing are encouraged.\n              </p>\n              <p>\n                <strong>Enforcement:</strong> Violations may result in warnings, feature restrictions, account suspension, \n                or permanent deactivation depending on severity.\n              </p>\n              <p>\n                <strong>Reporting:</strong> Report violations via the \"Report\" button, email abuse@videoai.id, or \n                contact emergency@videoai.id for urgent matters.\n              </p>\n              <p>\n                <strong>Appeals:</strong> Contest enforcement actions by emailing appeals@videoai.id with detailed reasoning \n                and supporting evidence.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":15548},"client/src/pages/legal/cookies.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function CookiePolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Kebijakan Cookie\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n            <p className=\"text-yellow-200 text-sm\">\n              <strong>Penting:</strong> Ini bukan nasihat hukum. Kebijakan cookie ini adalah templat umum yang harus disesuaikan dengan implementasi teknis aktual dan dikonsultasikan dengan ahli hukum.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Apa itu Cookie?</h2>\n            <p className=\"text-slate-300 mb-4\">\n              Cookie adalah file teks kecil yang disimpan di perangkat Anda saat mengunjungi website. \n              Cookie membantu website mengingat informasi tentang kunjungan Anda, seperti preferensi bahasa dan pengaturan lainnya.\n            </p>\n            <p className=\"text-slate-300\">\n              Selain cookie, kami juga menggunakan teknologi serupa seperti local storage, session storage, dan web beacons untuk meningkatkan pengalaman pengguna.\n            </p>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Jenis Cookie yang Kami Gunakan</h2>\n            <div className=\"space-y-6\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-xl font-semibold text-green-300 mb-3\">Cookie Penting (Strictly Necessary)</h3>\n                <p className=\"text-slate-300 mb-2\">Cookie yang diperlukan untuk fungsi dasar website:</p>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 ml-4\">\n                  <li><strong>Session ID:</strong> Menjaga sesi login Anda</li>\n                  <li><strong>CSRF Token:</strong> Keamanan dan pencegahan serangan</li>\n                  <li><strong>Cookie Consent:</strong> Mengingat pilihan cookie Anda</li>\n                  <li><strong>Load Balancer:</strong> Distribusi traffic server</li>\n                </ul>\n                <p className=\"text-green-200 text-sm mt-2\">✓ Selalu aktif - diperlukan untuk operasi website</p>\n              </div>\n\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-xl font-semibold text-blue-300 mb-3\">Cookie Fungsional (Functional)</h3>\n                <p className=\"text-slate-300 mb-2\">Cookie yang meningkatkan fungsionalitas website:</p>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 ml-4\">\n                  <li><strong>Theme Preference:</strong> Mode gelap/terang pilihan Anda</li>\n                  <li><strong>Language:</strong> Preferensi bahasa interface</li>\n                  <li><strong>Video Settings:</strong> Kualitas dan preferensi video</li>\n                  <li><strong>Auto-translate:</strong> Pengaturan terjemahan otomatis</li>\n                </ul>\n                <p className=\"text-blue-200 text-sm mt-2\">⚙️ Dapat dinonaktifkan tanpa mempengaruhi fungsi dasar</p>\n              </div>\n\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-xl font-semibold text-yellow-300 mb-3\">Cookie Analitik (Analytics)</h3>\n                <p className=\"text-slate-300 mb-2\">Cookie yang membantu kami memahami penggunaan website:</p>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 ml-4\">\n                  <li><strong>Page Views:</strong> Halaman yang paling sering dikunjungi</li>\n                  <li><strong>User Journey:</strong> Alur navigasi pengguna</li>\n                  <li><strong>Performance:</strong> Waktu loading dan error</li>\n                  <li><strong>Feature Usage:</strong> Fitur yang paling banyak digunakan</li>\n                </ul>\n                <p className=\"text-yellow-200 text-sm mt-2\">📊 Data dianonimkan dan digunakan untuk peningkatan layanan</p>\n              </div>\n\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-xl font-semibold text-pink-300 mb-3\">Cookie Pemasaran (Marketing)</h3>\n                <p className=\"text-slate-300 mb-2\">Cookie untuk personalisasi konten dan iklan:</p>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 ml-4\">\n                  <li><strong>Retargeting:</strong> Menampilkan iklan relevan di situs lain</li>\n                  <li><strong>Conversion Tracking:</strong> Mengukur efektivitas kampanye</li>\n                  <li><strong>Social Media:</strong> Integrasi dengan platform media sosial</li>\n                  <li><strong>Email Marketing:</strong> Personalisasi komunikasi email</li>\n                </ul>\n                <p className=\"text-pink-200 text-sm mt-2\">🎯 Dapat dinonaktifkan - tidak mempengaruhi fungsi utama</p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Cookie Pihak Ketiga</h2>\n            <p className=\"text-slate-300 mb-4\">\n              Beberapa cookie ditempatkan oleh layanan pihak ketiga yang kami gunakan:\n            </p>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <h4 className=\"text-lg font-semibold text-white mb-2\">Penyedia Pembayaran</h4>\n                <ul className=\"text-sm text-slate-300 space-y-1\">\n                  <li>• Stripe / Midtrans</li>\n                  <li>• Keamanan transaksi</li>\n                  <li>• Pencegahan fraud</li>\n                </ul>\n              </div>\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <h4 className=\"text-lg font-semibold text-white mb-2\">Analytics</h4>\n                <ul className=\"text-sm text-slate-300 space-y-1\">\n                  <li>• Google Analytics (opsional)</li>\n                  <li>• Plausible Analytics</li>\n                  <li>• Heat mapping tools</li>\n                </ul>\n              </div>\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <h4 className=\"text-lg font-semibold text-white mb-2\">Media Sosial</h4>\n                <ul className=\"text-sm text-slate-300 space-y-1\">\n                  <li>• Facebook Pixel</li>\n                  <li>• Twitter Analytics</li>\n                  <li>• LinkedIn Insight</li>\n                </ul>\n              </div>\n              <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                <h4 className=\"text-lg font-semibold text-white mb-2\">Customer Support</h4>\n                <ul className=\"text-sm text-slate-300 space-y-1\">\n                  <li>• Live chat widget</li>\n                  <li>• Help desk integration</li>\n                  <li>• User feedback tools</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Cara Mengelola Cookie</h2>\n            <div className=\"space-y-6\">\n              <div className=\"bg-gradient-to-r from-purple-900/30 to-pink-900/30 rounded-lg p-4 border border-purple-500/30\">\n                <h3 className=\"text-xl font-semibold text-white mb-3\">Preferensi Cookie di Website</h3>\n                <p className=\"text-slate-300 mb-3\">\n                  Anda dapat mengubah preferensi cookie Anda kapan saja melalui:\n                </p>\n                <div className=\"flex flex-wrap gap-2\">\n                  <Button size=\"sm\" className=\"bg-purple-600 hover:bg-purple-700\">\n                    Kelola Preferensi Cookie\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\">\n                    Tolak Semua Cookie Opsional\n                  </Button>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-xl font-semibold text-white mb-3\">Pengaturan Browser</h3>\n                <p className=\"text-slate-300 mb-4\">\n                  Anda juga dapat mengelola cookie melalui pengaturan browser:\n                </p>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-white mb-2\">Desktop Browser</h4>\n                    <ul className=\"text-sm text-slate-300 space-y-2\">\n                      <li>• <strong>Chrome:</strong> Settings → Privacy and security → Cookies</li>\n                      <li>• <strong>Firefox:</strong> Preferences → Privacy & Security</li>\n                      <li>• <strong>Safari:</strong> Preferences → Privacy</li>\n                      <li>• <strong>Edge:</strong> Settings → Cookies and site permissions</li>\n                    </ul>\n                  </div>\n                  <div className=\"bg-slate-700/30 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-white mb-2\">Mobile Browser</h4>\n                    <ul className=\"text-sm text-slate-300 space-y-2\">\n                      <li>• <strong>Chrome Mobile:</strong> Menu → Settings → Site settings</li>\n                      <li>• <strong>Safari iOS:</strong> Settings → Safari → Privacy</li>\n                      <li>• <strong>Samsung Internet:</strong> Menu → Settings → Sites and downloads</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                <h4 className=\"font-semibold text-yellow-200 mb-2\">⚠️ Penting untuk Diketahui</h4>\n                <p className=\"text-yellow-100 text-sm\">\n                  Menonaktifkan cookie tertentu dapat mempengaruhi fungsionalitas website. \n                  Cookie penting tidak dapat dinonaktifkan karena diperlukan untuk operasi dasar website.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Do Not Track</h2>\n            <p className=\"text-slate-300\">\n              Kami menghormati sinyal \"Do Not Track\" dari browser Anda. Ketika Do Not Track diaktifkan, \n              kami akan menonaktifkan cookie analitik dan pemasaran opsional, namun cookie penting tetap berfungsi \n              untuk memastikan website dapat beroperasi dengan normal.\n            </p>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Pembaruan Kebijakan</h2>\n            <p className=\"text-slate-300\">\n              Kebijakan cookie ini dapat diperbarui dari waktu ke waktu untuk mencerminkan perubahan \n              dalam praktik kami atau persyaratan hukum. Tanggal pembaruan terakhir tertera di bagian atas halaman ini.\n            </p>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Kontak</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <p className=\"text-slate-300\">\n                Untuk pertanyaan tentang penggunaan cookie:<br />\n                Email: privacy@videoai.id<br />\n                Atau kunjungi <Link href=\"/contact\" className=\"text-purple-400 hover:text-purple-300\">halaman kontak</Link> kami.\n              </p>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Cookie Types:</strong> We use essential cookies (always active), functional cookies (user preferences), \n                analytics cookies (usage statistics), and marketing cookies (advertising personalization).\n              </p>\n              <p>\n                <strong>Third-party Cookies:</strong> Payment processors, analytics providers, social media platforms, \n                and customer support tools may place cookies on your device.\n              </p>\n              <p>\n                <strong>Cookie Management:</strong> You can manage cookie preferences through our cookie banner or browser settings. \n                Essential cookies cannot be disabled as they're required for basic website operation.\n              </p>\n              <p>\n                <strong>Do Not Track:</strong> We respect Do Not Track signals by disabling optional analytics and marketing cookies \n                while keeping essential functionality intact.\n              </p>\n              <p>\n                <strong>Contact:</strong> For cookie-related questions, email privacy@videoai.id or visit our <Link href=\"/contact\" className=\"text-cyan-400 hover:text-cyan-300\">contact page</Link>.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":13862},"client/src/pages/legal/data-requests.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, Download, Eye, Trash2, Edit } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useState } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function DataRequests() {\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    requestType: \"\",\n    description: \"\",\n    verificationCode: \"\"\n  });\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      // In a real app, this would send to your backend\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n      \n      toast({\n        title: \"Permintaan Data Terkirim\",\n        description: \"Kami akan memproses permintaan Anda dalam 5-10 hari kerja.\",\n      });\n      \n      setFormData({\n        name: \"\",\n        email: \"\",\n        requestType: \"\",\n        description: \"\",\n        verificationCode: \"\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Maaf, terjadi kesalahan. Silakan coba lagi atau hubungi kami.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Permintaan Data Pribadi\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Kelola data pribadi Anda sesuai dengan hak-hak UU PDP</p>\n        </div>\n\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Request Form */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8\">\n              <h2 className=\"text-2xl font-bold text-white mb-6\">Form Permintaan Data</h2>\n              \n              <form onSubmit={handleSubmit} className=\"space-y-6\">\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <Label htmlFor=\"name\" className=\"text-slate-300\">Nama Lengkap *</Label>\n                    <Input\n                      id=\"name\"\n                      value={formData.name}\n                      onChange={(e) => handleInputChange(\"name\", e.target.value)}\n                      required\n                      className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400\"\n                      placeholder=\"Sesuai dengan data di akun Anda\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"email\" className=\"text-slate-300\">Email Akun *</Label>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange(\"email\", e.target.value)}\n                      required\n                      className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400\"\n                      placeholder=\"Email yang terdaftar di VideoAI\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"requestType\" className=\"text-slate-300\">Jenis Permintaan *</Label>\n                  <Select value={formData.requestType} onValueChange={(value) => handleInputChange(\"requestType\", value)}>\n                    <SelectTrigger className=\"mt-2 bg-slate-700/50 border-slate-600 text-white\">\n                      <SelectValue placeholder=\"Pilih jenis permintaan data\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"access\">Akses Data (Data Portability)</SelectItem>\n                      <SelectItem value=\"rectification\">Koreksi Data (Data Rectification)</SelectItem>\n                      <SelectItem value=\"deletion\">Hapus Data (Data Deletion/Erasure)</SelectItem>\n                      <SelectItem value=\"restriction\">Pembatasan Pemrosesan (Processing Restriction)</SelectItem>\n                      <SelectItem value=\"objection\">Keberatan Pemrosesan (Processing Objection)</SelectItem>\n                      <SelectItem value=\"withdrawal\">Penarikan Persetujuan (Consent Withdrawal)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"description\" className=\"text-slate-300\">Deskripsi Permintaan *</Label>\n                  <Textarea\n                    id=\"description\"\n                    value={formData.description}\n                    onChange={(e) => handleInputChange(\"description\", e.target.value)}\n                    required\n                    rows={4}\n                    className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400 resize-none\"\n                    placeholder=\"Jelaskan secara detail permintaan Anda. Misalnya: data apa yang ingin diakses, bagian mana yang perlu dikoreksi, alasan penghapusan, dll.\"\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"verificationCode\" className=\"text-slate-300\">Kode Verifikasi</Label>\n                  <Input\n                    id=\"verificationCode\"\n                    value={formData.verificationCode}\n                    onChange={(e) => handleInputChange(\"verificationCode\", e.target.value)}\n                    className=\"mt-2 bg-slate-700/50 border-slate-600 text-white placeholder-slate-400\"\n                    placeholder=\"Akan dikirim ke email setelah form disubmit\"\n                  />\n                  <p className=\"text-slate-400 text-xs mt-1\">\n                    Kode verifikasi akan dikirim ke email Anda untuk konfirmasi identitas\n                  </p>\n                </div>\n\n                <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                  <p className=\"text-yellow-200 text-sm\">\n                    📋 <strong>Dokumen Pendukung:</strong> Untuk verifikasi identitas, Anda mungkin perlu \n                    mengirimkan scan KTP atau dokumen identitas lainnya melalui email terpisah setelah form ini disubmit.\n                  </p>\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 py-3\"\n                >\n                  {isSubmitting ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Memproses...\n                    </>\n                  ) : (\n                    \"Kirim Permintaan Data\"\n                  )}\n                </Button>\n              </form>\n            </div>\n          </div>\n\n          {/* Information Sidebar */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6\">\n              <h2 className=\"text-xl font-bold text-white mb-4\">Jenis Permintaan Data</h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-start gap-3\">\n                  <Eye className=\"w-5 h-5 text-blue-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Akses Data</h3>\n                    <p className=\"text-slate-300 text-sm\">Mendapatkan salinan lengkap data pribadi Anda</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-3\">\n                  <Edit className=\"w-5 h-5 text-green-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Koreksi Data</h3>\n                    <p className=\"text-slate-300 text-sm\">Memperbaiki data yang tidak akurat atau tidak lengkap</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-3\">\n                  <Trash2 className=\"w-5 h-5 text-red-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Hapus Data</h3>\n                    <p className=\"text-slate-300 text-sm\">Menghapus data pribadi secara permanen</p>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start gap-3\">\n                  <Download className=\"w-5 h-5 text-purple-400 mt-1\" />\n                  <div>\n                    <h3 className=\"font-semibold text-white\">Portabilitas</h3>\n                    <p className=\"text-slate-300 text-sm\">Mengunduh data dalam format yang dapat dibaca mesin</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6\">\n              <h2 className=\"text-xl font-bold text-white mb-4\">Timeline Pemrosesan</h2>\n              \n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Konfirmasi Penerimaan</span>\n                  <span className=\"text-green-400 font-semibold\">24 jam</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Verifikasi Identitas</span>\n                  <span className=\"text-yellow-400 font-semibold\">1-3 hari</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Pemrosesan Permintaan</span>\n                  <span className=\"text-orange-400 font-semibold\">5-10 hari</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-slate-300\">Pengiriman Hasil</span>\n                  <span className=\"text-blue-400 font-semibold\">1-2 hari</span>\n                </div>\n              </div>\n\n              <div className=\"mt-4 p-3 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\n                <p className=\"text-blue-200 text-sm\">\n                  📅 <strong>Total:</strong> Maksimal 30 hari sesuai dengan ketentuan UU PDP Indonesia\n                </p>\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6\">\n              <h2 className=\"text-xl font-bold text-white mb-4\">Data yang Tersedia</h2>\n              \n              <div className=\"space-y-3 text-sm\">\n                <div>\n                  <h3 className=\"font-semibold text-white\">Informasi Akun:</h3>\n                  <p className=\"text-slate-300\">Nama, email, tanggal registrasi, pengaturan</p>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-white\">Konten & Aktivitas:</h3>\n                  <p className=\"text-slate-300\">Prompt, video yang dibuat, riwayat penggunaan</p>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-white\">Data Teknis:</h3>\n                  <p className=\"text-slate-300\">Log akses, IP address, device information</p>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-white\">Transaksi:</h3>\n                  <p className=\"text-slate-300\">Riwayat pembayaran, invoice, langganan</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-6\">\n              <h2 className=\"text-xl font-bold text-white mb-4\">Kontak & Bantuan</h2>\n              \n              <div className=\"space-y-2 text-sm\">\n                <p><strong>Data Protection Officer:</strong></p>\n                <p className=\"text-slate-300\">Email: dpo@videoai.id</p>\n                <p className=\"text-slate-300\">Phone: +62 21 XXXX XXXX (ext. 4)</p>\n                <p className=\"text-slate-300\">Hours: Senin-Jumat, 09:00-17:00 WIB</p>\n              </div>\n\n              <div className=\"mt-4 p-3 bg-green-900/20 border border-green-500/30 rounded-lg\">\n                <p className=\"text-green-200 text-sm\">\n                  📞 <strong>Urgent:</strong> Untuk permintaan mendesak, hubungi hotline 24/7\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* English Summary */}\n        <div className=\"mt-12 bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8\">\n          <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n          <div className=\"space-y-4 text-slate-300\">\n            <p>\n              <strong>Data Rights:</strong> Request data access, rectification, deletion, processing restriction, \n              objection, or consent withdrawal per Indonesian Personal Data Protection Law.\n            </p>\n            <p>\n              <strong>Request Types:</strong> Data portability (download your data), correction of inaccurate information, \n              permanent deletion, processing limitations, and consent management.\n            </p>\n            <p>\n              <strong>Process Timeline:</strong> 24-hour acknowledgment, 1-3 day identity verification, \n              5-10 day processing, maximum 30 days total as required by Indonesian law.\n            </p>\n            <p>\n              <strong>Available Data:</strong> Account information, content & activity history, technical logs, \n              and transaction records in machine-readable format.\n            </p>\n            <p>\n              <strong>Contact:</strong> Data Protection Officer at dpo@videoai.id, phone +62 21 XXXX XXXX (ext. 4), \n              business hours Monday-Friday 09:00-17:00 WIB.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":14723},"client/src/pages/legal/dmca.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, AlertTriangle, Mail, FileText } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function DMCAPolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Kebijakan DMCA & Hak Cipta\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n            <p className=\"text-yellow-200 text-sm\">\n              <strong>Penting:</strong> Ini bukan nasihat hukum. Kebijakan ini adalah templat umum yang harus disesuaikan dengan kebutuhan spesifik dan dikonsultasikan dengan ahli hukum.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Komitmen terhadap Hak Cipta</h2>\n            <p className=\"text-slate-300 mb-4\">\n              VideoAI menghormati hak kekayaan intelektual dan berkomitmen untuk melindungi hak cipta sesuai dengan:\n            </p>\n            <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n              <li>Digital Millennium Copyright Act (DMCA) Amerika Serikat</li>\n              <li>Undang-Undang Hak Cipta Indonesia (UU No. 28 Tahun 2014)</li>\n              <li>Konvensi Berne untuk Perlindungan Karya Sastra dan Seni</li>\n              <li>Perjanjian internasional lainnya tentang hak cipta</li>\n            </ul>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Kebijakan Takedown</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                Jika Anda yakin bahwa konten di platform VideoAI melanggar hak cipta Anda, Anda dapat mengajukan permintaan takedown melalui prosedur berikut:\n              </p>\n              \n              <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <AlertTriangle className=\"w-5 h-5 text-red-400\" />\n                  <h3 className=\"font-semibold text-red-200\">Persyaratan DMCA Takedown</h3>\n                </div>\n                <p className=\"text-red-100 text-sm\">\n                  Perhatian: Mengajukan klaim hak cipta palsu dapat mengakibatkan konsekuensi hukum termasuk denda dan tuntutan pidana. \n                  Pastikan Anda memiliki hak yang sah sebelum mengajukan takedown notice.\n                </p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Informasi yang Diperlukan untuk Takedown Notice</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300 mb-4\">\n                Takedown notice yang valid harus mencakup informasi berikut:\n              </p>\n              \n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Informasi Wajib:</h3>\n                <ol className=\"list-decimal list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Identifikasi Karya:</strong> Deskripsi detail karya yang dilindungi hak cipta yang diklaim dilanggar</li>\n                  <li><strong>Lokasi Konten:</strong> URL atau lokasi spesifik konten yang melanggar di platform kami</li>\n                  <li><strong>Informasi Kontak:</strong> Nama, alamat, nomor telepon, dan email address</li>\n                  <li><strong>Pernyataan Itikad Baik:</strong> Bahwa Anda yakin penggunaan tersebut tidak diizinkan oleh pemilik hak cipta</li>\n                  <li><strong>Pernyataan Akurasi:</strong> Bahwa informasi dalam notice adalah akurat</li>\n                  <li><strong>Tanda Tangan:</strong> Tanda tangan fisik atau elektronik dari pemilik hak cipta atau yang diberi wewenang</li>\n                  <li><strong>Bukti Kepemilikan:</strong> Dokumentasi yang membuktikan kepemilikan atau kewenangan atas karya tersebut</li>\n                </ol>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-blue-200 mb-2\">Template Takedown Notice</h3>\n                <p className=\"text-blue-100 text-sm mb-2\">Anda dapat menggunakan template berikut sebagai panduan:</p>\n                <div className=\"bg-slate-800/70 rounded p-3 text-xs text-slate-300 font-mono\">\n                  <p>To: dmca@videoai.id</p>\n                  <p>Subject: DMCA Takedown Notice</p>\n                  <br />\n                  <p>I am writing to notify you of copyright infringement on your platform.</p>\n                  <p>Copyrighted work: [Describe your work]</p>\n                  <p>Infringing content URL: [Specific URL/location]</p>\n                  <p>My contact information: [Full details]</p>\n                  <p>I have a good faith belief that the use is not authorized...</p>\n                  <p>I swear under penalty of perjury that the information is accurate...</p>\n                  <p>Signature: [Your signature]</p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Proses Penanganan Takedown</h2>\n            <div className=\"space-y-4\">\n              <div className=\"grid md:grid-cols-4 gap-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">1</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Penerimaan</h3>\n                  <p className=\"text-slate-300 text-sm\">Notice diterima dan direview dalam 24 jam</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">2</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Verifikasi</h3>\n                  <p className=\"text-slate-300 text-sm\">Kelengkapan dan validitas notice diperiksa</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">3</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Tindakan</h3>\n                  <p className=\"text-slate-300 text-sm\">Konten dihapus atau akses dibatasi jika valid</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">4</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Notifikasi</h3>\n                  <p className=\"text-slate-300 text-sm\">Pemilik konten diberi tahu tentang takedown</p>\n                </div>\n              </div>\n\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Timeline Respons:</h3>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 ml-4\">\n                  <li><strong>24 jam:</strong> Konfirmasi penerimaan notice</li>\n                  <li><strong>48-72 jam:</strong> Review dan verifikasi kelengkapan</li>\n                  <li><strong>5-7 hari:</strong> Tindakan takedown (jika notice valid)</li>\n                  <li><strong>10-14 hari:</strong> Proses counter-notice (jika ada)</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Counter-Notice dan Pemulihan</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                Jika Anda yakin konten Anda dihapus secara keliru, Anda dapat mengajukan counter-notice dengan informasi berikut:\n              </p>\n              \n              <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-green-200 mb-2\">Persyaratan Counter-Notice:</h3>\n                <ol className=\"list-decimal list-inside space-y-2 text-slate-300 ml-4\">\n                  <li>Identifikasi konten yang dihapus dan lokasi sebelumnya</li>\n                  <li>Pernyataan bahwa Anda yakin konten dihapus secara keliru</li>\n                  <li>Persetujuan untuk tunduk pada yurisdiksi pengadilan federal</li>\n                  <li>Informasi kontak lengkap</li>\n                  <li>Tanda tangan fisik atau elektronik</li>\n                </ol>\n              </div>\n\n              <p className=\"text-slate-300\">\n                Setelah menerima counter-notice yang valid, kami akan memulihkan konten dalam 10-14 hari kerja \n                kecuali pemilik hak cipta mengajukan tindakan hukum.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Kebijakan Repeat Infringer</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                VideoAI memiliki kebijakan untuk menangani pelanggaran berulang:\n              </p>\n              \n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-yellow-200 mb-2\">Konsekuensi Pelanggaran Berulang:</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Pelanggaran 1:</strong> Peringatan dan penghapusan konten</li>\n                  <li><strong>Pelanggaran 2:</strong> Pembatasan sementara akun (7-30 hari)</li>\n                  <li><strong>Pelanggaran 3:</strong> Penonaktifan akun permanen</li>\n                  <li><strong>Pelanggaran Berat:</strong> Penonaktifan langsung + tindakan hukum</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Fair Use dan Pengecualian</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300 mb-4\">\n                Kami menghormati prinsip fair use/fair dealing yang memungkinkan penggunaan terbatas karya berhak cipta untuk:\n              </p>\n              \n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-white mb-2\">Penggunaan yang Diizinkan:</h3>\n                  <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                    <li>Kritik dan review</li>\n                    <li>Komentar berita</li>\n                    <li>Parodi dan satire</li>\n                    <li>Tujuan pendidikan</li>\n                    <li>Penelitian dan studi</li>\n                  </ul>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-white mb-2\">Faktor Pertimbangan:</h3>\n                  <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                    <li>Tujuan dan karakter penggunaan</li>\n                    <li>Sifat karya yang dilindungi</li>\n                    <li>Jumlah dan substansi yang digunakan</li>\n                    <li>Efek pada pasar karya asli</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">8. Kontak DMCA Agent</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <div className=\"flex items-center gap-2 mb-3\">\n                <Mail className=\"w-5 h-5 text-purple-400\" />\n                <h3 className=\"text-lg font-semibold text-white\">DMCA Designated Agent</h3>\n              </div>\n              <div className=\"space-y-2 text-slate-300\">\n                <p><strong>Email:</strong> dmca@videoai.id</p>\n                <p><strong>Subject Line:</strong> DMCA Takedown Notice atau DMCA Counter-Notice</p>\n                <p><strong>Alamat Surat:</strong></p>\n                <div className=\"ml-4\">\n                  <p>VideoAI Legal Department</p>\n                  <p>DMCA Agent</p>\n                  <p>[Alamat lengkap akan diisi]</p>\n                  <p>Jakarta, Indonesia</p>\n                </div>\n                <p><strong>Telepon:</strong> +62 21 XXXX XXXX (khusus untuk DMCA)</p>\n              </div>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Copyright Respect:</strong> VideoAI respects intellectual property rights and complies with DMCA, \n                Indonesian Copyright Law, and international copyright treaties.\n              </p>\n              <p>\n                <strong>Takedown Process:</strong> Submit valid DMCA notices to dmca@videoai.id with required information: \n                work identification, infringing content location, contact details, good faith statement, accuracy declaration, and signature.\n              </p>\n              <p>\n                <strong>Response Timeline:</strong> 24-hour acknowledgment, 48-72 hour review, 5-7 day takedown action if valid, \n                10-14 day counter-notice process.\n              </p>\n              <p>\n                <strong>Repeat Infringers:</strong> Progressive enforcement from warnings to permanent account termination. \n                Fair use considerations for criticism, parody, education, and research.\n              </p>\n              <p>\n                <strong>Contact:</strong> DMCA Agent at dmca@videoai.id for all copyright-related matters.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":15090},"client/src/pages/legal/privacy.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function PrivacyPolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Kebijakan Privasi\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n            <p className=\"text-yellow-200 text-sm\">\n              <strong>Penting:</strong> Ini bukan nasihat hukum. Kebijakan ini adalah templat umum yang harus disesuaikan dengan kebutuhan spesifik dan dikonsultasikan dengan ahli hukum.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Informasi yang Kami Kumpulkan</h2>\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-white\">Informasi Pribadi</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Nama dan alamat email saat Anda mendaftar</li>\n                <li>Informasi pembayaran (diproses melalui penyedia pembayaran pihak ketiga)</li>\n                <li>Prompt teks yang Anda masukkan untuk menghasilkan video</li>\n                <li>Video yang dihasilkan oleh AI berdasarkan input Anda</li>\n              </ul>\n\n              <h3 className=\"text-xl font-semibold text-white\">Informasi Teknis</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Alamat IP dan informasi lokasi umum</li>\n                <li>Jenis browser dan sistem operasi</li>\n                <li>Data penggunaan dan preferensi</li>\n                <li>Cookie dan teknologi pelacakan serupa</li>\n              </ul>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Dasar Hukum Pemrosesan Data</h2>\n            <p className=\"text-slate-300 mb-4\">\n              Sesuai UU No. 27 Tahun 2022 tentang Perlindungan Data Pribadi (UU PDP), kami memproses data pribadi Anda berdasarkan:\n            </p>\n            <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n              <li><strong>Persetujuan:</strong> Untuk layanan video AI dan komunikasi pemasaran</li>\n              <li><strong>Pelaksanaan Kontrak:</strong> Untuk memberikan layanan yang Anda minta</li>\n              <li><strong>Kepentingan Sah:</strong> Untuk keamanan, analitik, dan peningkatan layanan</li>\n              <li><strong>Kewajiban Hukum:</strong> Untuk mematuhi peraturan yang berlaku</li>\n            </ul>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Tujuan Penggunaan Data</h2>\n            <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n              <li>Menyediakan layanan pembuatan video AI</li>\n              <li>Memproses pembayaran dan mengelola akun</li>\n              <li>Memberikan dukungan pelanggan</li>\n              <li>Meningkatkan kualitas layanan dan mengembangkan fitur baru</li>\n              <li>Mencegah penipuan dan memastikan keamanan platform</li>\n              <li>Mematuhi kewajiban hukum dan peraturan</li>\n            </ul>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Penyimpanan dan Retensi Data</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                <strong>Lokasi:</strong> Data disimpan di server yang berlokasi di Indonesia dan/atau penyedia cloud terpercaya dengan perlindungan data yang memadai.\n              </p>\n              <p className=\"text-slate-300\">\n                <strong>Periode Retensi:</strong>\n              </p>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Data akun: Selama akun aktif + 5 tahun setelah penutupan</li>\n                <li>Video yang dihasilkan: 90 hari kecuali diunduh atau disimpan oleh pengguna</li>\n                <li>Log teknis: 12 bulan</li>\n                <li>Data pembayaran: 10 tahun untuk keperluan akuntansi dan pajak</li>\n              </ul>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Hak-Hak Anda</h2>\n            <p className=\"text-slate-300 mb-4\">Sesuai UU PDP, Anda memiliki hak untuk:</p>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Mengakses data pribadi Anda</li>\n                <li>Mengoreksi data yang tidak akurat</li>\n                <li>Menghapus data pribadi</li>\n                <li>Membatasi pemrosesan data</li>\n              </ul>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Portabilitas data</li>\n                <li>Menolak pemrosesan tertentu</li>\n                <li>Menarik persetujuan</li>\n                <li>Mengajukan keluhan ke otoritas</li>\n              </ul>\n            </div>\n            <p className=\"text-slate-300 mt-4\">\n              Untuk menggunakan hak-hak ini, silakan hubungi kami di <Link href=\"/contact\" className=\"text-purple-400 hover:text-purple-300\">halaman kontak</Link> atau email privacy@videoai.id\n            </p>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Keamanan Data</h2>\n            <p className=\"text-slate-300 mb-4\">\n              Kami menerapkan langkah-langkah keamanan teknis dan organisatoris yang sesuai untuk melindungi data pribadi Anda:\n            </p>\n            <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n              <li>Enkripsi data dalam transit dan saat istirahat</li>\n              <li>Kontrol akses yang ketat dan autentikasi multi-faktor</li>\n              <li>Audit keamanan berkala dan pemantauan sistem</li>\n              <li>Pelatihan keamanan untuk tim kami</li>\n            </ul>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Transfer Data Lintas Batas</h2>\n            <p className=\"text-slate-300\">\n              Jika data Anda ditransfer ke luar Indonesia, kami memastikan bahwa negara atau organisasi penerima memberikan tingkat perlindungan yang memadai sesuai dengan UU PDP dan standar internasional seperti klausul kontraktual standar atau sertifikasi yang diakui.\n            </p>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">8. Perubahan Kebijakan</h2>\n            <p className=\"text-slate-300\">\n              Kami dapat memperbarui kebijakan privasi ini dari waktu ke waktu. Perubahan signifikan akan diberitahukan melalui email atau pemberitahuan di platform kami. Penggunaan berkelanjutan layanan kami setelah perubahan dianggap sebagai persetujuan terhadap kebijakan yang diperbarui.\n            </p>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">9. Kontak</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <p className=\"text-slate-300\">\n                <strong>Data Protection Officer:</strong><br />\n                Email: privacy@videoai.id<br />\n                Alamat: [Alamat lengkap akan diisi sesuai lokasi bisnis]<br />\n                Telepon: [Nomor telepon untuk pertanyaan privasi]\n              </p>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Data Collection:</strong> We collect personal information (name, email, payment info), content you create, and technical data (IP address, browser info, usage data).\n              </p>\n              <p>\n                <strong>Legal Basis:</strong> We process your data based on consent, contract performance, legitimate interests, and legal obligations under Indonesian Personal Data Protection Law (Law No. 27/2022).\n              </p>\n              <p>\n                <strong>Your Rights:</strong> You have rights to access, correct, delete, restrict processing, data portability, object to processing, withdraw consent, and file complaints.\n              </p>\n              <p>\n                <strong>Security:</strong> We implement appropriate technical and organizational measures including encryption, access controls, and regular security audits.\n              </p>\n              <p>\n                <strong>Contact:</strong> For privacy questions, contact privacy@videoai.id or visit our <Link href=\"/contact\" className=\"text-cyan-400 hover:text-cyan-300\">contact page</Link>.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9790},"client/src/pages/legal/refund.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, CreditCard, Calendar, CheckCircle, XCircle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function RefundPolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Kebijakan Refund & Penagihan\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n            <p className=\"text-yellow-200 text-sm\">\n              <strong>Penting:</strong> Ini bukan nasihat hukum. Kebijakan ini adalah templat umum yang harus disesuaikan dengan kebutuhan spesifik dan dikonsultasikan dengan ahli hukum.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Masa Refund</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <Calendar className=\"w-5 h-5 text-green-400\" />\n                  <h3 className=\"font-semibold text-green-200\">7 Hari Masa Refund</h3>\n                </div>\n                <p className=\"text-green-100 text-sm\">\n                  Anda dapat mengajukan refund dalam 7 hari kalender pertama setelah pembelian langganan baru. \n                  Periode ini dihitung dari tanggal transaksi berhasil diproses.\n                </p>\n              </div>\n\n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-white mb-2\">Yang Memenuhi Syarat:</h3>\n                  <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                    <li>Langganan bulanan atau tahunan baru</li>\n                    <li>Upgrade paket pertama kali</li>\n                    <li>Pembelian credit pack</li>\n                    <li>Add-on premium features</li>\n                  </ul>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-white mb-2\">Yang Tidak Memenuhi Syarat:</h3>\n                  <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                    <li>Perpanjangan langganan otomatis</li>\n                    <li>Downgrade atau perubahan paket</li>\n                    <li>Akun yang sudah dibanned</li>\n                    <li>Pembelian lebih dari 7 hari</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Kondisi Kelayakan Refund</h2>\n            <div className=\"space-y-6\">\n              <div className=\"bg-green-900/10 border border-green-500/20 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <CheckCircle className=\"w-5 h-5 text-green-400\" />\n                  <h3 className=\"text-xl font-semibold text-green-300\">Kondisi yang Memenuhi Syarat</h3>\n                </div>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Masalah Teknis Berkepanjangan:</strong> Platform tidak dapat digunakan lebih dari 48 jam berturut-turut</li>\n                  <li><strong>Fitur Tidak Sesuai Deskripsi:</strong> Fitur yang dijanjikan tidak tersedia atau tidak berfungsi</li>\n                  <li><strong>Kesalahan Penagihan:</strong> Charged untuk paket yang tidak dipilih atau duplikasi payment</li>\n                  <li><strong>Ketidakpuasan Pertama Kali:</strong> Untuk pengguna baru yang tidak puas dengan layanan</li>\n                  <li><strong>Force Majeure:</strong> Layanan terganggu karena kejadian di luar kendali kami</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-red-900/10 border border-red-500/20 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <XCircle className=\"w-5 h-5 text-red-400\" />\n                  <h3 className=\"text-xl font-semibold text-red-300\">Kondisi yang Tidak Memenuhi Syarat</h3>\n                </div>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Penyalahgunaan Layanan:</strong> Melanggar terms of service atau acceptable use policy</li>\n                  <li><strong>Penggunaan Berlebihan:</strong> Sudah menggunakan lebih dari 80% kuota bulanan</li>\n                  <li><strong>Perubahan Pikiran:</strong> Tidak ada alasan teknis atau masalah layanan</li>\n                  <li><strong>Testing Purposes:</strong> Menggunakan untuk keperluan testing tanpa niat berlangganan</li>\n                  <li><strong>Konkursi/Benchmarking:</strong> Menggunakan untuk membandingkan dengan kompetitor</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Jenis Refund</h2>\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <CreditCard className=\"w-5 h-5 text-blue-400\" />\n                  <h3 className=\"font-semibold text-white\">Full Refund</h3>\n                </div>\n                <p className=\"text-slate-300 text-sm mb-2\">100% pengembalian dana</p>\n                <ul className=\"text-xs text-slate-400 space-y-1\">\n                  <li>• Masalah teknis kami</li>\n                  <li>• Kesalahan penagihan</li>\n                  <li>• Fitur tidak sesuai</li>\n                </ul>\n              </div>\n              \n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <CreditCard className=\"w-5 h-5 text-yellow-400\" />\n                  <h3 className=\"font-semibold text-white\">Pro-rata Refund</h3>\n                </div>\n                <p className=\"text-slate-300 text-sm mb-2\">Sesuai penggunaan</p>\n                <ul className=\"text-xs text-slate-400 space-y-1\">\n                  <li>• Downgrade sukarela</li>\n                  <li>• Batal di tengah periode</li>\n                  <li>• Upgrade tidak sesuai</li>\n                </ul>\n              </div>\n              \n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <CreditCard className=\"w-5 h-5 text-green-400\" />\n                  <h3 className=\"font-semibold text-white\">Credit Refund</h3>\n                </div>\n                <p className=\"text-slate-300 text-sm mb-2\">Dalam bentuk credit</p>\n                <ul className=\"text-xs text-slate-400 space-y-1\">\n                  <li>• Bonus credit pack</li>\n                  <li>• Kompensasi downtime</li>\n                  <li>• Goodwill gesture</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Proses Pengajuan Refund</h2>\n            <div className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-4 gap-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">1</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Ajukan Request</h3>\n                  <p className=\"text-slate-300 text-sm\">Kirim email ke billing@videoai.id</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">2</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Review</h3>\n                  <p className=\"text-slate-300 text-sm\">Tim review dalam 24-48 jam</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">3</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Keputusan</h3>\n                  <p className=\"text-slate-300 text-sm\">Notification via email</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">4</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Refund</h3>\n                  <p className=\"text-slate-300 text-sm\">Proses 5-10 hari kerja</p>\n                </div>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-blue-200 mb-2\">Informasi yang Diperlukan:</h3>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 ml-4 text-sm\">\n                  <li>Nama lengkap dan email akun</li>\n                  <li>Invoice number atau transaction ID</li>\n                  <li>Tanggal pembelian</li>\n                  <li>Alasan refund yang detail</li>\n                  <li>Screenshot error (jika ada masalah teknis)</li>\n                  <li>Metode pembayaran yang digunakan</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Timeline Refund</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Estimasi Waktu Pemrosesan:</h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-cyan-300 mb-2\">Metode Pembayaran:</h4>\n                    <ul className=\"space-y-1 text-slate-300 text-sm\">\n                      <li><strong>Kartu Kredit/Debit:</strong> 5-10 hari kerja</li>\n                      <li><strong>E-wallet (GoPay, OVO, DANA):</strong> 1-3 hari kerja</li>\n                      <li><strong>Transfer Bank:</strong> 3-7 hari kerja</li>\n                      <li><strong>Virtual Account:</strong> 3-5 hari kerja</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-cyan-300 mb-2\">Faktor yang Mempengaruhi:</h4>\n                    <ul className=\"space-y-1 text-slate-300 text-sm\">\n                      <li>• Bank processing time</li>\n                      <li>• Weekend dan hari libur</li>\n                      <li>• Verifikasi tambahan</li>\n                      <li>• Kebijakan payment gateway</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Pajak dan Biaya</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-yellow-200 mb-2\">Penting tentang Pajak:</h3>\n                <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>PPN:</strong> Pajak yang telah dibayar tidak dapat dikembalikan sesuai regulasi pajak Indonesia</li>\n                  <li><strong>Refund Amount:</strong> Jumlah refund adalah harga dasar sebelum pajak</li>\n                  <li><strong>Invoice Adjustment:</strong> Invoice akan disesuaikan untuk keperluan akuntansi</li>\n                  <li><strong>Tax Reporting:</strong> Tetap dilaporkan sebagai transaksi untuk compliance</li>\n                </ul>\n              </div>\n\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-2\">Biaya Processing:</h3>\n                <p className=\"text-slate-300 text-sm mb-2\">\n                  VideoAI menanggung biaya processing refund. Namun, beberapa kondisi mungkin berlaku:\n                </p>\n                <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                  <li>Payment gateway fees tidak dapat dikembalikan</li>\n                  <li>Currency conversion fees (untuk pembayaran internasional)</li>\n                  <li>Bank charges dari pihak ketiga</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Sengketa dan Penyelesaian</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                Jika Anda tidak puas dengan keputusan refund, Anda dapat:\n              </p>\n              \n              <div className=\"grid md:grid-cols-2 gap-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-white mb-2\">Opsi Penyelesaian:</h3>\n                  <ol className=\"list-decimal list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                    <li>Escalate ke Customer Success Manager</li>\n                    <li>Mediasi internal dengan tim legal</li>\n                    <li>Arbitrase melalui BANI</li>\n                    <li>Pengadilan komersial (upaya terakhir)</li>\n                  </ol>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <h3 className=\"font-semibold text-white mb-2\">Timeline Sengketa:</h3>\n                  <ul className=\"list-disc list-inside space-y-1 text-slate-300 text-sm ml-4\">\n                    <li>30 hari untuk mengajukan banding</li>\n                    <li>60 hari untuk mediasi internal</li>\n                    <li>90 hari untuk arbitrase</li>\n                    <li>1 tahun untuk tindakan hukum</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">8. Kontak dan Dukungan</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <p className=\"text-slate-300\">\n                <strong>Tim Billing & Refund:</strong><br />\n                Email: billing@videoai.id<br />\n                Subject: \"Refund Request - [Invoice Number]\"<br />\n                Phone: +62 21 XXXX XXXX (ext. 2)<br />\n                Business Hours: Monday-Friday, 09:00-18:00 WIB\n              </p>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Refund Period:</strong> 7-day refund window for new subscriptions, calculated from successful transaction date. \n                Covers new subscriptions, upgrades, credit packs, and premium add-ons.\n              </p>\n              <p>\n                <strong>Eligible Conditions:</strong> Technical issues lasting 48+ hours, features not matching description, \n                billing errors, first-time user dissatisfaction, and force majeure events.\n              </p>\n              <p>\n                <strong>Refund Types:</strong> Full refund (100%), pro-rata refund (usage-based), or credit refund. \n                Processing time: 1-10 business days depending on payment method.\n              </p>\n              <p>\n                <strong>Tax Policy:</strong> VAT cannot be refunded per Indonesian tax regulations. Refund amount is base price before tax. \n                Payment gateway fees are non-refundable.\n              </p>\n              <p>\n                <strong>Contact:</strong> Email billing@videoai.id with invoice number, purchase date, detailed reason, \n                and supporting documentation for refund requests.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":17284},"client/src/pages/legal/security.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft, Shield, Lock, Eye, AlertTriangle } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function SecurityPolicy() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Keamanan & Pelaporan Kerentanan\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n            <p className=\"text-blue-200 text-sm\">\n              🔒 <strong>Komitmen Keamanan:</strong> Keamanan data dan privasi pengguna adalah prioritas utama kami. \n              Kami menerapkan standar keamanan industri untuk melindungi informasi Anda.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Praktik Keamanan Kami</h2>\n            <div className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <Lock className=\"w-5 h-5 text-blue-400\" />\n                    <h3 className=\"text-lg font-semibold text-white\">Enkripsi Data</h3>\n                  </div>\n                  <ul className=\"text-slate-300 text-sm space-y-1\">\n                    <li>• TLS 1.3 untuk data in transit</li>\n                    <li>• AES-256 untuk data at rest</li>\n                    <li>• End-to-end encryption untuk konten sensitif</li>\n                    <li>• Secure key management dengan HSM</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <Shield className=\"w-5 h-5 text-green-400\" />\n                    <h3 className=\"text-lg font-semibold text-white\">Kontrol Akses</h3>\n                  </div>\n                  <ul className=\"text-slate-300 text-sm space-y-1\">\n                    <li>• Multi-factor authentication (MFA)</li>\n                    <li>• Role-based access control (RBAC)</li>\n                    <li>• Principle of least privilege</li>\n                    <li>• Regular access review</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <Eye className=\"w-5 h-5 text-yellow-400\" />\n                    <h3 className=\"text-lg font-semibold text-white\">Monitoring & Logging</h3>\n                  </div>\n                  <ul className=\"text-slate-300 text-sm space-y-1\">\n                    <li>• 24/7 security monitoring</li>\n                    <li>• Comprehensive audit logging</li>\n                    <li>• Real-time threat detection</li>\n                    <li>• Incident response automation</li>\n                  </ul>\n                </div>\n\n                <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <AlertTriangle className=\"w-5 h-5 text-orange-400\" />\n                    <h3 className=\"text-lg font-semibold text-white\">Vulnerability Management</h3>\n                  </div>\n                  <ul className=\"text-slate-300 text-sm space-y-1\">\n                    <li>• Regular security assessments</li>\n                    <li>• Automated vulnerability scanning</li>\n                    <li>• Penetration testing</li>\n                    <li>• Bug bounty program</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Compliance dan Sertifikasi</h2>\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                <h3 className=\"font-semibold text-white mb-2\">ISO 27001</h3>\n                <p className=\"text-slate-300 text-sm\">Information Security Management</p>\n              </div>\n              <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                <h3 className=\"font-semibold text-white mb-2\">SOC 2 Type II</h3>\n                <p className=\"text-slate-300 text-sm\">Security & Availability Controls</p>\n              </div>\n              <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                <h3 className=\"font-semibold text-white mb-2\">GDPR Compliant</h3>\n                <p className=\"text-slate-300 text-sm\">European Data Protection</p>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Responsible Disclosure Program</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                Kami sangat menghargai peneliti keamanan yang membantu menjaga platform kami tetap aman. \n                Jika Anda menemukan kerentanan keamanan, harap laporkan melalui program responsible disclosure kami.\n              </p>\n\n              <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-green-200 mb-3\">Scope Program</h3>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">In Scope:</h4>\n                    <ul className=\"text-green-100 text-sm space-y-1\">\n                      <li>• *.videoai.id domains</li>\n                      <li>• Mobile applications</li>\n                      <li>• API endpoints</li>\n                      <li>• Infrastructure components</li>\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-white mb-2\">Out of Scope:</h4>\n                    <ul className=\"text-slate-300 text-sm space-y-1\">\n                      <li>• Third-party services</li>\n                      <li>• Physical security</li>\n                      <li>• Social engineering</li>\n                      <li>• DoS/DDoS attacks</li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-red-200 mb-3\">Prohibited Activities</h3>\n                <ul className=\"text-red-100 text-sm space-y-1\">\n                  <li>• Accessing or modifying data belonging to others</li>\n                  <li>• Disrupting our services or infrastructure</li>\n                  <li>• Social engineering attacks against employees</li>\n                  <li>• Physical attempts against our facilities</li>\n                  <li>• Automated scanning without permission</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Cara Melaporkan Kerentanan</h2>\n            <div className=\"space-y-4\">\n              <div className=\"bg-slate-700/50 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-white mb-3\">Informasi yang Diperlukan:</h3>\n                <ol className=\"list-decimal list-inside space-y-2 text-slate-300 ml-4\">\n                  <li><strong>Deskripsi Kerentanan:</strong> Jelaskan jenis kerentanan dan potensi dampaknya</li>\n                  <li><strong>Langkah Reproduksi:</strong> Berikan langkah detail untuk mereproduksi masalah</li>\n                  <li><strong>Proof of Concept:</strong> Sertakan screenshot, video, atau code (jika aman)</li>\n                  <li><strong>Tingkat Keparahan:</strong> Estimasi tingkat risiko (Critical, High, Medium, Low)</li>\n                  <li><strong>Sistem Terdampak:</strong> Sebutkan URL, endpoint, atau komponen spesifik</li>\n                  <li><strong>Informasi Kontak:</strong> Nama, email, dan cara menghubungi Anda</li>\n                </ol>\n              </div>\n\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-blue-200 mb-2\">Kontak Security Team</h3>\n                <div className=\"space-y-2 text-blue-100\">\n                  <p><strong>Email:</strong> security@videoai.id</p>\n                  <p><strong>PGP Key:</strong> Available upon request</p>\n                  <p><strong>Response Time:</strong> Initial response within 24 hours</p>\n                  <p><strong>Language:</strong> Bahasa Indonesia atau English</p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Process Timeline</h2>\n            <div className=\"space-y-4\">\n              <div className=\"grid md:grid-cols-4 gap-4\">\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">1</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Laporan Diterima</h3>\n                  <p className=\"text-slate-300 text-sm\">24 jam konfirmasi</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">2</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Verifikasi</h3>\n                  <p className=\"text-slate-300 text-sm\">3-5 hari kerja</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">3</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Perbaikan</h3>\n                  <p className=\"text-slate-300 text-sm\">Tergantung tingkat keparahan</p>\n                </div>\n                <div className=\"bg-slate-700/50 rounded-lg p-4 text-center\">\n                  <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center text-white font-bold mx-auto mb-2\">4</div>\n                  <h3 className=\"font-semibold text-white mb-1\">Disclosure</h3>\n                  <p className=\"text-slate-300 text-sm\">90 hari setelah fix</p>\n                </div>\n              </div>\n\n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n                <h3 className=\"text-lg font-semibold text-yellow-200 mb-2\">SLA Response Times:</h3>\n                <ul className=\"text-yellow-100 text-sm space-y-1\">\n                  <li><strong>Critical:</strong> 4 jam (fix dalam 24 jam)</li>\n                  <li><strong>High:</strong> 24 jam (fix dalam 72 jam)</li>\n                  <li><strong>Medium:</strong> 72 jam (fix dalam 1 minggu)</li>\n                  <li><strong>Low:</strong> 1 minggu (fix dalam 1 bulan)</li>\n                </ul>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Recognition & Rewards</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                Kami menghargai kontribusi peneliti keamanan dengan:\n              </p>\n              \n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"bg-gradient-to-r from-yellow-900/30 to-orange-900/30 rounded-lg p-4 border border-yellow-500/30\">\n                  <h3 className=\"font-semibold text-yellow-200 mb-2\">Hall of Fame</h3>\n                  <p className=\"text-yellow-100 text-sm\">\n                    Pengakuan publik untuk kontributor (dengan persetujuan)\n                  </p>\n                </div>\n                <div className=\"bg-gradient-to-r from-green-900/30 to-blue-900/30 rounded-lg p-4 border border-green-500/30\">\n                  <h3 className=\"font-semibold text-green-200 mb-2\">Bug Bounty</h3>\n                  <p className=\"text-green-100 text-sm\">\n                    Monetary rewards untuk kerentanan yang memenuhi syarat\n                  </p>\n                </div>\n                <div className=\"bg-gradient-to-r from-purple-900/30 to-pink-900/30 rounded-lg p-4 border border-purple-500/30\">\n                  <h3 className=\"font-semibold text-purple-200 mb-2\">Swag & Merch</h3>\n                  <p className=\"text-purple-100 text-sm\">\n                    Merchandise eksklusif untuk peneliti yang berkontribusi\n                  </p>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Legal Safe Harbor</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <p className=\"text-slate-300 mb-4\">\n                VideoAI berkomitmen untuk tidak mengejar tindakan hukum terhadap peneliti keamanan yang:\n              </p>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Mengikuti panduan responsible disclosure</li>\n                <li>Melaporkan kerentanan dengan itikad baik</li>\n                <li>Tidak mengakses data pengguna atau mengganggu layanan</li>\n                <li>Memberikan waktu yang wajar untuk perbaikan sebelum disclosure publik</li>\n                <li>Tidak melanggar hukum atau peraturan yang berlaku</li>\n              </ul>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Security Practices:</strong> We implement industry-standard security including TLS 1.3 encryption, \n                AES-256 data protection, multi-factor authentication, and 24/7 monitoring with incident response.\n              </p>\n              <p>\n                <strong>Compliance:</strong> ISO 27001, SOC 2 Type II, and GDPR compliant with regular security assessments, \n                penetration testing, and automated vulnerability scanning.\n              </p>\n              <p>\n                <strong>Responsible Disclosure:</strong> Report security vulnerabilities to security@videoai.id with detailed \n                reproduction steps, proof of concept, and impact assessment.\n              </p>\n              <p>\n                <strong>Response Timeline:</strong> 24-hour acknowledgment, 3-5 day verification, priority-based fixing, \n                and 90-day coordinated disclosure with recognition and rewards for contributors.\n              </p>\n              <p>\n                <strong>Legal Protection:</strong> Safe harbor for researchers following responsible disclosure guidelines, \n                reporting in good faith, and respecting user data and service availability.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":16119},"client/src/pages/legal/terms.tsx":{"content":"import { Link } from \"wouter\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function TermsOfService() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <div className=\"mb-8\">\n          <Link href=\"/\">\n            <Button variant=\"ghost\" className=\"mb-4 text-slate-300 hover:text-white\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Kembali ke Beranda\n            </Button>\n          </Link>\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            Syarat dan Ketentuan\n          </h1>\n          <p className=\"text-slate-300 mt-2\">Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}</p>\n        </div>\n\n        <div className=\"bg-slate-800/50 backdrop-blur-sm rounded-2xl p-8 space-y-8\">\n          <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\n            <p className=\"text-yellow-200 text-sm\">\n              <strong>Penting:</strong> Ini bukan nasihat hukum. Syarat dan ketentuan ini adalah templat umum yang harus disesuaikan dengan kebutuhan spesifik dan dikonsultasikan dengan ahli hukum.\n            </p>\n          </div>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">1. Definisi Layanan</h2>\n            <p className=\"text-slate-300 mb-4\">\n              VideoAI adalah platform berbasis web yang menyediakan layanan pembuatan video otomatis menggunakan teknologi kecerdasan buatan (AI). Layanan ini memungkinkan pengguna untuk:\n            </p>\n            <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n              <li>Membuat video berdurasi 8 detik dari prompt teks</li>\n              <li>Menggunakan fitur peningkatan prompt otomatis</li>\n              <li>Mengunduh dan menggunakan video yang dihasilkan</li>\n              <li>Mengakses fitur analitik dan riwayat pembuatan</li>\n            </ul>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">2. Akun dan Registrasi</h2>\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-white\">Persyaratan Akun</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Anda harus berusia minimal 18 tahun atau memiliki izin orang tua/wali</li>\n                <li>Informasi yang diberikan harus akurat dan terkini</li>\n                <li>Satu orang hanya boleh memiliki satu akun aktif</li>\n                <li>Anda bertanggung jawab menjaga keamanan kata sandi akun</li>\n              </ul>\n              \n              <h3 className=\"text-xl font-semibold text-white\">Keamanan Akun</h3>\n              <p className=\"text-slate-300\">\n                Anda bertanggung jawab penuh atas semua aktivitas yang terjadi di akun Anda. Segera laporkan jika Anda mencurigai adanya penggunaan akun yang tidak sah.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">3. Pembayaran dan Penagihan</h2>\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-white\">Paket Layanan</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Layanan tersedia dalam paket gratis dan berbayar</li>\n                <li>Harga dapat berubah dengan pemberitahuan 30 hari sebelumnya</li>\n                <li>Pembayaran diproses secara otomatis sesuai siklus tagihan</li>\n                <li>Pajak yang berlaku akan ditambahkan sesuai regulasi</li>\n              </ul>\n\n              <h3 className=\"text-xl font-semibold text-white\">Kebijakan Refund</h3>\n              <p className=\"text-slate-300\">\n                Pengembalian dana dapat diajukan dalam 7 hari pertama setelah pembelian untuk langganan baru. \n                Lihat <Link href=\"/legal/refund\" className=\"text-purple-400 hover:text-purple-300\">kebijakan refund</Link> lengkap untuk detail.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">4. Lisensi dan Kepemilikan Konten</h2>\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-white\">Konten yang Anda Buat</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Anda memiliki hak kepemilikan atas prompt dan input yang Anda berikan</li>\n                <li>Video yang dihasilkan AI menjadi milik Anda untuk digunakan secara komersial</li>\n                <li>Kami memiliki lisensi terbatas untuk memproses dan menyimpan konten demi memberikan layanan</li>\n                <li>Kami tidak mengklaim kepemilikan atas konten yang Anda hasilkan</li>\n              </ul>\n\n              <h3 className=\"text-xl font-semibold text-white\">Konten Platform</h3>\n              <p className=\"text-slate-300\">\n                Semua aspek platform VideoAI (desain, kode, logo, merek dagang) adalah milik kami dan dilindungi hak cipta. \n                Anda tidak diizinkan menggunakan elemen platform tanpa izin tertulis.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">5. Batasan Penggunaan</h2>\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-white\">Larangan Penggunaan</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Membuat konten ilegal, melanggar hukum, atau melanggar hak orang lain</li>\n                <li>Menghasilkan konten yang mengandung kekerasan, pornografi, atau hate speech</li>\n                <li>Menyalahgunakan atau memanipulasi sistem untuk tujuan tidak sah</li>\n                <li>Melakukan reverse engineering atau mencoba mengakses kode sumber</li>\n                <li>Menggunakan layanan untuk spam atau distribusi malware</li>\n              </ul>\n\n              <h3 className=\"text-xl font-semibold text-white\">Batas Teknis</h3>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Maksimal 10 video dapat diproses bersamaan</li>\n                <li>Durasi video terbatas pada 8 detik</li>\n                <li>Rate limiting berlaku untuk mencegah penyalahgunaan</li>\n              </ul>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">6. Garansi dan Pembatasan Tanggung Jawab</h2>\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-white\">Disclaimer</h3>\n              <p className=\"text-slate-300\">\n                Layanan disediakan \"sebagaimana adanya\" tanpa garansi eksplisit maupun implisit. \n                Kami tidak menjamin bahwa layanan akan selalu tersedia, bebas error, atau memenuhi kebutuhan spesifik Anda.\n              </p>\n\n              <h3 className=\"text-xl font-semibold text-white\">Pembatasan Tanggung Jawab</h3>\n              <p className=\"text-slate-300\">\n                Dalam batas maksimal yang diizinkan hukum, kami tidak bertanggung jawab atas:\n              </p>\n              <ul className=\"list-disc list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Kerugian tidak langsung, insidental, atau konsekuensial</li>\n                <li>Kehilangan data, profit, atau peluang bisnis</li>\n                <li>Gangguan layanan atau downtime</li>\n                <li>Penggunaan konten yang dihasilkan oleh pihak ketiga</li>\n              </ul>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">7. Penghentian Layanan</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                <strong>Penghentian oleh Anda:</strong> Anda dapat menghentikan akun kapan saja melalui pengaturan akun atau dengan menghubungi dukungan pelanggan.\n              </p>\n              <p className=\"text-slate-300\">\n                <strong>Penghentian oleh Kami:</strong> Kami berhak menghentikan akun Anda jika melanggar syarat dan ketentuan, dengan atau tanpa pemberitahuan sebelumnya.\n              </p>\n              <p className=\"text-slate-300\">\n                <strong>Efek Penghentian:</strong> Setelah penghentian, akses Anda ke layanan akan dihentikan dan data dapat dihapus sesuai kebijakan retensi data.\n              </p>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">8. Hukum yang Berlaku dan Penyelesaian Sengketa</h2>\n            <div className=\"space-y-4\">\n              <p className=\"text-slate-300\">\n                <strong>Hukum yang Berlaku:</strong> Syarat dan ketentuan ini diatur oleh hukum Republik Indonesia.\n              </p>\n              <p className=\"text-slate-300\">\n                <strong>Penyelesaian Sengketa:</strong> Setiap sengketa akan diselesaikan melalui:\n              </p>\n              <ol className=\"list-decimal list-inside space-y-2 text-slate-300 ml-4\">\n                <li>Negosiasi dan mediasi dengan itikad baik</li>\n                <li>Arbitrase melalui BANI (Badan Arbitrase Nasional Indonesia)</li>\n                <li>Pengadilan yang berwenang di Jakarta, Indonesia sebagai upaya terakhir</li>\n              </ol>\n            </div>\n          </section>\n\n          <section>\n            <h2 className=\"text-2xl font-bold text-purple-300 mb-4\">9. Kontak dan Dukungan</h2>\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\n              <p className=\"text-slate-300\">\n                Untuk pertanyaan tentang syarat dan ketentuan ini:<br />\n                Email: legal@videoai.id<br />\n                Alamat: [Alamat lengkap akan diisi sesuai lokasi bisnis]<br />\n                Telepon: [Nomor telepon untuk pertanyaan legal]\n              </p>\n            </div>\n          </section>\n\n          {/* English Summary */}\n          <section className=\"mt-12 border-t border-slate-600 pt-8\">\n            <h2 className=\"text-2xl font-bold text-cyan-300 mb-4\">English Summary</h2>\n            <div className=\"space-y-4 text-slate-300\">\n              <p>\n                <strong>Service:</strong> VideoAI provides AI-powered 8-second video generation from text prompts with features like prompt enhancement and download capabilities.\n              </p>\n              <p>\n                <strong>Account:</strong> Users must be 18+ or have parental consent, provide accurate information, and maintain account security.\n              </p>\n              <p>\n                <strong>Content Rights:</strong> You own the videos you generate. We have limited license to process content for service delivery. Our platform content remains our property.\n              </p>\n              <p>\n                <strong>Restrictions:</strong> Prohibited uses include illegal content, violence, pornography, hate speech, system abuse, and spam.\n              </p>\n              <p>\n                <strong>Liability:</strong> Service provided \"as is\" with limited warranties. We're not liable for indirect damages, data loss, or business interruption.\n              </p>\n              <p>\n                <strong>Governing Law:</strong> Indonesian law applies. Disputes resolved through negotiation, arbitration (BANI), or Jakarta courts.\n              </p>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":11793},".local/state/replit/agent/progress_tracker.md":{"content":"[x] 1. Install the required packages\n[x] 2. Restart the workflow to see if the project is working\n[x] 3. Verify the project is working using the feedback tool\n[ ] 4. Inform user the import is completed and they can start building, mark the import as completed using the complete_project_import tool","size_bytes":298}}}